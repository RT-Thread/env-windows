.\" Man page generated from reStructuredText.
.
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.TH "QEMU-STORAGE-DAEMON-QMP-REF" "7" "Dec 30, 2022" "7.2.0" "QEMU"
.SH NAME
qemu-storage-daemon-qmp-ref \- QEMU Storage Daemon QMP Reference Manual
.SS Contents
.INDENT 0.0
.IP \(bu 2
\fI\%QEMU Storage Daemon QMP Reference Manual\fP
.INDENT 2.0
.IP \(bu 2
\fI\%Block devices\fP
.INDENT 2.0
.IP \(bu 2
\fI\%Block core (VM unrelated)\fP
.UNINDENT
.IP \(bu 2
\fI\%Common data types\fP
.INDENT 2.0
.IP \(bu 2
\fI\%IoOperationType (Enum)\fP
.IP \(bu 2
\fI\%OnOffAuto (Enum)\fP
.IP \(bu 2
\fI\%OnOffSplit (Enum)\fP
.IP \(bu 2
\fI\%String (Object)\fP
.IP \(bu 2
\fI\%StrOrNull (Alternate)\fP
.IP \(bu 2
\fI\%OffAutoPCIBAR (Enum)\fP
.IP \(bu 2
\fI\%PCIELinkSpeed (Enum)\fP
.IP \(bu 2
\fI\%PCIELinkWidth (Enum)\fP
.IP \(bu 2
\fI\%HostMemPolicy (Enum)\fP
.IP \(bu 2
\fI\%NetFilterDirection (Enum)\fP
.IP \(bu 2
\fI\%GrabToggleKeys (Enum)\fP
.IP \(bu 2
\fI\%HumanReadableText (Object)\fP
.UNINDENT
.IP \(bu 2
\fI\%Cryptography\fP
.INDENT 2.0
.IP \(bu 2
\fI\%QCryptoTLSCredsEndpoint (Enum)\fP
.IP \(bu 2
\fI\%QCryptoSecretFormat (Enum)\fP
.IP \(bu 2
\fI\%QCryptoHashAlgorithm (Enum)\fP
.IP \(bu 2
\fI\%QCryptoCipherAlgorithm (Enum)\fP
.IP \(bu 2
\fI\%QCryptoCipherMode (Enum)\fP
.IP \(bu 2
\fI\%QCryptoIVGenAlgorithm (Enum)\fP
.IP \(bu 2
\fI\%QCryptoBlockFormat (Enum)\fP
.IP \(bu 2
\fI\%QCryptoBlockOptionsBase (Object)\fP
.IP \(bu 2
\fI\%QCryptoBlockOptionsQCow (Object)\fP
.IP \(bu 2
\fI\%QCryptoBlockOptionsLUKS (Object)\fP
.IP \(bu 2
\fI\%QCryptoBlockCreateOptionsLUKS (Object)\fP
.IP \(bu 2
\fI\%QCryptoBlockOpenOptions (Object)\fP
.IP \(bu 2
\fI\%QCryptoBlockCreateOptions (Object)\fP
.IP \(bu 2
\fI\%QCryptoBlockInfoBase (Object)\fP
.IP \(bu 2
\fI\%QCryptoBlockInfoLUKSSlot (Object)\fP
.IP \(bu 2
\fI\%QCryptoBlockInfoLUKS (Object)\fP
.IP \(bu 2
\fI\%QCryptoBlockInfo (Object)\fP
.IP \(bu 2
\fI\%QCryptoBlockLUKSKeyslotState (Enum)\fP
.IP \(bu 2
\fI\%QCryptoBlockAmendOptionsLUKS (Object)\fP
.IP \(bu 2
\fI\%QCryptoBlockAmendOptions (Object)\fP
.IP \(bu 2
\fI\%SecretCommonProperties (Object)\fP
.IP \(bu 2
\fI\%SecretProperties (Object)\fP
.IP \(bu 2
\fI\%SecretKeyringProperties (Object)\fP
.IP \(bu 2
\fI\%TlsCredsProperties (Object)\fP
.IP \(bu 2
\fI\%TlsCredsAnonProperties (Object)\fP
.IP \(bu 2
\fI\%TlsCredsPskProperties (Object)\fP
.IP \(bu 2
\fI\%TlsCredsX509Properties (Object)\fP
.IP \(bu 2
\fI\%QCryptoAkCipherAlgorithm (Enum)\fP
.IP \(bu 2
\fI\%QCryptoAkCipherKeyType (Enum)\fP
.IP \(bu 2
\fI\%QCryptoRSAPaddingAlgorithm (Enum)\fP
.IP \(bu 2
\fI\%QCryptoAkCipherOptionsRSA (Object)\fP
.IP \(bu 2
\fI\%QCryptoAkCipherOptions (Object)\fP
.IP \(bu 2
\fI\%Background jobs\fP
.UNINDENT
.IP \(bu 2
\fI\%Socket data types\fP
.INDENT 2.0
.IP \(bu 2
\fI\%NetworkAddressFamily (Enum)\fP
.IP \(bu 2
\fI\%InetSocketAddressBase (Object)\fP
.IP \(bu 2
\fI\%InetSocketAddress (Object)\fP
.IP \(bu 2
\fI\%UnixSocketAddress (Object)\fP
.IP \(bu 2
\fI\%VsockSocketAddress (Object)\fP
.IP \(bu 2
\fI\%InetSocketAddressWrapper (Object)\fP
.IP \(bu 2
\fI\%UnixSocketAddressWrapper (Object)\fP
.IP \(bu 2
\fI\%VsockSocketAddressWrapper (Object)\fP
.IP \(bu 2
\fI\%StringWrapper (Object)\fP
.IP \(bu 2
\fI\%SocketAddressLegacy (Object)\fP
.IP \(bu 2
\fI\%SocketAddressType (Enum)\fP
.IP \(bu 2
\fI\%SocketAddress (Object)\fP
.IP \(bu 2
\fI\%SnapshotInfo (Object)\fP
.IP \(bu 2
\fI\%ImageInfoSpecificQCow2EncryptionBase (Object)\fP
.IP \(bu 2
\fI\%ImageInfoSpecificQCow2Encryption (Object)\fP
.IP \(bu 2
\fI\%ImageInfoSpecificQCow2 (Object)\fP
.IP \(bu 2
\fI\%ImageInfoSpecificVmdk (Object)\fP
.IP \(bu 2
\fI\%ImageInfoSpecificRbd (Object)\fP
.IP \(bu 2
\fI\%ImageInfoSpecificKind (Enum)\fP
.IP \(bu 2
\fI\%ImageInfoSpecificQCow2Wrapper (Object)\fP
.IP \(bu 2
\fI\%ImageInfoSpecificVmdkWrapper (Object)\fP
.IP \(bu 2
\fI\%ImageInfoSpecificLUKSWrapper (Object)\fP
.IP \(bu 2
\fI\%ImageInfoSpecificRbdWrapper (Object)\fP
.IP \(bu 2
\fI\%ImageInfoSpecific (Object)\fP
.IP \(bu 2
\fI\%ImageInfo (Object)\fP
.IP \(bu 2
\fI\%ImageCheck (Object)\fP
.IP \(bu 2
\fI\%MapEntry (Object)\fP
.IP \(bu 2
\fI\%BlockdevCacheInfo (Object)\fP
.IP \(bu 2
\fI\%BlockDeviceInfo (Object)\fP
.IP \(bu 2
\fI\%BlockDeviceIoStatus (Enum)\fP
.IP \(bu 2
\fI\%BlockDirtyInfo (Object)\fP
.IP \(bu 2
\fI\%Qcow2BitmapInfoFlags (Enum)\fP
.IP \(bu 2
\fI\%Qcow2BitmapInfo (Object)\fP
.IP \(bu 2
\fI\%BlockLatencyHistogramInfo (Object)\fP
.IP \(bu 2
\fI\%BlockInfo (Object)\fP
.IP \(bu 2
\fI\%BlockMeasureInfo (Object)\fP
.IP \(bu 2
\fI\%query\-block (Command)\fP
.IP \(bu 2
\fI\%BlockDeviceTimedStats (Object)\fP
.IP \(bu 2
\fI\%BlockDeviceStats (Object)\fP
.IP \(bu 2
\fI\%BlockStatsSpecificFile (Object)\fP
.IP \(bu 2
\fI\%BlockStatsSpecificNvme (Object)\fP
.IP \(bu 2
\fI\%BlockStatsSpecific (Object)\fP
.IP \(bu 2
\fI\%BlockStats (Object)\fP
.IP \(bu 2
\fI\%query\-blockstats (Command)\fP
.IP \(bu 2
\fI\%BlockdevOnError (Enum)\fP
.IP \(bu 2
\fI\%MirrorSyncMode (Enum)\fP
.IP \(bu 2
\fI\%BitmapSyncMode (Enum)\fP
.IP \(bu 2
\fI\%MirrorCopyMode (Enum)\fP
.IP \(bu 2
\fI\%BlockJobInfo (Object)\fP
.IP \(bu 2
\fI\%query\-block\-jobs (Command)\fP
.IP \(bu 2
\fI\%block_resize (Command)\fP
.IP \(bu 2
\fI\%NewImageMode (Enum)\fP
.IP \(bu 2
\fI\%BlockdevSnapshotSync (Object)\fP
.IP \(bu 2
\fI\%BlockdevSnapshot (Object)\fP
.IP \(bu 2
\fI\%BackupPerf (Object)\fP
.IP \(bu 2
\fI\%BackupCommon (Object)\fP
.IP \(bu 2
\fI\%DriveBackup (Object)\fP
.IP \(bu 2
\fI\%BlockdevBackup (Object)\fP
.IP \(bu 2
\fI\%blockdev\-snapshot\-sync (Command)\fP
.IP \(bu 2
\fI\%blockdev\-snapshot (Command)\fP
.IP \(bu 2
\fI\%change\-backing\-file (Command)\fP
.IP \(bu 2
\fI\%block\-commit (Command)\fP
.IP \(bu 2
\fI\%drive\-backup (Command)\fP
.IP \(bu 2
\fI\%blockdev\-backup (Command)\fP
.IP \(bu 2
\fI\%query\-named\-block\-nodes (Command)\fP
.IP \(bu 2
\fI\%XDbgBlockGraphNodeType (Enum)\fP
.IP \(bu 2
\fI\%XDbgBlockGraphNode (Object)\fP
.IP \(bu 2
\fI\%BlockPermission (Enum)\fP
.IP \(bu 2
\fI\%XDbgBlockGraphEdge (Object)\fP
.IP \(bu 2
\fI\%XDbgBlockGraph (Object)\fP
.IP \(bu 2
\fI\%x\-debug\-query\-block\-graph (Command)\fP
.IP \(bu 2
\fI\%drive\-mirror (Command)\fP
.IP \(bu 2
\fI\%DriveMirror (Object)\fP
.IP \(bu 2
\fI\%BlockDirtyBitmap (Object)\fP
.IP \(bu 2
\fI\%BlockDirtyBitmapAdd (Object)\fP
.IP \(bu 2
\fI\%BlockDirtyBitmapOrStr (Alternate)\fP
.IP \(bu 2
\fI\%BlockDirtyBitmapMerge (Object)\fP
.IP \(bu 2
\fI\%block\-dirty\-bitmap\-add (Command)\fP
.IP \(bu 2
\fI\%block\-dirty\-bitmap\-remove (Command)\fP
.IP \(bu 2
\fI\%block\-dirty\-bitmap\-clear (Command)\fP
.IP \(bu 2
\fI\%block\-dirty\-bitmap\-enable (Command)\fP
.IP \(bu 2
\fI\%block\-dirty\-bitmap\-disable (Command)\fP
.IP \(bu 2
\fI\%block\-dirty\-bitmap\-merge (Command)\fP
.IP \(bu 2
\fI\%BlockDirtyBitmapSha256 (Object)\fP
.IP \(bu 2
\fI\%x\-debug\-block\-dirty\-bitmap\-sha256 (Command)\fP
.IP \(bu 2
\fI\%blockdev\-mirror (Command)\fP
.IP \(bu 2
\fI\%BlockIOThrottle (Object)\fP
.IP \(bu 2
\fI\%ThrottleLimits (Object)\fP
.IP \(bu 2
\fI\%ThrottleGroupProperties (Object)\fP
.IP \(bu 2
\fI\%block\-stream (Command)\fP
.IP \(bu 2
\fI\%block\-job\-set\-speed (Command)\fP
.IP \(bu 2
\fI\%block\-job\-cancel (Command)\fP
.IP \(bu 2
\fI\%block\-job\-pause (Command)\fP
.IP \(bu 2
\fI\%block\-job\-resume (Command)\fP
.IP \(bu 2
\fI\%block\-job\-complete (Command)\fP
.IP \(bu 2
\fI\%block\-job\-dismiss (Command)\fP
.IP \(bu 2
\fI\%block\-job\-finalize (Command)\fP
.IP \(bu 2
\fI\%BlockdevDiscardOptions (Enum)\fP
.IP \(bu 2
\fI\%BlockdevDetectZeroesOptions (Enum)\fP
.IP \(bu 2
\fI\%BlockdevAioOptions (Enum)\fP
.IP \(bu 2
\fI\%BlockdevCacheOptions (Object)\fP
.IP \(bu 2
\fI\%BlockdevDriver (Enum)\fP
.IP \(bu 2
\fI\%BlockdevOptionsFile (Object)\fP
.IP \(bu 2
\fI\%BlockdevOptionsNull (Object)\fP
.IP \(bu 2
\fI\%BlockdevOptionsNVMe (Object)\fP
.IP \(bu 2
\fI\%BlockdevOptionsVVFAT (Object)\fP
.IP \(bu 2
\fI\%BlockdevOptionsGenericFormat (Object)\fP
.IP \(bu 2
\fI\%BlockdevOptionsLUKS (Object)\fP
.IP \(bu 2
\fI\%BlockdevOptionsGenericCOWFormat (Object)\fP
.IP \(bu 2
\fI\%Qcow2OverlapCheckMode (Enum)\fP
.IP \(bu 2
\fI\%Qcow2OverlapCheckFlags (Object)\fP
.IP \(bu 2
\fI\%Qcow2OverlapChecks (Alternate)\fP
.IP \(bu 2
\fI\%BlockdevQcowEncryptionFormat (Enum)\fP
.IP \(bu 2
\fI\%BlockdevQcowEncryption (Object)\fP
.IP \(bu 2
\fI\%BlockdevOptionsQcow (Object)\fP
.IP \(bu 2
\fI\%BlockdevQcow2EncryptionFormat (Enum)\fP
.IP \(bu 2
\fI\%BlockdevQcow2Encryption (Object)\fP
.IP \(bu 2
\fI\%BlockdevOptionsPreallocate (Object)\fP
.IP \(bu 2
\fI\%BlockdevOptionsQcow2 (Object)\fP
.IP \(bu 2
\fI\%SshHostKeyCheckMode (Enum)\fP
.IP \(bu 2
\fI\%SshHostKeyCheckHashType (Enum)\fP
.IP \(bu 2
\fI\%SshHostKeyHash (Object)\fP
.IP \(bu 2
\fI\%SshHostKeyCheck (Object)\fP
.IP \(bu 2
\fI\%BlockdevOptionsSsh (Object)\fP
.IP \(bu 2
\fI\%BlkdebugEvent (Enum)\fP
.IP \(bu 2
\fI\%BlkdebugIOType (Enum)\fP
.IP \(bu 2
\fI\%BlkdebugInjectErrorOptions (Object)\fP
.IP \(bu 2
\fI\%BlkdebugSetStateOptions (Object)\fP
.IP \(bu 2
\fI\%BlockdevOptionsBlkdebug (Object)\fP
.IP \(bu 2
\fI\%BlockdevOptionsBlklogwrites (Object)\fP
.IP \(bu 2
\fI\%BlockdevOptionsBlkverify (Object)\fP
.IP \(bu 2
\fI\%BlockdevOptionsBlkreplay (Object)\fP
.IP \(bu 2
\fI\%QuorumReadPattern (Enum)\fP
.IP \(bu 2
\fI\%BlockdevOptionsQuorum (Object)\fP
.IP \(bu 2
\fI\%BlockdevOptionsGluster (Object)\fP
.IP \(bu 2
\fI\%BlockdevOptionsIoUring (Object)\fP
.IP \(bu 2
\fI\%BlockdevOptionsNvmeIoUring (Object)\fP
.IP \(bu 2
\fI\%BlockdevOptionsVirtioBlkVfioPci (Object)\fP
.IP \(bu 2
\fI\%BlockdevOptionsVirtioBlkVhostUser (Object)\fP
.IP \(bu 2
\fI\%BlockdevOptionsVirtioBlkVhostVdpa (Object)\fP
.IP \(bu 2
\fI\%IscsiTransport (Enum)\fP
.IP \(bu 2
\fI\%IscsiHeaderDigest (Enum)\fP
.IP \(bu 2
\fI\%BlockdevOptionsIscsi (Object)\fP
.IP \(bu 2
\fI\%RbdAuthMode (Enum)\fP
.IP \(bu 2
\fI\%RbdImageEncryptionFormat (Enum)\fP
.IP \(bu 2
\fI\%RbdEncryptionOptionsLUKSBase (Object)\fP
.IP \(bu 2
\fI\%RbdEncryptionCreateOptionsLUKSBase (Object)\fP
.IP \(bu 2
\fI\%RbdEncryptionOptionsLUKS (Object)\fP
.IP \(bu 2
\fI\%RbdEncryptionOptionsLUKS2 (Object)\fP
.IP \(bu 2
\fI\%RbdEncryptionCreateOptionsLUKS (Object)\fP
.IP \(bu 2
\fI\%RbdEncryptionCreateOptionsLUKS2 (Object)\fP
.IP \(bu 2
\fI\%RbdEncryptionOptions (Object)\fP
.IP \(bu 2
\fI\%RbdEncryptionCreateOptions (Object)\fP
.IP \(bu 2
\fI\%BlockdevOptionsRbd (Object)\fP
.IP \(bu 2
\fI\%ReplicationMode (Enum)\fP
.IP \(bu 2
\fI\%BlockdevOptionsReplication (Object)\fP
.IP \(bu 2
\fI\%NFSTransport (Enum)\fP
.IP \(bu 2
\fI\%NFSServer (Object)\fP
.IP \(bu 2
\fI\%BlockdevOptionsNfs (Object)\fP
.IP \(bu 2
\fI\%BlockdevOptionsCurlBase (Object)\fP
.IP \(bu 2
\fI\%BlockdevOptionsCurlHttp (Object)\fP
.IP \(bu 2
\fI\%BlockdevOptionsCurlHttps (Object)\fP
.IP \(bu 2
\fI\%BlockdevOptionsCurlFtp (Object)\fP
.IP \(bu 2
\fI\%BlockdevOptionsCurlFtps (Object)\fP
.IP \(bu 2
\fI\%BlockdevOptionsNbd (Object)\fP
.IP \(bu 2
\fI\%BlockdevOptionsRaw (Object)\fP
.IP \(bu 2
\fI\%BlockdevOptionsThrottle (Object)\fP
.IP \(bu 2
\fI\%BlockdevOptionsCor (Object)\fP
.IP \(bu 2
\fI\%OnCbwError (Enum)\fP
.IP \(bu 2
\fI\%BlockdevOptionsCbw (Object)\fP
.IP \(bu 2
\fI\%BlockdevOptions (Object)\fP
.IP \(bu 2
\fI\%BlockdevRef (Alternate)\fP
.IP \(bu 2
\fI\%BlockdevRefOrNull (Alternate)\fP
.IP \(bu 2
\fI\%blockdev\-add (Command)\fP
.IP \(bu 2
\fI\%blockdev\-reopen (Command)\fP
.IP \(bu 2
\fI\%blockdev\-del (Command)\fP
.IP \(bu 2
\fI\%BlockdevCreateOptionsFile (Object)\fP
.IP \(bu 2
\fI\%BlockdevCreateOptionsGluster (Object)\fP
.IP \(bu 2
\fI\%BlockdevCreateOptionsLUKS (Object)\fP
.IP \(bu 2
\fI\%BlockdevCreateOptionsNfs (Object)\fP
.IP \(bu 2
\fI\%BlockdevCreateOptionsParallels (Object)\fP
.IP \(bu 2
\fI\%BlockdevCreateOptionsQcow (Object)\fP
.IP \(bu 2
\fI\%BlockdevQcow2Version (Enum)\fP
.IP \(bu 2
\fI\%Qcow2CompressionType (Enum)\fP
.IP \(bu 2
\fI\%BlockdevCreateOptionsQcow2 (Object)\fP
.IP \(bu 2
\fI\%BlockdevCreateOptionsQed (Object)\fP
.IP \(bu 2
\fI\%BlockdevCreateOptionsRbd (Object)\fP
.IP \(bu 2
\fI\%BlockdevVmdkSubformat (Enum)\fP
.IP \(bu 2
\fI\%BlockdevVmdkAdapterType (Enum)\fP
.IP \(bu 2
\fI\%BlockdevCreateOptionsVmdk (Object)\fP
.IP \(bu 2
\fI\%BlockdevCreateOptionsSsh (Object)\fP
.IP \(bu 2
\fI\%BlockdevCreateOptionsVdi (Object)\fP
.IP \(bu 2
\fI\%BlockdevVhdxSubformat (Enum)\fP
.IP \(bu 2
\fI\%BlockdevCreateOptionsVhdx (Object)\fP
.IP \(bu 2
\fI\%BlockdevVpcSubformat (Enum)\fP
.IP \(bu 2
\fI\%BlockdevCreateOptionsVpc (Object)\fP
.IP \(bu 2
\fI\%BlockdevCreateOptions (Object)\fP
.IP \(bu 2
\fI\%blockdev\-create (Command)\fP
.IP \(bu 2
\fI\%BlockdevAmendOptionsLUKS (Object)\fP
.IP \(bu 2
\fI\%BlockdevAmendOptionsQcow2 (Object)\fP
.IP \(bu 2
\fI\%BlockdevAmendOptions (Object)\fP
.IP \(bu 2
\fI\%x\-blockdev\-amend (Command)\fP
.IP \(bu 2
\fI\%BlockErrorAction (Enum)\fP
.IP \(bu 2
\fI\%BLOCK_IMAGE_CORRUPTED (Event)\fP
.IP \(bu 2
\fI\%BLOCK_IO_ERROR (Event)\fP
.IP \(bu 2
\fI\%BLOCK_JOB_COMPLETED (Event)\fP
.IP \(bu 2
\fI\%BLOCK_JOB_CANCELLED (Event)\fP
.IP \(bu 2
\fI\%BLOCK_JOB_ERROR (Event)\fP
.IP \(bu 2
\fI\%BLOCK_JOB_READY (Event)\fP
.IP \(bu 2
\fI\%BLOCK_JOB_PENDING (Event)\fP
.IP \(bu 2
\fI\%PreallocMode (Enum)\fP
.IP \(bu 2
\fI\%BLOCK_WRITE_THRESHOLD (Event)\fP
.IP \(bu 2
\fI\%block\-set\-write\-threshold (Command)\fP
.IP \(bu 2
\fI\%x\-blockdev\-change (Command)\fP
.IP \(bu 2
\fI\%x\-blockdev\-set\-iothread (Command)\fP
.IP \(bu 2
\fI\%QuorumOpType (Enum)\fP
.IP \(bu 2
\fI\%QUORUM_FAILURE (Event)\fP
.IP \(bu 2
\fI\%QUORUM_REPORT_BAD (Event)\fP
.IP \(bu 2
\fI\%BlockdevSnapshotInternal (Object)\fP
.IP \(bu 2
\fI\%blockdev\-snapshot\-internal\-sync (Command)\fP
.IP \(bu 2
\fI\%blockdev\-snapshot\-delete\-internal\-sync (Command)\fP
.IP \(bu 2
\fI\%Block device exports\fP
.UNINDENT
.IP \(bu 2
\fI\%Character devices\fP
.INDENT 2.0
.IP \(bu 2
\fI\%ChardevInfo (Object)\fP
.IP \(bu 2
\fI\%query\-chardev (Command)\fP
.IP \(bu 2
\fI\%ChardevBackendInfo (Object)\fP
.IP \(bu 2
\fI\%query\-chardev\-backends (Command)\fP
.IP \(bu 2
\fI\%DataFormat (Enum)\fP
.IP \(bu 2
\fI\%ringbuf\-write (Command)\fP
.IP \(bu 2
\fI\%ringbuf\-read (Command)\fP
.IP \(bu 2
\fI\%ChardevCommon (Object)\fP
.IP \(bu 2
\fI\%ChardevFile (Object)\fP
.IP \(bu 2
\fI\%ChardevHostdev (Object)\fP
.IP \(bu 2
\fI\%ChardevSocket (Object)\fP
.IP \(bu 2
\fI\%ChardevUdp (Object)\fP
.IP \(bu 2
\fI\%ChardevMux (Object)\fP
.IP \(bu 2
\fI\%ChardevStdio (Object)\fP
.IP \(bu 2
\fI\%ChardevSpiceChannel (Object)\fP
.IP \(bu 2
\fI\%ChardevSpicePort (Object)\fP
.IP \(bu 2
\fI\%ChardevDBus (Object)\fP
.IP \(bu 2
\fI\%ChardevVC (Object)\fP
.IP \(bu 2
\fI\%ChardevRingbuf (Object)\fP
.IP \(bu 2
\fI\%ChardevQemuVDAgent (Object)\fP
.IP \(bu 2
\fI\%ChardevBackendKind (Enum)\fP
.IP \(bu 2
\fI\%ChardevFileWrapper (Object)\fP
.IP \(bu 2
\fI\%ChardevHostdevWrapper (Object)\fP
.IP \(bu 2
\fI\%ChardevSocketWrapper (Object)\fP
.IP \(bu 2
\fI\%ChardevUdpWrapper (Object)\fP
.IP \(bu 2
\fI\%ChardevCommonWrapper (Object)\fP
.IP \(bu 2
\fI\%ChardevMuxWrapper (Object)\fP
.IP \(bu 2
\fI\%ChardevStdioWrapper (Object)\fP
.IP \(bu 2
\fI\%ChardevSpiceChannelWrapper (Object)\fP
.IP \(bu 2
\fI\%ChardevSpicePortWrapper (Object)\fP
.IP \(bu 2
\fI\%ChardevQemuVDAgentWrapper (Object)\fP
.IP \(bu 2
\fI\%ChardevDBusWrapper (Object)\fP
.IP \(bu 2
\fI\%ChardevVCWrapper (Object)\fP
.IP \(bu 2
\fI\%ChardevRingbufWrapper (Object)\fP
.IP \(bu 2
\fI\%ChardevBackend (Object)\fP
.IP \(bu 2
\fI\%ChardevReturn (Object)\fP
.IP \(bu 2
\fI\%chardev\-add (Command)\fP
.IP \(bu 2
\fI\%chardev\-change (Command)\fP
.IP \(bu 2
\fI\%chardev\-remove (Command)\fP
.IP \(bu 2
\fI\%chardev\-send\-break (Command)\fP
.IP \(bu 2
\fI\%VSERPORT_CHANGE (Event)\fP
.UNINDENT
.IP \(bu 2
\fI\%QMP monitor control\fP
.INDENT 2.0
.IP \(bu 2
\fI\%qmp_capabilities (Command)\fP
.IP \(bu 2
\fI\%QMPCapability (Enum)\fP
.IP \(bu 2
\fI\%VersionTriple (Object)\fP
.IP \(bu 2
\fI\%VersionInfo (Object)\fP
.IP \(bu 2
\fI\%query\-version (Command)\fP
.IP \(bu 2
\fI\%CommandInfo (Object)\fP
.IP \(bu 2
\fI\%query\-commands (Command)\fP
.IP \(bu 2
\fI\%quit (Command)\fP
.IP \(bu 2
\fI\%MonitorMode (Enum)\fP
.IP \(bu 2
\fI\%MonitorOptions (Object)\fP
.UNINDENT
.IP \(bu 2
\fI\%QMP introspection\fP
.INDENT 2.0
.IP \(bu 2
\fI\%query\-qmp\-schema (Command)\fP
.IP \(bu 2
\fI\%SchemaMetaType (Enum)\fP
.IP \(bu 2
\fI\%SchemaInfo (Object)\fP
.IP \(bu 2
\fI\%SchemaInfoBuiltin (Object)\fP
.IP \(bu 2
\fI\%JSONType (Enum)\fP
.IP \(bu 2
\fI\%SchemaInfoEnum (Object)\fP
.IP \(bu 2
\fI\%SchemaInfoEnumMember (Object)\fP
.IP \(bu 2
\fI\%SchemaInfoArray (Object)\fP
.IP \(bu 2
\fI\%SchemaInfoObject (Object)\fP
.IP \(bu 2
\fI\%SchemaInfoObjectMember (Object)\fP
.IP \(bu 2
\fI\%SchemaInfoObjectVariant (Object)\fP
.IP \(bu 2
\fI\%SchemaInfoAlternate (Object)\fP
.IP \(bu 2
\fI\%SchemaInfoAlternateMember (Object)\fP
.IP \(bu 2
\fI\%SchemaInfoCommand (Object)\fP
.IP \(bu 2
\fI\%SchemaInfoEvent (Object)\fP
.UNINDENT
.IP \(bu 2
\fI\%User authorization\fP
.INDENT 2.0
.IP \(bu 2
\fI\%QAuthZListPolicy (Enum)\fP
.IP \(bu 2
\fI\%QAuthZListFormat (Enum)\fP
.IP \(bu 2
\fI\%QAuthZListRule (Object)\fP
.IP \(bu 2
\fI\%AuthZListProperties (Object)\fP
.IP \(bu 2
\fI\%AuthZListFileProperties (Object)\fP
.IP \(bu 2
\fI\%AuthZPAMProperties (Object)\fP
.IP \(bu 2
\fI\%AuthZSimpleProperties (Object)\fP
.UNINDENT
.IP \(bu 2
\fI\%QEMU Object Model (QOM)\fP
.INDENT 2.0
.IP \(bu 2
\fI\%ObjectPropertyInfo (Object)\fP
.IP \(bu 2
\fI\%qom\-list (Command)\fP
.IP \(bu 2
\fI\%qom\-get (Command)\fP
.IP \(bu 2
\fI\%qom\-set (Command)\fP
.IP \(bu 2
\fI\%ObjectTypeInfo (Object)\fP
.IP \(bu 2
\fI\%qom\-list\-types (Command)\fP
.IP \(bu 2
\fI\%qom\-list\-properties (Command)\fP
.IP \(bu 2
\fI\%CanHostSocketcanProperties (Object)\fP
.IP \(bu 2
\fI\%ColoCompareProperties (Object)\fP
.IP \(bu 2
\fI\%CryptodevBackendProperties (Object)\fP
.IP \(bu 2
\fI\%CryptodevVhostUserProperties (Object)\fP
.IP \(bu 2
\fI\%DBusVMStateProperties (Object)\fP
.IP \(bu 2
\fI\%NetfilterInsert (Enum)\fP
.IP \(bu 2
\fI\%NetfilterProperties (Object)\fP
.IP \(bu 2
\fI\%FilterBufferProperties (Object)\fP
.IP \(bu 2
\fI\%FilterDumpProperties (Object)\fP
.IP \(bu 2
\fI\%FilterMirrorProperties (Object)\fP
.IP \(bu 2
\fI\%FilterRedirectorProperties (Object)\fP
.IP \(bu 2
\fI\%FilterRewriterProperties (Object)\fP
.IP \(bu 2
\fI\%InputBarrierProperties (Object)\fP
.IP \(bu 2
\fI\%InputLinuxProperties (Object)\fP
.IP \(bu 2
\fI\%EventLoopBaseProperties (Object)\fP
.IP \(bu 2
\fI\%IothreadProperties (Object)\fP
.IP \(bu 2
\fI\%MainLoopProperties (Object)\fP
.IP \(bu 2
\fI\%MemoryBackendProperties (Object)\fP
.IP \(bu 2
\fI\%MemoryBackendFileProperties (Object)\fP
.IP \(bu 2
\fI\%MemoryBackendMemfdProperties (Object)\fP
.IP \(bu 2
\fI\%MemoryBackendEpcProperties (Object)\fP
.IP \(bu 2
\fI\%PrManagerHelperProperties (Object)\fP
.IP \(bu 2
\fI\%QtestProperties (Object)\fP
.IP \(bu 2
\fI\%RemoteObjectProperties (Object)\fP
.IP \(bu 2
\fI\%VfioUserServerProperties (Object)\fP
.IP \(bu 2
\fI\%RngProperties (Object)\fP
.IP \(bu 2
\fI\%RngEgdProperties (Object)\fP
.IP \(bu 2
\fI\%RngRandomProperties (Object)\fP
.IP \(bu 2
\fI\%SevGuestProperties (Object)\fP
.IP \(bu 2
\fI\%ThreadContextProperties (Object)\fP
.IP \(bu 2
\fI\%ObjectType (Enum)\fP
.IP \(bu 2
\fI\%ObjectOptions (Object)\fP
.IP \(bu 2
\fI\%object\-add (Command)\fP
.IP \(bu 2
\fI\%object\-del (Command)\fP
.UNINDENT
.IP \(bu 2
\fI\%Transactions\fP
.INDENT 2.0
.IP \(bu 2
\fI\%Abort (Object)\fP
.IP \(bu 2
\fI\%ActionCompletionMode (Enum)\fP
.IP \(bu 2
\fI\%TransactionActionKind (Enum)\fP
.IP \(bu 2
\fI\%AbortWrapper (Object)\fP
.IP \(bu 2
\fI\%BlockDirtyBitmapAddWrapper (Object)\fP
.IP \(bu 2
\fI\%BlockDirtyBitmapWrapper (Object)\fP
.IP \(bu 2
\fI\%BlockDirtyBitmapMergeWrapper (Object)\fP
.IP \(bu 2
\fI\%BlockdevBackupWrapper (Object)\fP
.IP \(bu 2
\fI\%BlockdevSnapshotWrapper (Object)\fP
.IP \(bu 2
\fI\%BlockdevSnapshotInternalWrapper (Object)\fP
.IP \(bu 2
\fI\%BlockdevSnapshotSyncWrapper (Object)\fP
.IP \(bu 2
\fI\%DriveBackupWrapper (Object)\fP
.IP \(bu 2
\fI\%TransactionAction (Object)\fP
.IP \(bu 2
\fI\%TransactionProperties (Object)\fP
.IP \(bu 2
\fI\%transaction (Command)\fP
.UNINDENT
.UNINDENT
.UNINDENT
.SH BLOCK DEVICES
.SS Block core (VM unrelated)
.SH COMMON DATA TYPES
.SS \fBIoOperationType\fP (Enum)
.sp
An enumeration of the I/O operation types
.SS Values
.INDENT 0.0
.TP
.B \fBread\fP
read operation
.TP
.B \fBwrite\fP
write operation
.UNINDENT
.SS Since
.sp
2.1
.SS \fBOnOffAuto\fP (Enum)
.sp
An enumeration of three options: on, off, and auto
.SS Values
.INDENT 0.0
.TP
.B \fBauto\fP
QEMU selects the value between on and off
.TP
.B \fBon\fP
Enabled
.TP
.B \fBoff\fP
Disabled
.UNINDENT
.SS Since
.sp
2.2
.SS \fBOnOffSplit\fP (Enum)
.sp
An enumeration of three values: on, off, and split
.SS Values
.INDENT 0.0
.TP
.B \fBon\fP
Enabled
.TP
.B \fBoff\fP
Disabled
.TP
.B \fBsplit\fP
Mixed
.UNINDENT
.SS Since
.sp
2.6
.SS \fBString\fP (Object)
.sp
A fat type wrapping \(aqstr\(aq, to be embedded in lists.
.SS Members
.INDENT 0.0
.TP
.B \fBstr\fP: \fBstring\fP
Not documented
.UNINDENT
.SS Since
.sp
1.2
.SS \fBStrOrNull\fP (Alternate)
.sp
This is a string value or the explicit lack of a string (null
pointer in C).  Intended for cases when \(aqoptional absent\(aq already
has a different meaning.
.SS Members
.INDENT 0.0
.TP
.B \fBs\fP: \fBstring\fP
the string value
.TP
.B \fBn\fP: \fBnull\fP
no string value
.UNINDENT
.SS Since
.sp
2.10
.SS \fBOffAutoPCIBAR\fP (Enum)
.sp
An enumeration of options for specifying a PCI BAR
.SS Values
.INDENT 0.0
.TP
.B \fBoff\fP
The specified feature is disabled
.TP
.B \fBauto\fP
The PCI BAR for the feature is automatically selected
.TP
.B \fBbar0\fP
PCI BAR0 is used for the feature
.TP
.B \fBbar1\fP
PCI BAR1 is used for the feature
.TP
.B \fBbar2\fP
PCI BAR2 is used for the feature
.TP
.B \fBbar3\fP
PCI BAR3 is used for the feature
.TP
.B \fBbar4\fP
PCI BAR4 is used for the feature
.TP
.B \fBbar5\fP
PCI BAR5 is used for the feature
.UNINDENT
.SS Since
.sp
2.12
.SS \fBPCIELinkSpeed\fP (Enum)
.sp
An enumeration of PCIe link speeds in units of GT/s
.SS Values
.INDENT 0.0
.TP
.B \fB2_5\fP
2.5GT/s
.TP
.B \fB5\fP
5.0GT/s
.TP
.B \fB8\fP
8.0GT/s
.TP
.B \fB16\fP
16.0GT/s
.UNINDENT
.SS Since
.sp
4.0
.SS \fBPCIELinkWidth\fP (Enum)
.sp
An enumeration of PCIe link width
.SS Values
.INDENT 0.0
.TP
.B \fB1\fP
x1
.TP
.B \fB2\fP
x2
.TP
.B \fB4\fP
x4
.TP
.B \fB8\fP
x8
.TP
.B \fB12\fP
x12
.TP
.B \fB16\fP
x16
.TP
.B \fB32\fP
x32
.UNINDENT
.SS Since
.sp
4.0
.SS \fBHostMemPolicy\fP (Enum)
.sp
Host memory policy types
.SS Values
.INDENT 0.0
.TP
.B \fBdefault\fP
restore default policy, remove any nondefault policy
.TP
.B \fBpreferred\fP
set the preferred host nodes for allocation
.TP
.B \fBbind\fP
a strict policy that restricts memory allocation to the
host nodes specified
.TP
.B \fBinterleave\fP
memory allocations are interleaved across the set
of host nodes specified
.UNINDENT
.SS Since
.sp
2.1
.SS \fBNetFilterDirection\fP (Enum)
.sp
Indicates whether a netfilter is attached to a netdev\(aqs transmit queue or
receive queue or both.
.SS Values
.INDENT 0.0
.TP
.B \fBall\fP
the filter is attached both to the receive and the transmit
queue of the netdev (default).
.TP
.B \fBrx\fP
the filter is attached to the receive queue of the netdev,
where it will receive packets sent to the netdev.
.TP
.B \fBtx\fP
the filter is attached to the transmit queue of the netdev,
where it will receive packets sent by the netdev.
.UNINDENT
.SS Since
.sp
2.5
.SS \fBGrabToggleKeys\fP (Enum)
.sp
Keys to toggle input\-linux between host and guest.
.SS Values
.INDENT 0.0
.TP
.B \fBctrl\-ctrl\fP
Not documented
.TP
.B \fBalt\-alt\fP
Not documented
.TP
.B \fBshift\-shift\fP
Not documented
.TP
.B \fBmeta\-meta\fP
Not documented
.TP
.B \fBscrolllock\fP
Not documented
.TP
.B \fBctrl\-scrolllock\fP
Not documented
.UNINDENT
.SS Since
.sp
4.0
.SS \fBHumanReadableText\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBhuman\-readable\-text\fP: \fBstring\fP
Formatted output intended for humans.
.UNINDENT
.SS Since
.sp
6.2
.SH CRYPTOGRAPHY
.SS \fBQCryptoTLSCredsEndpoint\fP (Enum)
.sp
The type of network endpoint that will be using the credentials.
Most types of credential require different setup / structures
depending on whether they will be used in a server versus a
client.
.SS Values
.INDENT 0.0
.TP
.B \fBclient\fP
the network endpoint is acting as the client
.TP
.B \fBserver\fP
the network endpoint is acting as the server
.UNINDENT
.SS Since
.sp
2.5
.SS \fBQCryptoSecretFormat\fP (Enum)
.sp
The data format that the secret is provided in
.SS Values
.INDENT 0.0
.TP
.B \fBraw\fP
raw bytes. When encoded in JSON only valid UTF\-8 sequences can be used
.TP
.B \fBbase64\fP
arbitrary base64 encoded binary data
.UNINDENT
.SS Since
.sp
2.6
.SS \fBQCryptoHashAlgorithm\fP (Enum)
.sp
The supported algorithms for computing content digests
.SS Values
.INDENT 0.0
.TP
.B \fBmd5\fP
MD5. Should not be used in any new code, legacy compat only
.TP
.B \fBsha1\fP
SHA\-1. Should not be used in any new code, legacy compat only
.TP
.B \fBsha224\fP
SHA\-224. (since 2.7)
.TP
.B \fBsha256\fP
SHA\-256. Current recommended strong hash.
.TP
.B \fBsha384\fP
SHA\-384. (since 2.7)
.TP
.B \fBsha512\fP
SHA\-512. (since 2.7)
.TP
.B \fBripemd160\fP
RIPEMD\-160. (since 2.7)
.UNINDENT
.SS Since
.sp
2.6
.SS \fBQCryptoCipherAlgorithm\fP (Enum)
.sp
The supported algorithms for content encryption ciphers
.SS Values
.INDENT 0.0
.TP
.B \fBaes\-128\fP
AES with 128 bit / 16 byte keys
.TP
.B \fBaes\-192\fP
AES with 192 bit / 24 byte keys
.TP
.B \fBaes\-256\fP
AES with 256 bit / 32 byte keys
.TP
.B \fBdes\fP
DES with 56 bit / 8 byte keys. Do not use except in VNC. (since 6.1)
.TP
.B \fB3des\fP
3DES(EDE) with 192 bit / 24 byte keys (since 2.9)
.TP
.B \fBcast5\-128\fP
Cast5 with 128 bit / 16 byte keys
.TP
.B \fBserpent\-128\fP
Serpent with 128 bit / 16 byte keys
.TP
.B \fBserpent\-192\fP
Serpent with 192 bit / 24 byte keys
.TP
.B \fBserpent\-256\fP
Serpent with 256 bit / 32 byte keys
.TP
.B \fBtwofish\-128\fP
Twofish with 128 bit / 16 byte keys
.TP
.B \fBtwofish\-192\fP
Twofish with 192 bit / 24 byte keys
.TP
.B \fBtwofish\-256\fP
Twofish with 256 bit / 32 byte keys
.UNINDENT
.SS Since
.sp
2.6
.SS \fBQCryptoCipherMode\fP (Enum)
.sp
The supported modes for content encryption ciphers
.SS Values
.INDENT 0.0
.TP
.B \fBecb\fP
Electronic Code Book
.TP
.B \fBcbc\fP
Cipher Block Chaining
.TP
.B \fBxts\fP
XEX with tweaked code book and ciphertext stealing
.TP
.B \fBctr\fP
Counter (Since 2.8)
.UNINDENT
.SS Since
.sp
2.6
.SS \fBQCryptoIVGenAlgorithm\fP (Enum)
.sp
The supported algorithms for generating initialization
vectors for full disk encryption. The \(aqplain\(aq generator
should not be used for disks with sector numbers larger
than 2^32, except where compatibility with pre\-existing
Linux dm\-crypt volumes is required.
.SS Values
.INDENT 0.0
.TP
.B \fBplain\fP
64\-bit sector number truncated to 32\-bits
.TP
.B \fBplain64\fP
64\-bit sector number
.TP
.B \fBessiv\fP
64\-bit sector number encrypted with a hash of the encryption key
.UNINDENT
.SS Since
.sp
2.6
.SS \fBQCryptoBlockFormat\fP (Enum)
.sp
The supported full disk encryption formats
.SS Values
.INDENT 0.0
.TP
.B \fBqcow\fP
QCow/QCow2 built\-in AES\-CBC encryption. Use only
for liberating data from old images.
.TP
.B \fBluks\fP
LUKS encryption format. Recommended for new images
.UNINDENT
.SS Since
.sp
2.6
.SS \fBQCryptoBlockOptionsBase\fP (Object)
.sp
The common options that apply to all full disk
encryption formats
.SS Members
.INDENT 0.0
.TP
.B \fBformat\fP: \fBQCryptoBlockFormat\fP
the encryption format
.UNINDENT
.SS Since
.sp
2.6
.SS \fBQCryptoBlockOptionsQCow\fP (Object)
.sp
The options that apply to QCow/QCow2 AES\-CBC encryption format
.SS Members
.INDENT 0.0
.TP
.B \fBkey\-secret\fP: \fBstring\fP (optional)
the ID of a QCryptoSecret object providing the
decryption key. Mandatory except when probing image for
metadata only.
.UNINDENT
.SS Since
.sp
2.6
.SS \fBQCryptoBlockOptionsLUKS\fP (Object)
.sp
The options that apply to LUKS encryption format
.SS Members
.INDENT 0.0
.TP
.B \fBkey\-secret\fP: \fBstring\fP (optional)
the ID of a QCryptoSecret object providing the
decryption key. Mandatory except when probing image for
metadata only.
.UNINDENT
.SS Since
.sp
2.6
.SS \fBQCryptoBlockCreateOptionsLUKS\fP (Object)
.sp
The options that apply to LUKS encryption format initialization
.SS Members
.INDENT 0.0
.TP
.B \fBcipher\-alg\fP: \fBQCryptoCipherAlgorithm\fP (optional)
the cipher algorithm for data encryption
Currently defaults to \(aqaes\-256\(aq.
.TP
.B \fBcipher\-mode\fP: \fBQCryptoCipherMode\fP (optional)
the cipher mode for data encryption
Currently defaults to \(aqxts\(aq
.TP
.B \fBivgen\-alg\fP: \fBQCryptoIVGenAlgorithm\fP (optional)
the initialization vector generator
Currently defaults to \(aqplain64\(aq
.TP
.B \fBivgen\-hash\-alg\fP: \fBQCryptoHashAlgorithm\fP (optional)
the initialization vector generator hash
Currently defaults to \(aqsha256\(aq
.TP
.B \fBhash\-alg\fP: \fBQCryptoHashAlgorithm\fP (optional)
the master key hash algorithm
Currently defaults to \(aqsha256\(aq
.TP
.B \fBiter\-time\fP: \fBint\fP (optional)
number of milliseconds to spend in
PBKDF passphrase processing. Currently defaults
to 2000. (since 2.8)
.TP
.B The members of \fBQCryptoBlockOptionsLUKS\fP
.UNINDENT
.SS Since
.sp
2.6
.SS \fBQCryptoBlockOpenOptions\fP (Object)
.sp
The options that are available for all encryption formats
when opening an existing volume
.SS Members
.INDENT 0.0
.TP
.B The members of \fBQCryptoBlockOptionsBase\fP
.TP
.B The members of \fBQCryptoBlockOptionsQCow\fP when \fBformat\fP is \fB"qcow"\fP
.TP
.B The members of \fBQCryptoBlockOptionsLUKS\fP when \fBformat\fP is \fB"luks"\fP
.UNINDENT
.SS Since
.sp
2.6
.SS \fBQCryptoBlockCreateOptions\fP (Object)
.sp
The options that are available for all encryption formats
when initializing a new volume
.SS Members
.INDENT 0.0
.TP
.B The members of \fBQCryptoBlockOptionsBase\fP
.TP
.B The members of \fBQCryptoBlockOptionsQCow\fP when \fBformat\fP is \fB"qcow"\fP
.TP
.B The members of \fBQCryptoBlockCreateOptionsLUKS\fP when \fBformat\fP is \fB"luks"\fP
.UNINDENT
.SS Since
.sp
2.6
.SS \fBQCryptoBlockInfoBase\fP (Object)
.sp
The common information that applies to all full disk
encryption formats
.SS Members
.INDENT 0.0
.TP
.B \fBformat\fP: \fBQCryptoBlockFormat\fP
the encryption format
.UNINDENT
.SS Since
.sp
2.7
.SS \fBQCryptoBlockInfoLUKSSlot\fP (Object)
.sp
Information about the LUKS block encryption key
slot options
.SS Members
.INDENT 0.0
.TP
.B \fBactive\fP: \fBboolean\fP
whether the key slot is currently in use
.TP
.B \fBkey\-offset\fP: \fBint\fP
offset to the key material in bytes
.TP
.B \fBiters\fP: \fBint\fP (optional)
number of PBKDF2 iterations for key material
.TP
.B \fBstripes\fP: \fBint\fP (optional)
number of stripes for splitting key material
.UNINDENT
.SS Since
.sp
2.7
.SS \fBQCryptoBlockInfoLUKS\fP (Object)
.sp
Information about the LUKS block encryption options
.SS Members
.INDENT 0.0
.TP
.B \fBcipher\-alg\fP: \fBQCryptoCipherAlgorithm\fP
the cipher algorithm for data encryption
.TP
.B \fBcipher\-mode\fP: \fBQCryptoCipherMode\fP
the cipher mode for data encryption
.TP
.B \fBivgen\-alg\fP: \fBQCryptoIVGenAlgorithm\fP
the initialization vector generator
.TP
.B \fBivgen\-hash\-alg\fP: \fBQCryptoHashAlgorithm\fP (optional)
the initialization vector generator hash
.TP
.B \fBhash\-alg\fP: \fBQCryptoHashAlgorithm\fP
the master key hash algorithm
.TP
.B \fBpayload\-offset\fP: \fBint\fP
offset to the payload data in bytes
.TP
.B \fBmaster\-key\-iters\fP: \fBint\fP
number of PBKDF2 iterations for key material
.TP
.B \fBuuid\fP: \fBstring\fP
unique identifier for the volume
.TP
.B \fBslots\fP: \fBarray of QCryptoBlockInfoLUKSSlot\fP
information about each key slot
.UNINDENT
.SS Since
.sp
2.7
.SS \fBQCryptoBlockInfo\fP (Object)
.sp
Information about the block encryption options
.SS Members
.INDENT 0.0
.TP
.B The members of \fBQCryptoBlockInfoBase\fP
.TP
.B The members of \fBQCryptoBlockInfoLUKS\fP when \fBformat\fP is \fB"luks"\fP
.UNINDENT
.SS Since
.sp
2.7
.SS \fBQCryptoBlockLUKSKeyslotState\fP (Enum)
.sp
Defines state of keyslots that are affected by the update
.SS Values
.INDENT 0.0
.TP
.B \fBactive\fP
The slots contain the given password and marked as active
.TP
.B \fBinactive\fP
The slots are erased (contain garbage) and marked as inactive
.UNINDENT
.SS Since
.sp
5.1
.SS \fBQCryptoBlockAmendOptionsLUKS\fP (Object)
.sp
This struct defines the update parameters that activate/de\-activate set
of keyslots
.SS Members
.INDENT 0.0
.TP
.B \fBstate\fP: \fBQCryptoBlockLUKSKeyslotState\fP
the desired state of the keyslots
.TP
.B \fBnew\-secret\fP: \fBstring\fP (optional)
The ID of a QCryptoSecret object providing the password to be
written into added active keyslots
.TP
.B \fBold\-secret\fP: \fBstring\fP (optional)
Optional (for deactivation only)
If given will deactivate all keyslots that
match password located in QCryptoSecret with this ID
.TP
.B \fBiter\-time\fP: \fBint\fP (optional)
Optional (for activation only)
Number of milliseconds to spend in
PBKDF passphrase processing for the newly activated keyslot.
Currently defaults to 2000.
.TP
.B \fBkeyslot\fP: \fBint\fP (optional)
Optional. ID of the keyslot to activate/deactivate.
For keyslot activation, keyslot should not be active already
(this is unsafe to update an active keyslot),
but possible if \(aqforce\(aq parameter is given.
If keyslot is not given, first free keyslot will be written.
.sp
For keyslot deactivation, this parameter specifies the exact
keyslot to deactivate
.TP
.B \fBsecret\fP: \fBstring\fP (optional)
Optional. The ID of a QCryptoSecret object providing the
password to use to retrieve current master key.
Defaults to the same secret that was used to open the image
.UNINDENT
.SS Since
.sp
5.1
.SS \fBQCryptoBlockAmendOptions\fP (Object)
.sp
The options that are available for all encryption formats
when amending encryption settings
.SS Members
.INDENT 0.0
.TP
.B The members of \fBQCryptoBlockOptionsBase\fP
.TP
.B The members of \fBQCryptoBlockAmendOptionsLUKS\fP when \fBformat\fP is \fB"luks"\fP
.UNINDENT
.SS Since
.sp
5.1
.SS \fBSecretCommonProperties\fP (Object)
.sp
Properties for objects of classes derived from secret\-common.
.SS Members
.INDENT 0.0
.TP
.B \fBloaded\fP: \fBboolean\fP (optional)
if true, the secret is loaded immediately when applying this option
and will probably fail when processing the next option. Don\(aqt use;
only provided for compatibility. (default: false)
.TP
.B \fBformat\fP: \fBQCryptoSecretFormat\fP (optional)
the data format that the secret is provided in (default: raw)
.TP
.B \fBkeyid\fP: \fBstring\fP (optional)
the name of another secret that should be used to decrypt the
provided data. If not present, the data is assumed to be unencrypted.
.TP
.B \fBiv\fP: \fBstring\fP (optional)
the random initialization vector used for encryption of this particular
secret. Should be a base64 encrypted string of the 16\-byte IV. Mandatory
if \fBkeyid\fP is given. Ignored if \fBkeyid\fP is absent.
.UNINDENT
.SS Features
.INDENT 0.0
.TP
.B \fBdeprecated\fP
Member \fBloaded\fP is deprecated.  Setting true doesn\(aqt make sense,
and false is already the default.
.UNINDENT
.SS Since
.sp
2.6
.SS \fBSecretProperties\fP (Object)
.sp
Properties for secret objects.
.sp
Either \fBdata\fP or \fBfile\fP must be provided, but not both.
.SS Members
.INDENT 0.0
.TP
.B \fBdata\fP: \fBstring\fP (optional)
the associated with the secret from
.TP
.B \fBfile\fP: \fBstring\fP (optional)
the filename to load the data associated with the secret from
.TP
.B The members of \fBSecretCommonProperties\fP
.UNINDENT
.SS Since
.sp
2.6
.SS \fBSecretKeyringProperties\fP (Object)
.sp
Properties for secret_keyring objects.
.SS Members
.INDENT 0.0
.TP
.B \fBserial\fP: \fBint\fP
serial number that identifies a key to get from the kernel
.TP
.B The members of \fBSecretCommonProperties\fP
.UNINDENT
.SS Since
.sp
5.1
.SS \fBTlsCredsProperties\fP (Object)
.sp
Properties for objects of classes derived from tls\-creds.
.SS Members
.INDENT 0.0
.TP
.B \fBverify\-peer\fP: \fBboolean\fP (optional)
if true the peer credentials will be verified once the
handshake is completed.  This is a no\-op for anonymous
credentials. (default: true)
.TP
.B \fBdir\fP: \fBstring\fP (optional)
the path of the directory that contains the credential files
.TP
.B \fBendpoint\fP: \fBQCryptoTLSCredsEndpoint\fP (optional)
whether the QEMU network backend that uses the credentials will be
acting as a client or as a server (default: client)
.TP
.B \fBpriority\fP: \fBstring\fP (optional)
a gnutls priority string as described at
\fI\%https://gnutls.org/manual/html_node/Priority\-Strings.html\fP
.UNINDENT
.SS Since
.sp
2.5
.SS \fBTlsCredsAnonProperties\fP (Object)
.sp
Properties for tls\-creds\-anon objects.
.SS Members
.INDENT 0.0
.TP
.B \fBloaded\fP: \fBboolean\fP (optional)
if true, the credentials are loaded immediately when applying this
option and will ignore options that are processed later. Don\(aqt use;
only provided for compatibility. (default: false)
.TP
.B The members of \fBTlsCredsProperties\fP
.UNINDENT
.SS Features
.INDENT 0.0
.TP
.B \fBdeprecated\fP
Member \fBloaded\fP is deprecated.  Setting true doesn\(aqt make sense,
and false is already the default.
.UNINDENT
.SS Since
.sp
2.5
.SS \fBTlsCredsPskProperties\fP (Object)
.sp
Properties for tls\-creds\-psk objects.
.SS Members
.INDENT 0.0
.TP
.B \fBloaded\fP: \fBboolean\fP (optional)
if true, the credentials are loaded immediately when applying this
option and will ignore options that are processed later. Don\(aqt use;
only provided for compatibility. (default: false)
.TP
.B \fBusername\fP: \fBstring\fP (optional)
the username which will be sent to the server.  For clients only.
If absent, "qemu" is sent and the property will read back as an
empty string.
.TP
.B The members of \fBTlsCredsProperties\fP
.UNINDENT
.SS Features
.INDENT 0.0
.TP
.B \fBdeprecated\fP
Member \fBloaded\fP is deprecated.  Setting true doesn\(aqt make sense,
and false is already the default.
.UNINDENT
.SS Since
.sp
3.0
.SS \fBTlsCredsX509Properties\fP (Object)
.sp
Properties for tls\-creds\-x509 objects.
.SS Members
.INDENT 0.0
.TP
.B \fBloaded\fP: \fBboolean\fP (optional)
if true, the credentials are loaded immediately when applying this
option and will ignore options that are processed later. Don\(aqt use;
only provided for compatibility. (default: false)
.TP
.B \fBsanity\-check\fP: \fBboolean\fP (optional)
if true, perform some sanity checks before using the
credentials (default: true)
.TP
.B \fBpasswordid\fP: \fBstring\fP (optional)
For the server\-key.pem and client\-key.pem files which contain
sensitive private keys, it is possible to use an encrypted
version by providing the \fBpasswordid\fP parameter.  This provides
the ID of a previously created secret object containing the
password for decryption.
.TP
.B The members of \fBTlsCredsProperties\fP
.UNINDENT
.SS Features
.INDENT 0.0
.TP
.B \fBdeprecated\fP
Member \fBloaded\fP is deprecated.  Setting true doesn\(aqt make sense,
and false is already the default.
.UNINDENT
.SS Since
.sp
2.5
.SS \fBQCryptoAkCipherAlgorithm\fP (Enum)
.sp
The supported algorithms for asymmetric encryption ciphers
.SS Values
.INDENT 0.0
.TP
.B \fBrsa\fP
RSA algorithm
.UNINDENT
.SS Since
.sp
7.1
.SS \fBQCryptoAkCipherKeyType\fP (Enum)
.sp
The type of asymmetric keys.
.SS Values
.INDENT 0.0
.TP
.B \fBpublic\fP
Not documented
.TP
.B \fBprivate\fP
Not documented
.UNINDENT
.SS Since
.sp
7.1
.SS \fBQCryptoRSAPaddingAlgorithm\fP (Enum)
.sp
The padding algorithm for RSA.
.SS Values
.INDENT 0.0
.TP
.B \fBraw\fP
no padding used
.TP
.B \fBpkcs1\fP
pkcs1#v1.5
.UNINDENT
.SS Since
.sp
7.1
.SS \fBQCryptoAkCipherOptionsRSA\fP (Object)
.sp
Specific parameters for RSA algorithm.
.SS Members
.INDENT 0.0
.TP
.B \fBhash\-alg\fP: \fBQCryptoHashAlgorithm\fP
QCryptoHashAlgorithm
.TP
.B \fBpadding\-alg\fP: \fBQCryptoRSAPaddingAlgorithm\fP
QCryptoRSAPaddingAlgorithm
.UNINDENT
.SS Since
.sp
7.1
.SS \fBQCryptoAkCipherOptions\fP (Object)
.sp
The options that are available for all asymmetric key algorithms
when creating a new QCryptoAkCipher.
.SS Members
.INDENT 0.0
.TP
.B \fBalg\fP: \fBQCryptoAkCipherAlgorithm\fP
Not documented
.TP
.B The members of \fBQCryptoAkCipherOptionsRSA\fP when \fBalg\fP is \fB"rsa"\fP
.UNINDENT
.SS Since
.sp
7.1
.SS Background jobs
.SS \fBJobType\fP (Enum)
.sp
Type of a background job.
.SS Values
.INDENT 0.0
.TP
.B \fBcommit\fP
block commit job type, see "block\-commit"
.TP
.B \fBstream\fP
block stream job type, see "block\-stream"
.TP
.B \fBmirror\fP
drive mirror job type, see "drive\-mirror"
.TP
.B \fBbackup\fP
drive backup job type, see "drive\-backup"
.TP
.B \fBcreate\fP
image creation job type, see "blockdev\-create" (since 3.0)
.TP
.B \fBamend\fP
image options amend job type, see "x\-blockdev\-amend" (since 5.1)
.TP
.B \fBsnapshot\-load\fP
snapshot load job type, see "snapshot\-load" (since 6.0)
.TP
.B \fBsnapshot\-save\fP
snapshot save job type, see "snapshot\-save" (since 6.0)
.TP
.B \fBsnapshot\-delete\fP
snapshot delete job type, see "snapshot\-delete" (since 6.0)
.UNINDENT
.SS Since
.sp
1.7
.SS \fBJobStatus\fP (Enum)
.sp
Indicates the present state of a given job in its lifetime.
.SS Values
.INDENT 0.0
.TP
.B \fBundefined\fP
Erroneous, default state. Should not ever be visible.
.TP
.B \fBcreated\fP
The job has been created, but not yet started.
.TP
.B \fBrunning\fP
The job is currently running.
.TP
.B \fBpaused\fP
The job is running, but paused. The pause may be requested by
either the QMP user or by internal processes.
.TP
.B \fBready\fP
The job is running, but is ready for the user to signal completion.
This is used for long\-running jobs like mirror that are designed to
run indefinitely.
.TP
.B \fBstandby\fP
The job is ready, but paused. This is nearly identical to \fBpaused\fP\&.
The job may return to \fBready\fP or otherwise be canceled.
.TP
.B \fBwaiting\fP
The job is waiting for other jobs in the transaction to converge
to the waiting state. This status will likely not be visible for
the last job in a transaction.
.TP
.B \fBpending\fP
The job has finished its work, but has finalization steps that it
needs to make prior to completing. These changes will require
manual intervention via \fBjob\-finalize\fP if auto\-finalize was set to
false. These pending changes may still fail.
.TP
.B \fBaborting\fP
The job is in the process of being aborted, and will finish with
an error. The job will afterwards report that it is \fBconcluded\fP\&.
This status may not be visible to the management process.
.TP
.B \fBconcluded\fP
The job has finished all work. If auto\-dismiss was set to false,
the job will remain in the query list until it is dismissed via
\fBjob\-dismiss\fP\&.
.TP
.B \fBnull\fP
The job is in the process of being dismantled. This state should not
ever be visible externally.
.UNINDENT
.SS Since
.sp
2.12
.SS \fBJobVerb\fP (Enum)
.sp
Represents command verbs that can be applied to a job.
.SS Values
.INDENT 0.0
.TP
.B \fBcancel\fP
see \fBjob\-cancel\fP
.TP
.B \fBpause\fP
see \fBjob\-pause\fP
.TP
.B \fBresume\fP
see \fBjob\-resume\fP
.TP
.B \fBset\-speed\fP
see \fBblock\-job\-set\-speed\fP
.TP
.B \fBcomplete\fP
see \fBjob\-complete\fP
.TP
.B \fBdismiss\fP
see \fBjob\-dismiss\fP
.TP
.B \fBfinalize\fP
see \fBjob\-finalize\fP
.UNINDENT
.SS Since
.sp
2.12
.SS \fBJOB_STATUS_CHANGE\fP (Event)
.sp
Emitted when a job transitions to a different status.
.SS Arguments
.INDENT 0.0
.TP
.B \fBid\fP: \fBstring\fP
The job identifier
.TP
.B \fBstatus\fP: \fBJobStatus\fP
The new job status
.UNINDENT
.SS Since
.sp
3.0
.SS \fBjob\-pause\fP (Command)
.sp
Pause an active job.
.sp
This command returns immediately after marking the active job for pausing.
Pausing an already paused job is an error.
.sp
The job will pause as soon as possible, which means transitioning into the
PAUSED state if it was RUNNING, or into STANDBY if it was READY. The
corresponding JOB_STATUS_CHANGE event will be emitted.
.sp
Cancelling a paused job automatically resumes it.
.SS Arguments
.INDENT 0.0
.TP
.B \fBid\fP: \fBstring\fP
The job identifier.
.UNINDENT
.SS Since
.sp
3.0
.SS \fBjob\-resume\fP (Command)
.sp
Resume a paused job.
.sp
This command returns immediately after resuming a paused job. Resuming an
already running job is an error.
.sp
\fBid\fP : The job identifier.
.SS Arguments
.INDENT 0.0
.TP
.B \fBid\fP: \fBstring\fP
Not documented
.UNINDENT
.SS Since
.sp
3.0
.SS \fBjob\-cancel\fP (Command)
.sp
Instruct an active background job to cancel at the next opportunity.
This command returns immediately after marking the active job for
cancellation.
.sp
The job will cancel as soon as possible and then emit a JOB_STATUS_CHANGE
event. Usually, the status will change to ABORTING, but it is possible that
a job successfully completes (e.g. because it was almost done and there was
no opportunity to cancel earlier than completing the job) and transitions to
PENDING instead.
.SS Arguments
.INDENT 0.0
.TP
.B \fBid\fP: \fBstring\fP
The job identifier.
.UNINDENT
.SS Since
.sp
3.0
.SS \fBjob\-complete\fP (Command)
.sp
Manually trigger completion of an active job in the READY state.
.SS Arguments
.INDENT 0.0
.TP
.B \fBid\fP: \fBstring\fP
The job identifier.
.UNINDENT
.SS Since
.sp
3.0
.SS \fBjob\-dismiss\fP (Command)
.sp
Deletes a job that is in the CONCLUDED state. This command only needs to be
run explicitly for jobs that don\(aqt have automatic dismiss enabled.
.sp
This command will refuse to operate on any job that has not yet reached its
terminal state, JOB_STATUS_CONCLUDED. For jobs that make use of JOB_READY
event, job\-cancel or job\-complete will still need to be used as appropriate.
.SS Arguments
.INDENT 0.0
.TP
.B \fBid\fP: \fBstring\fP
The job identifier.
.UNINDENT
.SS Since
.sp
3.0
.SS \fBjob\-finalize\fP (Command)
.sp
Instructs all jobs in a transaction (or a single job if it is not part of any
transaction) to finalize any graph changes and do any necessary cleanup. This
command requires that all involved jobs are in the PENDING state.
.sp
For jobs in a transaction, instructing one job to finalize will force
ALL jobs in the transaction to finalize, so it is only necessary to instruct
a single member job to finalize.
.SS Arguments
.INDENT 0.0
.TP
.B \fBid\fP: \fBstring\fP
The identifier of any job in the transaction, or of a job that is not
part of any transaction.
.UNINDENT
.SS Since
.sp
3.0
.SS \fBJobInfo\fP (Object)
.sp
Information about a job.
.SS Members
.INDENT 0.0
.TP
.B \fBid\fP: \fBstring\fP
The job identifier
.TP
.B \fBtype\fP: \fBJobType\fP
The kind of job that is being performed
.TP
.B \fBstatus\fP: \fBJobStatus\fP
Current job state/status
.TP
.B \fBcurrent\-progress\fP: \fBint\fP
Progress made until now. The unit is arbitrary and the
value can only meaningfully be used for the ratio of
\fBcurrent\-progress\fP to \fBtotal\-progress\fP\&. The value is
monotonically increasing.
.TP
.B \fBtotal\-progress\fP: \fBint\fP
Estimated \fBcurrent\-progress\fP value at the completion of
the job. This value can arbitrarily change while the
job is running, in both directions.
.TP
.B \fBerror\fP: \fBstring\fP (optional)
If this field is present, the job failed; if it is
still missing in the CONCLUDED state, this indicates
successful completion.
.sp
The value is a human\-readable error message to describe
the reason for the job failure. It should not be parsed
by applications.
.UNINDENT
.SS Since
.sp
3.0
.SS \fBquery\-jobs\fP (Command)
.sp
Return information about jobs.
.SS Returns
.sp
a list with a \fBJobInfo\fP for each active job
.SS Since
.sp
3.0
.SH SOCKET DATA TYPES
.SS \fBNetworkAddressFamily\fP (Enum)
.sp
The network address family
.SS Values
.INDENT 0.0
.TP
.B \fBipv4\fP
IPV4 family
.TP
.B \fBipv6\fP
IPV6 family
.TP
.B \fBunix\fP
unix socket
.TP
.B \fBvsock\fP
vsock family (since 2.8)
.TP
.B \fBunknown\fP
otherwise
.UNINDENT
.SS Since
.sp
2.1
.SS \fBInetSocketAddressBase\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBhost\fP: \fBstring\fP
host part of the address
.TP
.B \fBport\fP: \fBstring\fP
port part of the address
.UNINDENT
.SS \fBInetSocketAddress\fP (Object)
.sp
Captures a socket address or address range in the Internet namespace.
.SS Members
.INDENT 0.0
.TP
.B \fBnumeric\fP: \fBboolean\fP (optional)
true if the host/port are guaranteed to be numeric,
false if name resolution should be attempted. Defaults to false.
(Since 2.9)
.TP
.B \fBto\fP: \fBint\fP (optional)
If present, this is range of possible addresses, with port
between \fBport\fP and \fBto\fP\&.
.TP
.B \fBipv4\fP: \fBboolean\fP (optional)
whether to accept IPv4 addresses, default try both IPv4 and IPv6
.TP
.B \fBipv6\fP: \fBboolean\fP (optional)
whether to accept IPv6 addresses, default try both IPv4 and IPv6
.TP
.B \fBkeep\-alive\fP: \fBboolean\fP (optional)
enable keep\-alive when connecting to this socket. Not supported
for passive sockets. (Since 4.2)
.TP
\fBmptcp\fP: \fBboolean\fP (optional) (\fBIf: \fP\fBHAVE_IPPROTO_MPTCP\fP)
enable multi\-path TCP. (Since 6.1)
.TP
.B The members of \fBInetSocketAddressBase\fP
.UNINDENT
.SS Since
.sp
1.3
.SS \fBUnixSocketAddress\fP (Object)
.sp
Captures a socket address in the local ("Unix socket") namespace.
.SS Members
.INDENT 0.0
.TP
.B \fBpath\fP: \fBstring\fP
filesystem path to use
.TP
\fBabstract\fP: \fBboolean\fP (optional) (\fBIf: \fP\fBCONFIG_LINUX\fP)
if true, this is a Linux abstract socket address.  \fBpath\fP
will be prefixed by a null byte, and optionally padded
with null bytes.  Defaults to false.  (Since 5.1)
.TP
\fBtight\fP: \fBboolean\fP (optional) (\fBIf: \fP\fBCONFIG_LINUX\fP)
if false, pad an abstract socket address with enough null
bytes to make it fill struct sockaddr_un member sun_path.
Defaults to true.  (Since 5.1)
.UNINDENT
.SS Since
.sp
1.3
.SS \fBVsockSocketAddress\fP (Object)
.sp
Captures a socket address in the vsock namespace.
.SS Members
.INDENT 0.0
.TP
.B \fBcid\fP: \fBstring\fP
unique host identifier
.TP
.B \fBport\fP: \fBstring\fP
port
.UNINDENT
.SS Note
.sp
string types are used to allow for possible future hostname or
service resolution support.
.SS Since
.sp
2.8
.SS \fBInetSocketAddressWrapper\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBdata\fP: \fBInetSocketAddress\fP
Not documented
.UNINDENT
.SS Since
.sp
1.3
.SS \fBUnixSocketAddressWrapper\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBdata\fP: \fBUnixSocketAddress\fP
Not documented
.UNINDENT
.SS Since
.sp
1.3
.SS \fBVsockSocketAddressWrapper\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBdata\fP: \fBVsockSocketAddress\fP
Not documented
.UNINDENT
.SS Since
.sp
2.8
.SS \fBStringWrapper\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBdata\fP: \fBString\fP
Not documented
.UNINDENT
.SS Since
.sp
1.3
.SS \fBSocketAddressLegacy\fP (Object)
.sp
Captures the address of a socket, which could also be a named file descriptor
.SS Members
.INDENT 0.0
.TP
.B \fBtype\fP: \fBSocketAddressType\fP
Not documented
.TP
.B The members of \fBInetSocketAddressWrapper\fP when \fBtype\fP is \fB"inet"\fP
.TP
.B The members of \fBUnixSocketAddressWrapper\fP when \fBtype\fP is \fB"unix"\fP
.TP
.B The members of \fBVsockSocketAddressWrapper\fP when \fBtype\fP is \fB"vsock"\fP
.TP
.B The members of \fBStringWrapper\fP when \fBtype\fP is \fB"fd"\fP
.UNINDENT
.SS Note
.sp
This type is deprecated in favor of SocketAddress.  The
difference between SocketAddressLegacy and SocketAddress is that the
latter has fewer {} on the wire.
.SS Since
.sp
1.3
.SS \fBSocketAddressType\fP (Enum)
.sp
Available SocketAddress types
.SS Values
.INDENT 0.0
.TP
.B \fBinet\fP
Internet address
.TP
.B \fBunix\fP
Unix domain socket
.TP
.B \fBvsock\fP
VMCI address
.TP
.B \fBfd\fP
decimal is for file descriptor number, otherwise a file descriptor name.
Named file descriptors are permitted in monitor commands, in combination
with the \(aqgetfd\(aq command. Decimal file descriptors are permitted at
startup or other contexts where no monitor context is active.
.UNINDENT
.SS Since
.sp
2.9
.SS \fBSocketAddress\fP (Object)
.sp
Captures the address of a socket, which could also be a named file
descriptor
.SS Members
.INDENT 0.0
.TP
.B \fBtype\fP: \fBSocketAddressType\fP
Transport type
.TP
.B The members of \fBInetSocketAddress\fP when \fBtype\fP is \fB"inet"\fP
.TP
.B The members of \fBUnixSocketAddress\fP when \fBtype\fP is \fB"unix"\fP
.TP
.B The members of \fBVsockSocketAddress\fP when \fBtype\fP is \fB"vsock"\fP
.TP
.B The members of \fBString\fP when \fBtype\fP is \fB"fd"\fP
.UNINDENT
.SS Since
.sp
2.9
.SS \fBSnapshotInfo\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBid\fP: \fBstring\fP
unique snapshot id
.TP
.B \fBname\fP: \fBstring\fP
user chosen name
.TP
.B \fBvm\-state\-size\fP: \fBint\fP
size of the VM state
.TP
.B \fBdate\-sec\fP: \fBint\fP
UTC date of the snapshot in seconds
.TP
.B \fBdate\-nsec\fP: \fBint\fP
fractional part in nano seconds to be used with date\-sec
.TP
.B \fBvm\-clock\-sec\fP: \fBint\fP
VM clock relative to boot in seconds
.TP
.B \fBvm\-clock\-nsec\fP: \fBint\fP
fractional part in nano seconds to be used with vm\-clock\-sec
.TP
.B \fBicount\fP: \fBint\fP (optional)
Current instruction count. Appears when execution record/replay
is enabled. Used for "time\-traveling" to match the moment
in the recorded execution with the snapshots. This counter may
be obtained through \fBquery\-replay\fP command (since 5.2)
.UNINDENT
.SS Since
.sp
1.3
.SS \fBImageInfoSpecificQCow2EncryptionBase\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBformat\fP: \fBBlockdevQcow2EncryptionFormat\fP
The encryption format
.UNINDENT
.SS Since
.sp
2.10
.SS \fBImageInfoSpecificQCow2Encryption\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B The members of \fBImageInfoSpecificQCow2EncryptionBase\fP
.TP
.B The members of \fBQCryptoBlockInfoLUKS\fP when \fBformat\fP is \fB"luks"\fP
.UNINDENT
.SS Since
.sp
2.10
.SS \fBImageInfoSpecificQCow2\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBcompat\fP: \fBstring\fP
compatibility level
.TP
.B \fBdata\-file\fP: \fBstring\fP (optional)
the filename of the external data file that is stored in the
image and used as a default for opening the image (since: 4.0)
.TP
.B \fBdata\-file\-raw\fP: \fBboolean\fP (optional)
True if the external data file must stay valid as a
standalone (read\-only) raw image without looking at qcow2
metadata (since: 4.0)
.TP
.B \fBextended\-l2\fP: \fBboolean\fP (optional)
true if the image has extended L2 entries; only valid for
compat >= 1.1 (since 5.2)
.TP
.B \fBlazy\-refcounts\fP: \fBboolean\fP (optional)
on or off; only valid for compat >= 1.1
.TP
.B \fBcorrupt\fP: \fBboolean\fP (optional)
true if the image has been marked corrupt; only valid for
compat >= 1.1 (since 2.2)
.TP
.B \fBrefcount\-bits\fP: \fBint\fP
width of a refcount entry in bits (since 2.3)
.TP
.B \fBencrypt\fP: \fBImageInfoSpecificQCow2Encryption\fP (optional)
details about encryption parameters; only set if image
is encrypted (since 2.10)
.TP
.B \fBbitmaps\fP: \fBarray of Qcow2BitmapInfo\fP (optional)
A list of qcow2 bitmap details (since 4.0)
.TP
.B \fBcompression\-type\fP: \fBQcow2CompressionType\fP
the image cluster compression method (since 5.1)
.UNINDENT
.SS Since
.sp
1.7
.SS \fBImageInfoSpecificVmdk\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBcreate\-type\fP: \fBstring\fP
The create type of VMDK image
.TP
.B \fBcid\fP: \fBint\fP
Content id of image
.TP
.B \fBparent\-cid\fP: \fBint\fP
Parent VMDK image\(aqs cid
.TP
.B \fBextents\fP: \fBarray of ImageInfo\fP
List of extent files
.UNINDENT
.SS Since
.sp
1.7
.SS \fBImageInfoSpecificRbd\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBencryption\-format\fP: \fBRbdImageEncryptionFormat\fP (optional)
Image encryption format
.UNINDENT
.SS Since
.sp
6.1
.SS \fBImageInfoSpecificKind\fP (Enum)
.SS Values
.INDENT 0.0
.TP
.B \fBluks\fP
Since 2.7
.TP
.B \fBrbd\fP
Since 6.1
.TP
.B \fBqcow2\fP
Not documented
.TP
.B \fBvmdk\fP
Not documented
.UNINDENT
.SS Since
.sp
1.7
.SS \fBImageInfoSpecificQCow2Wrapper\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBdata\fP: \fBImageInfoSpecificQCow2\fP
Not documented
.UNINDENT
.SS Since
.sp
1.7
.SS \fBImageInfoSpecificVmdkWrapper\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBdata\fP: \fBImageInfoSpecificVmdk\fP
Not documented
.UNINDENT
.SS Since
.sp
6.1
.SS \fBImageInfoSpecificLUKSWrapper\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBdata\fP: \fBQCryptoBlockInfoLUKS\fP
Not documented
.UNINDENT
.SS Since
.sp
2.7
.SS \fBImageInfoSpecificRbdWrapper\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBdata\fP: \fBImageInfoSpecificRbd\fP
Not documented
.UNINDENT
.SS Since
.sp
6.1
.SS \fBImageInfoSpecific\fP (Object)
.sp
A discriminated record of image format specific information structures.
.SS Members
.INDENT 0.0
.TP
.B \fBtype\fP: \fBImageInfoSpecificKind\fP
Not documented
.TP
.B The members of \fBImageInfoSpecificQCow2Wrapper\fP when \fBtype\fP is \fB"qcow2"\fP
.TP
.B The members of \fBImageInfoSpecificVmdkWrapper\fP when \fBtype\fP is \fB"vmdk"\fP
.TP
.B The members of \fBImageInfoSpecificLUKSWrapper\fP when \fBtype\fP is \fB"luks"\fP
.TP
.B The members of \fBImageInfoSpecificRbdWrapper\fP when \fBtype\fP is \fB"rbd"\fP
.UNINDENT
.SS Since
.sp
1.7
.SS \fBImageInfo\fP (Object)
.sp
Information about a QEMU image file
.SS Members
.INDENT 0.0
.TP
.B \fBfilename\fP: \fBstring\fP
name of the image file
.TP
.B \fBformat\fP: \fBstring\fP
format of the image file
.TP
.B \fBvirtual\-size\fP: \fBint\fP
maximum capacity in bytes of the image
.TP
.B \fBactual\-size\fP: \fBint\fP (optional)
actual size on disk in bytes of the image
.TP
.B \fBdirty\-flag\fP: \fBboolean\fP (optional)
true if image is not cleanly closed
.TP
.B \fBcluster\-size\fP: \fBint\fP (optional)
size of a cluster in bytes
.TP
.B \fBencrypted\fP: \fBboolean\fP (optional)
true if the image is encrypted
.TP
.B \fBcompressed\fP: \fBboolean\fP (optional)
true if the image is compressed (Since 1.7)
.TP
.B \fBbacking\-filename\fP: \fBstring\fP (optional)
name of the backing file
.TP
.B \fBfull\-backing\-filename\fP: \fBstring\fP (optional)
full path of the backing file
.TP
.B \fBbacking\-filename\-format\fP: \fBstring\fP (optional)
the format of the backing file
.TP
.B \fBsnapshots\fP: \fBarray of SnapshotInfo\fP (optional)
list of VM snapshots
.TP
.B \fBbacking\-image\fP: \fBImageInfo\fP (optional)
info of the backing image (since 1.6)
.TP
.B \fBformat\-specific\fP: \fBImageInfoSpecific\fP (optional)
structure supplying additional format\-specific
information (since 1.7)
.UNINDENT
.SS Since
.sp
1.3
.SS \fBImageCheck\fP (Object)
.sp
Information about a QEMU image file check
.SS Members
.INDENT 0.0
.TP
.B \fBfilename\fP: \fBstring\fP
name of the image file checked
.TP
.B \fBformat\fP: \fBstring\fP
format of the image file checked
.TP
.B \fBcheck\-errors\fP: \fBint\fP
number of unexpected errors occurred during check
.TP
.B \fBimage\-end\-offset\fP: \fBint\fP (optional)
offset (in bytes) where the image ends, this
field is present if the driver for the image format
supports it
.TP
.B \fBcorruptions\fP: \fBint\fP (optional)
number of corruptions found during the check if any
.TP
.B \fBleaks\fP: \fBint\fP (optional)
number of leaks found during the check if any
.TP
.B \fBcorruptions\-fixed\fP: \fBint\fP (optional)
number of corruptions fixed during the check
if any
.TP
.B \fBleaks\-fixed\fP: \fBint\fP (optional)
number of leaks fixed during the check if any
.TP
.B \fBtotal\-clusters\fP: \fBint\fP (optional)
total number of clusters, this field is present
if the driver for the image format supports it
.TP
.B \fBallocated\-clusters\fP: \fBint\fP (optional)
total number of allocated clusters, this
field is present if the driver for the image format
supports it
.TP
.B \fBfragmented\-clusters\fP: \fBint\fP (optional)
total number of fragmented clusters, this
field is present if the driver for the image format
supports it
.TP
.B \fBcompressed\-clusters\fP: \fBint\fP (optional)
total number of compressed clusters, this
field is present if the driver for the image format
supports it
.UNINDENT
.SS Since
.sp
1.4
.SS \fBMapEntry\fP (Object)
.sp
Mapping information from a virtual block range to a host file range
.SS Members
.INDENT 0.0
.TP
.B \fBstart\fP: \fBint\fP
virtual (guest) offset of the first byte described by this
entry
.TP
.B \fBlength\fP: \fBint\fP
the number of bytes of the mapped virtual range
.TP
.B \fBdata\fP: \fBboolean\fP
reading the image will actually read data from a file (in
particular, if \fBoffset\fP is present this means that the sectors
are not simply preallocated, but contain actual data in raw
format)
.TP
.B \fBzero\fP: \fBboolean\fP
whether the virtual blocks read as zeroes
.TP
.B \fBdepth\fP: \fBint\fP
number of layers (0 = top image, 1 = top image\(aqs backing
file, ..., n \- 1 = bottom image (where n is the number of
images in the chain)) before reaching one for which the
range is allocated
.TP
.B \fBpresent\fP: \fBboolean\fP
true if this layer provides the data, false if adding a backing
layer could impact this region (since 6.1)
.TP
.B \fBoffset\fP: \fBint\fP (optional)
if present, the image file stores the data for this range
in raw format at the given (host) offset
.TP
.B \fBfilename\fP: \fBstring\fP (optional)
filename that is referred to by \fBoffset\fP
.UNINDENT
.SS Since
.sp
2.6
.SS \fBBlockdevCacheInfo\fP (Object)
.sp
Cache mode information for a block device
.SS Members
.INDENT 0.0
.TP
.B \fBwriteback\fP: \fBboolean\fP
true if writeback mode is enabled
.TP
.B \fBdirect\fP: \fBboolean\fP
true if the host page cache is bypassed (O_DIRECT)
.TP
.B \fBno\-flush\fP: \fBboolean\fP
true if flush requests are ignored for the device
.UNINDENT
.SS Since
.sp
2.3
.SS \fBBlockDeviceInfo\fP (Object)
.sp
Information about the backing device for a block device.
.SS Members
.INDENT 0.0
.TP
.B \fBfile\fP: \fBstring\fP
the filename of the backing device
.TP
.B \fBnode\-name\fP: \fBstring\fP (optional)
the name of the block driver node (Since 2.0)
.TP
.B \fBro\fP: \fBboolean\fP
true if the backing device was open read\-only
.TP
.B \fBdrv\fP: \fBstring\fP
the name of the block format used to open the backing device. As of
0.14 this can be: \(aqblkdebug\(aq, \(aqbochs\(aq, \(aqcloop\(aq, \(aqcow\(aq, \(aqdmg\(aq,
\(aqfile\(aq, \(aqfile\(aq, \(aqftp\(aq, \(aqftps\(aq, \(aqhost_cdrom\(aq, \(aqhost_device\(aq,
\(aqhttp\(aq, \(aqhttps\(aq, \(aqluks\(aq, \(aqnbd\(aq, \(aqparallels\(aq, \(aqqcow\(aq,
\(aqqcow2\(aq, \(aqraw\(aq, \(aqvdi\(aq, \(aqvmdk\(aq, \(aqvpc\(aq, \(aqvvfat\(aq
2.2: \(aqarchipelago\(aq added, \(aqcow\(aq dropped
2.3: \(aqhost_floppy\(aq deprecated
2.5: \(aqhost_floppy\(aq dropped
2.6: \(aqluks\(aq added
2.8: \(aqreplication\(aq added, \(aqtftp\(aq dropped
2.9: \(aqarchipelago\(aq dropped
.TP
.B \fBbacking_file\fP: \fBstring\fP (optional)
the name of the backing file (for copy\-on\-write)
.TP
.B \fBbacking_file_depth\fP: \fBint\fP
number of files in the backing file chain (since: 1.2)
.TP
.B \fBencrypted\fP: \fBboolean\fP
true if the backing device is encrypted
.TP
.B \fBdetect_zeroes\fP: \fBBlockdevDetectZeroesOptions\fP
detect and optimize zero writes (Since 2.1)
.TP
.B \fBbps\fP: \fBint\fP
total throughput limit in bytes per second is specified
.TP
.B \fBbps_rd\fP: \fBint\fP
read throughput limit in bytes per second is specified
.TP
.B \fBbps_wr\fP: \fBint\fP
write throughput limit in bytes per second is specified
.TP
.B \fBiops\fP: \fBint\fP
total I/O operations per second is specified
.TP
.B \fBiops_rd\fP: \fBint\fP
read I/O operations per second is specified
.TP
.B \fBiops_wr\fP: \fBint\fP
write I/O operations per second is specified
.TP
.B \fBimage\fP: \fBImageInfo\fP
the info of image used (since: 1.6)
.TP
.B \fBbps_max\fP: \fBint\fP (optional)
.INDENT 7.0
.TP
.B total throughput limit during bursts,
in bytes (Since 1.7)
.UNINDENT
.TP
.B \fBbps_rd_max\fP: \fBint\fP (optional)
.INDENT 7.0
.TP
.B read throughput limit during bursts,
in bytes (Since 1.7)
.UNINDENT
.TP
.B \fBbps_wr_max\fP: \fBint\fP (optional)
.INDENT 7.0
.TP
.B write throughput limit during bursts,
in bytes (Since 1.7)
.UNINDENT
.TP
.B \fBiops_max\fP: \fBint\fP (optional)
.INDENT 7.0
.TP
.B total I/O operations per second during bursts,
in bytes (Since 1.7)
.UNINDENT
.TP
.B \fBiops_rd_max\fP: \fBint\fP (optional)
.INDENT 7.0
.TP
.B read I/O operations per second during bursts,
in bytes (Since 1.7)
.UNINDENT
.TP
.B \fBiops_wr_max\fP: \fBint\fP (optional)
.INDENT 7.0
.TP
.B write I/O operations per second during bursts,
in bytes (Since 1.7)
.UNINDENT
.TP
.B \fBbps_max_length\fP: \fBint\fP (optional)
.INDENT 7.0
.TP
.B maximum length of the \fBbps_max\fP burst
period, in seconds. (Since 2.6)
.UNINDENT
.TP
.B \fBbps_rd_max_length\fP: \fBint\fP (optional)
.INDENT 7.0
.TP
.B maximum length of the \fBbps_rd_max\fP
burst period, in seconds. (Since 2.6)
.UNINDENT
.TP
.B \fBbps_wr_max_length\fP: \fBint\fP (optional)
.INDENT 7.0
.TP
.B maximum length of the \fBbps_wr_max\fP
burst period, in seconds. (Since 2.6)
.UNINDENT
.TP
.B \fBiops_max_length\fP: \fBint\fP (optional)
.INDENT 7.0
.TP
.B maximum length of the \fBiops\fP burst
period, in seconds. (Since 2.6)
.UNINDENT
.TP
.B \fBiops_rd_max_length\fP: \fBint\fP (optional)
.INDENT 7.0
.TP
.B maximum length of the \fBiops_rd_max\fP
burst period, in seconds. (Since 2.6)
.UNINDENT
.TP
.B \fBiops_wr_max_length\fP: \fBint\fP (optional)
.INDENT 7.0
.TP
.B maximum length of the \fBiops_wr_max\fP
burst period, in seconds. (Since 2.6)
.UNINDENT
.TP
.B \fBiops_size\fP: \fBint\fP (optional)
an I/O size in bytes (Since 1.7)
.TP
.B \fBgroup\fP: \fBstring\fP (optional)
throttle group name (Since 2.4)
.TP
.B \fBcache\fP: \fBBlockdevCacheInfo\fP
the cache mode used for the block device (since: 2.3)
.TP
.B \fBwrite_threshold\fP: \fBint\fP
configured write threshold for the device.
0 if disabled. (Since 2.3)
.TP
.B \fBdirty\-bitmaps\fP: \fBarray of BlockDirtyInfo\fP (optional)
dirty bitmaps information (only present if node
has one or more dirty bitmaps) (Since 4.2)
.UNINDENT
.SS Since
.sp
0.14
.SS \fBBlockDeviceIoStatus\fP (Enum)
.sp
An enumeration of block device I/O status.
.SS Values
.INDENT 0.0
.TP
.B \fBok\fP
The last I/O operation has succeeded
.TP
.B \fBfailed\fP
The last I/O operation has failed
.TP
.B \fBnospace\fP
The last I/O operation has failed due to a no\-space condition
.UNINDENT
.SS Since
.sp
1.0
.SS \fBBlockDirtyInfo\fP (Object)
.sp
Block dirty bitmap information.
.SS Members
.INDENT 0.0
.TP
.B \fBname\fP: \fBstring\fP (optional)
the name of the dirty bitmap (Since 2.4)
.TP
.B \fBcount\fP: \fBint\fP
number of dirty bytes according to the dirty bitmap
.TP
.B \fBgranularity\fP: \fBint\fP
granularity of the dirty bitmap in bytes (since 1.4)
.TP
.B \fBrecording\fP: \fBboolean\fP
true if the bitmap is recording new writes from the guest.
Replaces \fBactive\fP and \fBdisabled\fP statuses. (since 4.0)
.TP
.B \fBbusy\fP: \fBboolean\fP
true if the bitmap is in\-use by some operation (NBD or jobs)
and cannot be modified via QMP or used by another operation.
Replaces \fBlocked\fP and \fBfrozen\fP statuses. (since 4.0)
.TP
.B \fBpersistent\fP: \fBboolean\fP
true if the bitmap was stored on disk, is scheduled to be stored
on disk, or both. (since 4.0)
.TP
.B \fBinconsistent\fP: \fBboolean\fP (optional)
true if this is a persistent bitmap that was improperly
stored. Implies \fBpersistent\fP to be true; \fBrecording\fP and
\fBbusy\fP to be false. This bitmap cannot be used. To remove
it, use \fBblock\-dirty\-bitmap\-remove\fP\&. (Since 4.0)
.UNINDENT
.SS Since
.sp
1.3
.SS \fBQcow2BitmapInfoFlags\fP (Enum)
.sp
An enumeration of flags that a bitmap can report to the user.
.SS Values
.INDENT 0.0
.TP
.B \fBin\-use\fP
This flag is set by any process actively modifying the qcow2 file,
and cleared when the updated bitmap is flushed to the qcow2 image.
The presence of this flag in an offline image means that the bitmap
was not saved correctly after its last usage, and may contain
inconsistent data.
.TP
.B \fBauto\fP
The bitmap must reflect all changes of the virtual disk by any
application that would write to this qcow2 file.
.UNINDENT
.SS Since
.sp
4.0
.SS \fBQcow2BitmapInfo\fP (Object)
.sp
Qcow2 bitmap information.
.SS Members
.INDENT 0.0
.TP
.B \fBname\fP: \fBstring\fP
the name of the bitmap
.TP
.B \fBgranularity\fP: \fBint\fP
granularity of the bitmap in bytes
.TP
.B \fBflags\fP: \fBarray of Qcow2BitmapInfoFlags\fP
flags of the bitmap
.UNINDENT
.SS Since
.sp
4.0
.SS \fBBlockLatencyHistogramInfo\fP (Object)
.sp
Block latency histogram.
.SS Members
.INDENT 0.0
.TP
.B \fBboundaries\fP: \fBarray of int\fP
list of interval boundary values in nanoseconds, all greater
than zero and in ascending order.
For example, the list [10, 50, 100] produces the following
histogram intervals: [0, 10), [10, 50), [50, 100), [100, +inf).
.TP
.B \fBbins\fP: \fBarray of int\fP
list of io request counts corresponding to histogram intervals.
len(\fBbins\fP) = len(\fBboundaries\fP) + 1
For the example above, \fBbins\fP may be something like [3, 1, 5, 2],
and corresponding histogram looks like:
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
5|           *
4|           *
3| *         *
2| *         *    *
1| *    *    *    *
 +\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
     10   50   100
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Since
.sp
4.0
.SS \fBBlockInfo\fP (Object)
.sp
Block device information.  This structure describes a virtual device and
the backing device associated with it.
.SS Members
.INDENT 0.0
.TP
.B \fBdevice\fP: \fBstring\fP
The device name associated with the virtual device.
.TP
.B \fBqdev\fP: \fBstring\fP (optional)
The qdev ID, or if no ID is assigned, the QOM path of the block
device. (since 2.10)
.TP
.B \fBtype\fP: \fBstring\fP
This field is returned only for compatibility reasons, it should
not be used (always returns \(aqunknown\(aq)
.TP
.B \fBremovable\fP: \fBboolean\fP
True if the device supports removable media.
.TP
.B \fBlocked\fP: \fBboolean\fP
True if the guest has locked this device from having its media
removed
.TP
.B \fBtray_open\fP: \fBboolean\fP (optional)
True if the device\(aqs tray is open
(only present if it has a tray)
.TP
.B \fBio\-status\fP: \fBBlockDeviceIoStatus\fP (optional)
\fBBlockDeviceIoStatus\fP\&. Only present if the device
supports it and the VM is configured to stop on errors
(supported device models: virtio\-blk, IDE, SCSI except
scsi\-generic)
.TP
.B \fBinserted\fP: \fBBlockDeviceInfo\fP (optional)
\fBBlockDeviceInfo\fP describing the device if media is
present
.UNINDENT
.SS Since
.sp
0.14
.SS \fBBlockMeasureInfo\fP (Object)
.sp
Image file size calculation information.  This structure describes the size
requirements for creating a new image file.
.sp
The size requirements depend on the new image file format.  File size always
equals virtual disk size for the \(aqraw\(aq format, even for sparse POSIX files.
Compact formats such as \(aqqcow2\(aq represent unallocated and zero regions
efficiently so file size may be smaller than virtual disk size.
.sp
The values are upper bounds that are guaranteed to fit the new image file.
Subsequent modification, such as internal snapshot or further bitmap
creation, may require additional space and is not covered here.
.SS Members
.INDENT 0.0
.TP
.B \fBrequired\fP: \fBint\fP
Size required for a new image file, in bytes, when copying just
allocated guest\-visible contents.
.TP
.B \fBfully\-allocated\fP: \fBint\fP
Image file size, in bytes, once data has been written
to all sectors, when copying just guest\-visible contents.
.TP
.B \fBbitmaps\fP: \fBint\fP (optional)
Additional size required if all the top\-level bitmap metadata
in the source image were to be copied to the destination,
present only when source and destination both support
persistent bitmaps. (since 5.1)
.UNINDENT
.SS Since
.sp
2.10
.SS \fBquery\-block\fP (Command)
.sp
Get a list of BlockInfo for all virtual block devices.
.SS Returns
.sp
a list of \fBBlockInfo\fP describing each virtual block device. Filter
nodes that were created implicitly are skipped over.
.SS Since
.sp
0.14
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { "execute": "query\-block" }
<\- {
      "return":[
         {
            "io\-status": "ok",
            "device":"ide0\-hd0",
            "locked":false,
            "removable":false,
            "inserted":{
               "ro":false,
               "drv":"qcow2",
               "encrypted":false,
               "file":"disks/test.qcow2",
               "backing_file_depth":1,
               "bps":1000000,
               "bps_rd":0,
               "bps_wr":0,
               "iops":1000000,
               "iops_rd":0,
               "iops_wr":0,
               "bps_max": 8000000,
               "bps_rd_max": 0,
               "bps_wr_max": 0,
               "iops_max": 0,
               "iops_rd_max": 0,
               "iops_wr_max": 0,
               "iops_size": 0,
               "detect_zeroes": "on",
               "write_threshold": 0,
               "image":{
                  "filename":"disks/test.qcow2",
                  "format":"qcow2",
                  "virtual\-size":2048000,
                  "backing_file":"base.qcow2",
                  "full\-backing\-filename":"disks/base.qcow2",
                  "backing\-filename\-format":"qcow2",
                  "snapshots":[
                     {
                        "id": "1",
                        "name": "snapshot1",
                        "vm\-state\-size": 0,
                        "date\-sec": 10000200,
                        "date\-nsec": 12,
                        "vm\-clock\-sec": 206,
                        "vm\-clock\-nsec": 30
                     }
                  ],
                  "backing\-image":{
                      "filename":"disks/base.qcow2",
                      "format":"qcow2",
                      "virtual\-size":2048000
                  }
               }
            },
            "qdev": "ide_disk",
            "type":"unknown"
         },
         {
            "io\-status": "ok",
            "device":"ide1\-cd0",
            "locked":false,
            "removable":true,
            "qdev": "/machine/unattached/device[23]",
            "tray_open": false,
            "type":"unknown"
         },
         {
            "device":"floppy0",
            "locked":false,
            "removable":true,
            "qdev": "/machine/unattached/device[20]",
            "type":"unknown"
         },
         {
            "device":"sd0",
            "locked":false,
            "removable":true,
            "type":"unknown"
         }
      ]
   }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBBlockDeviceTimedStats\fP (Object)
.sp
Statistics of a block device during a given interval of time.
.SS Members
.INDENT 0.0
.TP
.B \fBinterval_length\fP: \fBint\fP
Interval used for calculating the statistics,
in seconds.
.TP
.B \fBmin_rd_latency_ns\fP: \fBint\fP
Minimum latency of read operations in the
defined interval, in nanoseconds.
.TP
.B \fBmin_wr_latency_ns\fP: \fBint\fP
Minimum latency of write operations in the
defined interval, in nanoseconds.
.TP
.B \fBmin_flush_latency_ns\fP: \fBint\fP
Minimum latency of flush operations in the
defined interval, in nanoseconds.
.TP
.B \fBmax_rd_latency_ns\fP: \fBint\fP
Maximum latency of read operations in the
defined interval, in nanoseconds.
.TP
.B \fBmax_wr_latency_ns\fP: \fBint\fP
Maximum latency of write operations in the
defined interval, in nanoseconds.
.TP
.B \fBmax_flush_latency_ns\fP: \fBint\fP
Maximum latency of flush operations in the
defined interval, in nanoseconds.
.TP
.B \fBavg_rd_latency_ns\fP: \fBint\fP
Average latency of read operations in the
defined interval, in nanoseconds.
.TP
.B \fBavg_wr_latency_ns\fP: \fBint\fP
Average latency of write operations in the
defined interval, in nanoseconds.
.TP
.B \fBavg_flush_latency_ns\fP: \fBint\fP
Average latency of flush operations in the
defined interval, in nanoseconds.
.TP
.B \fBavg_rd_queue_depth\fP: \fBnumber\fP
Average number of pending read operations
in the defined interval.
.TP
.B \fBavg_wr_queue_depth\fP: \fBnumber\fP
Average number of pending write operations
in the defined interval.
.UNINDENT
.SS Since
.sp
2.5
.SS \fBBlockDeviceStats\fP (Object)
.sp
Statistics of a virtual block device or a block backing device.
.SS Members
.INDENT 0.0
.TP
.B \fBrd_bytes\fP: \fBint\fP
The number of bytes read by the device.
.TP
.B \fBwr_bytes\fP: \fBint\fP
The number of bytes written by the device.
.TP
.B \fBunmap_bytes\fP: \fBint\fP
The number of bytes unmapped by the device (Since 4.2)
.TP
.B \fBrd_operations\fP: \fBint\fP
The number of read operations performed by the device.
.TP
.B \fBwr_operations\fP: \fBint\fP
The number of write operations performed by the device.
.TP
.B \fBflush_operations\fP: \fBint\fP
The number of cache flush operations performed by the
device (since 0.15)
.TP
.B \fBunmap_operations\fP: \fBint\fP
The number of unmap operations performed by the device
(Since 4.2)
.TP
.B \fBrd_total_time_ns\fP: \fBint\fP
Total time spent on reads in nanoseconds (since 0.15).
.TP
.B \fBwr_total_time_ns\fP: \fBint\fP
Total time spent on writes in nanoseconds (since 0.15).
.TP
.B \fBflush_total_time_ns\fP: \fBint\fP
Total time spent on cache flushes in nanoseconds
(since 0.15).
.TP
.B \fBunmap_total_time_ns\fP: \fBint\fP
Total time spent on unmap operations in nanoseconds
(Since 4.2)
.TP
.B \fBwr_highest_offset\fP: \fBint\fP
The offset after the greatest byte written to the
device.  The intended use of this information is for
growable sparse files (like qcow2) that are used on top
of a physical device.
.TP
.B \fBrd_merged\fP: \fBint\fP
Number of read requests that have been merged into another
request (Since 2.3).
.TP
.B \fBwr_merged\fP: \fBint\fP
Number of write requests that have been merged into another
request (Since 2.3).
.TP
.B \fBunmap_merged\fP: \fBint\fP
Number of unmap requests that have been merged into another
request (Since 4.2)
.TP
.B \fBidle_time_ns\fP: \fBint\fP (optional)
Time since the last I/O operation, in
nanoseconds. If the field is absent it means that
there haven\(aqt been any operations yet (Since 2.5).
.TP
.B \fBfailed_rd_operations\fP: \fBint\fP
The number of failed read operations
performed by the device (Since 2.5)
.TP
.B \fBfailed_wr_operations\fP: \fBint\fP
The number of failed write operations
performed by the device (Since 2.5)
.TP
.B \fBfailed_flush_operations\fP: \fBint\fP
The number of failed flush operations
performed by the device (Since 2.5)
.TP
.B \fBfailed_unmap_operations\fP: \fBint\fP
The number of failed unmap operations performed
by the device (Since 4.2)
.TP
.B \fBinvalid_rd_operations\fP: \fBint\fP
.INDENT 7.0
.TP
.B The number of invalid read operations
performed by the device (Since 2.5)
.UNINDENT
.TP
.B \fBinvalid_wr_operations\fP: \fBint\fP
The number of invalid write operations
performed by the device (Since 2.5)
.TP
.B \fBinvalid_flush_operations\fP: \fBint\fP
The number of invalid flush operations
performed by the device (Since 2.5)
.TP
.B \fBinvalid_unmap_operations\fP: \fBint\fP
The number of invalid unmap operations performed
by the device (Since 4.2)
.TP
.B \fBaccount_invalid\fP: \fBboolean\fP
Whether invalid operations are included in the
last access statistics (Since 2.5)
.TP
.B \fBaccount_failed\fP: \fBboolean\fP
Whether failed operations are included in the
latency and last access statistics (Since 2.5)
.TP
.B \fBtimed_stats\fP: \fBarray of BlockDeviceTimedStats\fP
Statistics specific to the set of previously defined
intervals of time (Since 2.5)
.TP
.B \fBrd_latency_histogram\fP: \fBBlockLatencyHistogramInfo\fP (optional)
\fBBlockLatencyHistogramInfo\fP\&. (Since 4.0)
.TP
.B \fBwr_latency_histogram\fP: \fBBlockLatencyHistogramInfo\fP (optional)
\fBBlockLatencyHistogramInfo\fP\&. (Since 4.0)
.TP
.B \fBflush_latency_histogram\fP: \fBBlockLatencyHistogramInfo\fP (optional)
\fBBlockLatencyHistogramInfo\fP\&. (Since 4.0)
.UNINDENT
.SS Since
.sp
0.14
.SS \fBBlockStatsSpecificFile\fP (Object)
.sp
File driver statistics
.SS Members
.INDENT 0.0
.TP
.B \fBdiscard\-nb\-ok\fP: \fBint\fP
The number of successful discard operations performed by
the driver.
.TP
.B \fBdiscard\-nb\-failed\fP: \fBint\fP
The number of failed discard operations performed by
the driver.
.TP
.B \fBdiscard\-bytes\-ok\fP: \fBint\fP
The number of bytes discarded by the driver.
.UNINDENT
.SS Since
.sp
4.2
.SS \fBBlockStatsSpecificNvme\fP (Object)
.sp
NVMe driver statistics
.SS Members
.INDENT 0.0
.TP
.B \fBcompletion\-errors\fP: \fBint\fP
The number of completion errors.
.TP
.B \fBaligned\-accesses\fP: \fBint\fP
The number of aligned accesses performed by
the driver.
.TP
.B \fBunaligned\-accesses\fP: \fBint\fP
The number of unaligned accesses performed by
the driver.
.UNINDENT
.SS Since
.sp
5.2
.SS \fBBlockStatsSpecific\fP (Object)
.sp
Block driver specific statistics
.SS Members
.INDENT 0.0
.TP
.B \fBdriver\fP: \fBBlockdevDriver\fP
Not documented
.TP
.B The members of \fBBlockStatsSpecificFile\fP when \fBdriver\fP is \fB"file"\fP
.TP
The members of \fBBlockStatsSpecificFile\fP when \fBdriver\fP is \fB"host_device"\fP (\fBIf: \fP\fBHAVE_HOST_BLOCK_DEVICE\fP)
.TP
.B The members of \fBBlockStatsSpecificNvme\fP when \fBdriver\fP is \fB"nvme"\fP
.UNINDENT
.SS Since
.sp
4.2
.SS \fBBlockStats\fP (Object)
.sp
Statistics of a virtual block device or a block backing device.
.SS Members
.INDENT 0.0
.TP
.B \fBdevice\fP: \fBstring\fP (optional)
If the stats are for a virtual block device, the name
corresponding to the virtual block device.
.TP
.B \fBnode\-name\fP: \fBstring\fP (optional)
The node name of the device. (Since 2.3)
.TP
.B \fBqdev\fP: \fBstring\fP (optional)
The qdev ID, or if no ID is assigned, the QOM path of the block
device. (since 3.0)
.TP
.B \fBstats\fP: \fBBlockDeviceStats\fP
A \fBBlockDeviceStats\fP for the device.
.TP
.B \fBdriver\-specific\fP: \fBBlockStatsSpecific\fP (optional)
Optional driver\-specific stats. (Since 4.2)
.TP
.B \fBparent\fP: \fBBlockStats\fP (optional)
This describes the file block device if it has one.
Contains recursively the statistics of the underlying
protocol (e.g. the host file for a qcow2 image). If there is
no underlying protocol, this field is omitted
.TP
.B \fBbacking\fP: \fBBlockStats\fP (optional)
This describes the backing block device if it has one.
(Since 2.0)
.UNINDENT
.SS Since
.sp
0.14
.SS \fBquery\-blockstats\fP (Command)
.sp
Query the \fBBlockStats\fP for all virtual block devices.
.SS Arguments
.INDENT 0.0
.TP
.B \fBquery\-nodes\fP: \fBboolean\fP (optional)
If true, the command will query all the block nodes
that have a node name, in a list which will include "parent"
information, but not "backing".
If false or omitted, the behavior is as before \- query all the
device backends, recursively including their "parent" and
"backing". Filter nodes that were created implicitly are
skipped over in this mode. (Since 2.3)
.UNINDENT
.SS Returns
.sp
A list of \fBBlockStats\fP for each virtual block devices.
.SS Since
.sp
0.14
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { "execute": "query\-blockstats" }
<\- {
      "return":[
         {
            "device":"ide0\-hd0",
            "parent":{
               "stats":{
                  "wr_highest_offset":3686448128,
                  "wr_bytes":9786368,
                  "wr_operations":751,
                  "rd_bytes":122567168,
                  "rd_operations":36772
                  "wr_total_times_ns":313253456
                  "rd_total_times_ns":3465673657
                  "flush_total_times_ns":49653
                  "flush_operations":61,
                  "rd_merged":0,
                  "wr_merged":0,
                  "idle_time_ns":2953431879,
                  "account_invalid":true,
                  "account_failed":false
               }
            },
            "stats":{
               "wr_highest_offset":2821110784,
               "wr_bytes":9786368,
               "wr_operations":692,
               "rd_bytes":122739200,
               "rd_operations":36604
               "flush_operations":51,
               "wr_total_times_ns":313253456
               "rd_total_times_ns":3465673657
               "flush_total_times_ns":49653,
               "rd_merged":0,
               "wr_merged":0,
               "idle_time_ns":2953431879,
               "account_invalid":true,
               "account_failed":false
            },
            "qdev": "/machine/unattached/device[23]"
         },
         {
            "device":"ide1\-cd0",
            "stats":{
               "wr_highest_offset":0,
               "wr_bytes":0,
               "wr_operations":0,
               "rd_bytes":0,
               "rd_operations":0
               "flush_operations":0,
               "wr_total_times_ns":0
               "rd_total_times_ns":0
               "flush_total_times_ns":0,
               "rd_merged":0,
               "wr_merged":0,
               "account_invalid":false,
               "account_failed":false
            },
            "qdev": "/machine/unattached/device[24]"
         },
         {
            "device":"floppy0",
            "stats":{
               "wr_highest_offset":0,
               "wr_bytes":0,
               "wr_operations":0,
               "rd_bytes":0,
               "rd_operations":0
               "flush_operations":0,
               "wr_total_times_ns":0
               "rd_total_times_ns":0
               "flush_total_times_ns":0,
               "rd_merged":0,
               "wr_merged":0,
               "account_invalid":false,
               "account_failed":false
            },
            "qdev": "/machine/unattached/device[16]"
         },
         {
            "device":"sd0",
            "stats":{
               "wr_highest_offset":0,
               "wr_bytes":0,
               "wr_operations":0,
               "rd_bytes":0,
               "rd_operations":0
               "flush_operations":0,
               "wr_total_times_ns":0
               "rd_total_times_ns":0
               "flush_total_times_ns":0,
               "rd_merged":0,
               "wr_merged":0,
               "account_invalid":false,
               "account_failed":false
            }
         }
      ]
   }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBBlockdevOnError\fP (Enum)
.sp
An enumeration of possible behaviors for errors on I/O operations.
The exact meaning depends on whether the I/O was initiated by a guest
or by a block job
.SS Values
.INDENT 0.0
.TP
.B \fBreport\fP
for guest operations, report the error to the guest;
for jobs, cancel the job
.TP
.B \fBignore\fP
ignore the error, only report a QMP event (BLOCK_IO_ERROR
or BLOCK_JOB_ERROR). The backup, mirror and commit block jobs retry
the failing request later and may still complete successfully. The
stream block job continues to stream and will complete with an
error.
.TP
.B \fBenospc\fP
same as \fBstop\fP on ENOSPC, same as \fBreport\fP otherwise.
.TP
.B \fBstop\fP
for guest operations, stop the virtual machine;
for jobs, pause the job
.TP
.B \fBauto\fP
inherit the error handling policy of the backend (since: 2.7)
.UNINDENT
.SS Since
.sp
1.3
.SS \fBMirrorSyncMode\fP (Enum)
.sp
An enumeration of possible behaviors for the initial synchronization
phase of storage mirroring.
.SS Values
.INDENT 0.0
.TP
.B \fBtop\fP
copies data in the topmost image to the destination
.TP
.B \fBfull\fP
copies data from all images to the destination
.TP
.B \fBnone\fP
only copy data written from now on
.TP
.B \fBincremental\fP
only copy data described by the dirty bitmap. (since: 2.4)
.TP
.B \fBbitmap\fP
only copy data described by the dirty bitmap. (since: 4.2)
Behavior on completion is determined by the BitmapSyncMode.
.UNINDENT
.SS Since
.sp
1.3
.SS \fBBitmapSyncMode\fP (Enum)
.sp
An enumeration of possible behaviors for the synchronization of a bitmap
when used for data copy operations.
.SS Values
.INDENT 0.0
.TP
.B \fBon\-success\fP
The bitmap is only synced when the operation is successful.
This is the behavior always used for \(aqINCREMENTAL\(aq backups.
.TP
.B \fBnever\fP
The bitmap is never synchronized with the operation, and is
treated solely as a read\-only manifest of blocks to copy.
.TP
.B \fBalways\fP
The bitmap is always synchronized with the operation,
regardless of whether or not the operation was successful.
.UNINDENT
.SS Since
.sp
4.2
.SS \fBMirrorCopyMode\fP (Enum)
.sp
An enumeration whose values tell the mirror block job when to
trigger writes to the target.
.SS Values
.INDENT 0.0
.TP
.B \fBbackground\fP
copy data in background only.
.TP
.B \fBwrite\-blocking\fP
when data is written to the source, write it
(synchronously) to the target as well.  In
addition, data is copied in background just like in
\fBbackground\fP mode.
.UNINDENT
.SS Since
.sp
3.0
.SS \fBBlockJobInfo\fP (Object)
.sp
Information about a long\-running block device operation.
.SS Members
.INDENT 0.0
.TP
.B \fBtype\fP: \fBstring\fP
the job type (\(aqstream\(aq for image streaming)
.TP
.B \fBdevice\fP: \fBstring\fP
The job identifier. Originally the device name but other
values are allowed since QEMU 2.7
.TP
.B \fBlen\fP: \fBint\fP
Estimated \fBoffset\fP value at the completion of the job. This value can
arbitrarily change while the job is running, in both directions.
.TP
.B \fBoffset\fP: \fBint\fP
Progress made until now. The unit is arbitrary and the value can
only meaningfully be used for the ratio of \fBoffset\fP to \fBlen\fP\&. The
value is monotonically increasing.
.TP
.B \fBbusy\fP: \fBboolean\fP
false if the job is known to be in a quiescent state, with
no pending I/O.  Since 1.3.
.TP
.B \fBpaused\fP: \fBboolean\fP
whether the job is paused or, if \fBbusy\fP is true, will
pause itself as soon as possible.  Since 1.3.
.TP
.B \fBspeed\fP: \fBint\fP
the rate limit, bytes per second
.TP
.B \fBio\-status\fP: \fBBlockDeviceIoStatus\fP
the status of the job (since 1.3)
.TP
.B \fBready\fP: \fBboolean\fP
true if the job may be completed (since 2.2)
.TP
.B \fBstatus\fP: \fBJobStatus\fP
Current job state/status (since 2.12)
.TP
.B \fBauto\-finalize\fP: \fBboolean\fP
Job will finalize itself when PENDING, moving to
the CONCLUDED state. (since 2.12)
.TP
.B \fBauto\-dismiss\fP: \fBboolean\fP
Job will dismiss itself when CONCLUDED, moving to the NULL
state and disappearing from the query list. (since 2.12)
.TP
.B \fBerror\fP: \fBstring\fP (optional)
Error information if the job did not complete successfully.
Not set if the job completed successfully. (since 2.12.1)
.UNINDENT
.SS Since
.sp
1.1
.SS \fBquery\-block\-jobs\fP (Command)
.sp
Return information about long\-running block device operations.
.SS Returns
.sp
a list of \fBBlockJobInfo\fP for each active block job
.SS Since
.sp
1.1
.SS \fBblock_resize\fP (Command)
.sp
Resize a block image while a guest is running.
.sp
Either \fBdevice\fP or \fBnode\-name\fP must be set but not both.
.SS Arguments
.INDENT 0.0
.TP
.B \fBdevice\fP: \fBstring\fP (optional)
the name of the device to get the image resized
.TP
.B \fBnode\-name\fP: \fBstring\fP (optional)
graph node name to get the image resized (Since 2.0)
.TP
.B \fBsize\fP: \fBint\fP
new image size in bytes
.UNINDENT
.SS Returns
.INDENT 0.0
.IP \(bu 2
nothing on success
.IP \(bu 2
If \fBdevice\fP is not a valid block device, DeviceNotFound
.UNINDENT
.SS Since
.sp
0.14
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { "execute": "block_resize",
     "arguments": { "device": "scratch", "size": 1073741824 } }
<\- { "return": {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBNewImageMode\fP (Enum)
.sp
An enumeration that tells QEMU how to set the backing file path in
a new image file.
.SS Values
.INDENT 0.0
.TP
.B \fBexisting\fP
QEMU should look for an existing image file.
.TP
.B \fBabsolute\-paths\fP
QEMU should create a new image with absolute paths
for the backing file. If there is no backing file available, the new
image will not be backed either.
.UNINDENT
.SS Since
.sp
1.1
.SS \fBBlockdevSnapshotSync\fP (Object)
.sp
Either \fBdevice\fP or \fBnode\-name\fP must be set but not both.
.SS Members
.INDENT 0.0
.TP
.B \fBdevice\fP: \fBstring\fP (optional)
the name of the device to take a snapshot of.
.TP
.B \fBnode\-name\fP: \fBstring\fP (optional)
graph node name to generate the snapshot from (Since 2.0)
.TP
.B \fBsnapshot\-file\fP: \fBstring\fP
the target of the new overlay image. If the file
exists, or if it is a device, the overlay will be created in the
existing file/device. Otherwise, a new file will be created.
.TP
.B \fBsnapshot\-node\-name\fP: \fBstring\fP (optional)
the graph node name of the new image (Since 2.0)
.TP
.B \fBformat\fP: \fBstring\fP (optional)
the format of the overlay image, default is \(aqqcow2\(aq.
.TP
.B \fBmode\fP: \fBNewImageMode\fP (optional)
whether and how QEMU should create a new image, default is
\(aqabsolute\-paths\(aq.
.UNINDENT
.SS \fBBlockdevSnapshot\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBnode\fP: \fBstring\fP
device or node name that will have a snapshot taken.
.TP
.B \fBoverlay\fP: \fBstring\fP
reference to the existing block device that will become
the overlay of \fBnode\fP, as part of taking the snapshot.
It must not have a current backing file (this can be
achieved by passing "backing": null to blockdev\-add).
.UNINDENT
.SS Since
.sp
2.5
.SS \fBBackupPerf\fP (Object)
.sp
Optional parameters for backup. These parameters don\(aqt affect
functionality, but may significantly affect performance.
.SS Members
.INDENT 0.0
.TP
.B \fBuse\-copy\-range\fP: \fBboolean\fP (optional)
Use copy offloading. Default false.
.TP
.B \fBmax\-workers\fP: \fBint\fP (optional)
Maximum number of parallel requests for the sustained background
copying process. Doesn\(aqt influence copy\-before\-write operations.
Default 64.
.TP
.B \fBmax\-chunk\fP: \fBint\fP (optional)
Maximum request length for the sustained background copying
process. Doesn\(aqt influence copy\-before\-write operations.
0 means unlimited. If max\-chunk is non\-zero then it should not be
less than job cluster size which is calculated as maximum of
target image cluster size and 64k. Default 0.
.UNINDENT
.SS Since
.sp
6.0
.SS \fBBackupCommon\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBjob\-id\fP: \fBstring\fP (optional)
identifier for the newly\-created block job. If
omitted, the device name will be used. (Since 2.7)
.TP
.B \fBdevice\fP: \fBstring\fP
the device name or node\-name of a root node which should be copied.
.TP
.B \fBsync\fP: \fBMirrorSyncMode\fP
what parts of the disk image should be copied to the destination
(all the disk, only the sectors allocated in the topmost image, from a
dirty bitmap, or only new I/O).
.TP
.B \fBspeed\fP: \fBint\fP (optional)
the maximum speed, in bytes per second. The default is 0,
for unlimited.
.TP
.B \fBbitmap\fP: \fBstring\fP (optional)
The name of a dirty bitmap to use.
Must be present if sync is "bitmap" or "incremental".
Can be present if sync is "full" or "top".
Must not be present otherwise.
(Since 2.4 (drive\-backup), 3.1 (blockdev\-backup))
.TP
.B \fBbitmap\-mode\fP: \fBBitmapSyncMode\fP (optional)
Specifies the type of data the bitmap should contain after
the operation concludes.
Must be present if a bitmap was provided,
Must NOT be present otherwise. (Since 4.2)
.TP
.B \fBcompress\fP: \fBboolean\fP (optional)
true to compress data, if the target format supports it.
(default: false) (since 2.8)
.TP
.B \fBon\-source\-error\fP: \fBBlockdevOnError\fP (optional)
the action to take on an error on the source,
default \(aqreport\(aq.  \(aqstop\(aq and \(aqenospc\(aq can only be used
if the block device supports io\-status (see BlockInfo).
.TP
.B \fBon\-target\-error\fP: \fBBlockdevOnError\fP (optional)
the action to take on an error on the target,
default \(aqreport\(aq (no limitations, since this applies to
a different block device than \fBdevice\fP).
.TP
.B \fBauto\-finalize\fP: \fBboolean\fP (optional)
When false, this job will wait in a PENDING state after it has
finished its work, waiting for \fBblock\-job\-finalize\fP before
making any block graph changes.
When true, this job will automatically
perform its abort or commit actions.
Defaults to true. (Since 2.12)
.TP
.B \fBauto\-dismiss\fP: \fBboolean\fP (optional)
When false, this job will wait in a CONCLUDED state after it
has completely ceased all work, and awaits \fBblock\-job\-dismiss\fP\&.
When true, this job will automatically disappear from the query
list without user intervention.
Defaults to true. (Since 2.12)
.TP
.B \fBfilter\-node\-name\fP: \fBstring\fP (optional)
the node name that should be assigned to the
filter driver that the backup job inserts into the graph
above node specified by \fBdrive\fP\&. If this option is not given,
a node name is autogenerated. (Since: 4.2)
.TP
.B \fBx\-perf\fP: \fBBackupPerf\fP (optional)
Performance options. (Since 6.0)
.UNINDENT
.SS Features
.INDENT 0.0
.TP
.B \fBunstable\fP
Member \fBx\-perf\fP is experimental.
.UNINDENT
.SS Note
.sp
\fBon\-source\-error\fP and \fBon\-target\-error\fP only affect background
I/O.  If an error occurs during a guest write request, the device\(aqs
rerror/werror actions will be used.
.SS Since
.sp
4.2
.SS \fBDriveBackup\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBtarget\fP: \fBstring\fP
the target of the new image. If the file exists, or if it
is a device, the existing file/device will be used as the new
destination.  If it does not exist, a new file will be created.
.TP
.B \fBformat\fP: \fBstring\fP (optional)
the format of the new destination, default is to
probe if \fBmode\fP is \(aqexisting\(aq, else the format of the source
.TP
.B \fBmode\fP: \fBNewImageMode\fP (optional)
whether and how QEMU should create a new image, default is
\(aqabsolute\-paths\(aq.
.TP
.B The members of \fBBackupCommon\fP
.UNINDENT
.SS Since
.sp
1.6
.SS \fBBlockdevBackup\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBtarget\fP: \fBstring\fP
the device name or node\-name of the backup target node.
.TP
.B The members of \fBBackupCommon\fP
.UNINDENT
.SS Since
.sp
2.3
.SS \fBblockdev\-snapshot\-sync\fP (Command)
.sp
Takes a synchronous snapshot of a block device.
.sp
For the arguments, see the documentation of BlockdevSnapshotSync.
.SS Returns
.INDENT 0.0
.IP \(bu 2
nothing on success
.IP \(bu 2
If \fBdevice\fP is not a valid block device, DeviceNotFound
.UNINDENT
.SS Since
.sp
0.14
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { "execute": "blockdev\-snapshot\-sync",
     "arguments": { "device": "ide\-hd0",
                    "snapshot\-file":
                    "/some/place/my\-image",
                    "format": "qcow2" } }
<\- { "return": {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBblockdev\-snapshot\fP (Command)
.sp
Takes a snapshot of a block device.
.sp
Take a snapshot, by installing \(aqnode\(aq as the backing image of
\(aqoverlay\(aq. Additionally, if \(aqnode\(aq is associated with a block
device, the block device changes to using \(aqoverlay\(aq as its new active
image.
.sp
For the arguments, see the documentation of BlockdevSnapshot.
.SS Features
.INDENT 0.0
.TP
.B \fBallow\-write\-only\-overlay\fP
If present, the check whether this operation is safe
was relaxed so that it can be used to change
backing file of a destination of a blockdev\-mirror.
(since 5.0)
.UNINDENT
.SS Since
.sp
2.5
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { "execute": "blockdev\-add",
     "arguments": { "driver": "qcow2",
                    "node\-name": "node1534",
                    "file": { "driver": "file",
                              "filename": "hd1.qcow2" },
                    "backing": null } }

<\- { "return": {} }

\-> { "execute": "blockdev\-snapshot",
     "arguments": { "node": "ide\-hd0",
                    "overlay": "node1534" } }
<\- { "return": {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBchange\-backing\-file\fP (Command)
.sp
Change the backing file in the image file metadata.  This does not
cause QEMU to reopen the image file to reparse the backing filename
(it may, however, perform a reopen to change permissions from
r/o \-> r/w \-> r/o, if needed). The new backing file string is written
into the image file metadata, and the QEMU internal strings are
updated.
.SS Arguments
.INDENT 0.0
.TP
.B \fBimage\-node\-name\fP: \fBstring\fP
The name of the block driver state node of the
image to modify. The "device" argument is used
to verify "image\-node\-name" is in the chain
described by "device".
.TP
.B \fBdevice\fP: \fBstring\fP
The device name or node\-name of the root node that owns
image\-node\-name.
.TP
.B \fBbacking\-file\fP: \fBstring\fP
The string to write as the backing file.  This
string is not validated, so care should be taken
when specifying the string or the image chain may
not be able to be reopened again.
.UNINDENT
.SS Returns
.INDENT 0.0
.IP \(bu 2
Nothing on success
.IP \(bu 2
If "device" does not exist or cannot be determined, DeviceNotFound
.UNINDENT
.SS Since
.sp
2.1
.SS \fBblock\-commit\fP (Command)
.sp
Live commit of data from overlay image nodes into backing nodes \- i.e.,
writes data between \(aqtop\(aq and \(aqbase\(aq into \(aqbase\(aq.
.sp
If top == base, that is an error.
If top has no overlays on top of it, or if it is in use by a writer,
the job will not be completed by itself.  The user needs to complete
the job with the block\-job\-complete command after getting the ready
event. (Since 2.0)
.sp
If the base image is smaller than top, then the base image will be
resized to be the same size as top.  If top is smaller than the base
image, the base will not be truncated.  If you want the base image
size to match the size of the smaller top, you can safely truncate
it yourself once the commit operation successfully completes.
.SS Arguments
.INDENT 0.0
.TP
.B \fBjob\-id\fP: \fBstring\fP (optional)
identifier for the newly\-created block job. If
omitted, the device name will be used. (Since 2.7)
.TP
.B \fBdevice\fP: \fBstring\fP
the device name or node\-name of a root node
.TP
.B \fBbase\-node\fP: \fBstring\fP (optional)
The node name of the backing image to write data into.
If not specified, this is the deepest backing image.
(since: 3.1)
.TP
.B \fBbase\fP: \fBstring\fP (optional)
Same as \fBbase\-node\fP, except that it is a file name rather than a node
name. This must be the exact filename string that was used to open the
node; other strings, even if addressing the same file, are not
accepted
.TP
.B \fBtop\-node\fP: \fBstring\fP (optional)
The node name of the backing image within the image chain
which contains the topmost data to be committed down. If
not specified, this is the active layer. (since: 3.1)
.TP
.B \fBtop\fP: \fBstring\fP (optional)
Same as \fBtop\-node\fP, except that it is a file name rather than a node
name. This must be the exact filename string that was used to open the
node; other strings, even if addressing the same file, are not
accepted
.TP
.B \fBbacking\-file\fP: \fBstring\fP (optional)
The backing file string to write into the overlay
image of \(aqtop\(aq.  If \(aqtop\(aq does not have an overlay
image, or if \(aqtop\(aq is in use by a writer, specifying
a backing file string is an error.
.sp
This filename is not validated.  If a pathname string
is such that it cannot be resolved by QEMU, that
means that subsequent QMP or HMP commands must use
node\-names for the image in question, as filename
lookup methods will fail.
.sp
If not specified, QEMU will automatically determine
the backing file string to use, or error out if
there is no obvious choice. Care should be taken
when specifying the string, to specify a valid
filename or protocol.
(Since 2.1)
.TP
.B \fBspeed\fP: \fBint\fP (optional)
the maximum speed, in bytes per second
.TP
.B \fBon\-error\fP: \fBBlockdevOnError\fP (optional)
the action to take on an error. \(aqignore\(aq means that the request
should be retried. (default: report; Since: 5.0)
.TP
.B \fBfilter\-node\-name\fP: \fBstring\fP (optional)
the node name that should be assigned to the
filter driver that the commit job inserts into the graph
above \fBtop\fP\&. If this option is not given, a node name is
autogenerated. (Since: 2.9)
.TP
.B \fBauto\-finalize\fP: \fBboolean\fP (optional)
When false, this job will wait in a PENDING state after it has
finished its work, waiting for \fBblock\-job\-finalize\fP before
making any block graph changes.
When true, this job will automatically
perform its abort or commit actions.
Defaults to true. (Since 3.1)
.TP
.B \fBauto\-dismiss\fP: \fBboolean\fP (optional)
When false, this job will wait in a CONCLUDED state after it
has completely ceased all work, and awaits \fBblock\-job\-dismiss\fP\&.
When true, this job will automatically disappear from the query
list without user intervention.
Defaults to true. (Since 3.1)
.UNINDENT
.SS Features
.INDENT 0.0
.TP
.B \fBdeprecated\fP
Members \fBbase\fP and \fBtop\fP are deprecated.  Use \fBbase\-node\fP
and \fBtop\-node\fP instead.
.UNINDENT
.SS Returns
.INDENT 0.0
.IP \(bu 2
Nothing on success
.IP \(bu 2
If \fBdevice\fP does not exist, DeviceNotFound
.IP \(bu 2
Any other error returns a GenericError.
.UNINDENT
.SS Since
.sp
1.3
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { "execute": "block\-commit",
     "arguments": { "device": "virtio0",
                    "top": "/tmp/snap1.qcow2" } }
<\- { "return": {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBdrive\-backup\fP (Command)
.sp
Start a point\-in\-time copy of a block device to a new destination.  The
status of ongoing drive\-backup operations can be checked with
query\-block\-jobs where the BlockJobInfo.type field has the value \(aqbackup\(aq.
The operation can be stopped before it has completed using the
block\-job\-cancel command.
.SS Arguments
.INDENT 0.0
.TP
.B The members of \fBDriveBackup\fP
.UNINDENT
.SS Features
.INDENT 0.0
.TP
.B \fBdeprecated\fP
This command is deprecated. Use \fBblockdev\-backup\fP instead.
.UNINDENT
.SS Returns
.INDENT 0.0
.IP \(bu 2
nothing on success
.IP \(bu 2
If \fBdevice\fP is not a valid block device, GenericError
.UNINDENT
.SS Since
.sp
1.6
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { "execute": "drive\-backup",
     "arguments": { "device": "drive0",
                    "sync": "full",
                    "target": "backup.img" } }
<\- { "return": {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBblockdev\-backup\fP (Command)
.sp
Start a point\-in\-time copy of a block device to a new destination.  The
status of ongoing blockdev\-backup operations can be checked with
query\-block\-jobs where the BlockJobInfo.type field has the value \(aqbackup\(aq.
The operation can be stopped before it has completed using the
block\-job\-cancel command.
.SS Arguments
.INDENT 0.0
.TP
.B The members of \fBBlockdevBackup\fP
.UNINDENT
.SS Returns
.INDENT 0.0
.IP \(bu 2
nothing on success
.IP \(bu 2
If \fBdevice\fP is not a valid block device, DeviceNotFound
.UNINDENT
.SS Since
.sp
2.3
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { "execute": "blockdev\-backup",
     "arguments": { "device": "src\-id",
                    "sync": "full",
                    "target": "tgt\-id" } }
<\- { "return": {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBquery\-named\-block\-nodes\fP (Command)
.sp
Get the named block driver list
.SS Arguments
.INDENT 0.0
.TP
.B \fBflat\fP: \fBboolean\fP (optional)
Omit the nested data about backing image ("backing\-image" key) if true.
Default is false (Since 5.0)
.UNINDENT
.SS Returns
.sp
the list of BlockDeviceInfo
.SS Since
.sp
2.0
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { "execute": "query\-named\-block\-nodes" }
<\- { "return": [ { "ro":false,
                   "drv":"qcow2",
                   "encrypted":false,
                   "file":"disks/test.qcow2",
                   "node\-name": "my\-node",
                   "backing_file_depth":1,
                   "detect_zeroes":"off",
                   "bps":1000000,
                   "bps_rd":0,
                   "bps_wr":0,
                   "iops":1000000,
                   "iops_rd":0,
                   "iops_wr":0,
                   "bps_max": 8000000,
                   "bps_rd_max": 0,
                   "bps_wr_max": 0,
                   "iops_max": 0,
                   "iops_rd_max": 0,
                   "iops_wr_max": 0,
                   "iops_size": 0,
                   "write_threshold": 0,
                   "image":{
                      "filename":"disks/test.qcow2",
                      "format":"qcow2",
                      "virtual\-size":2048000,
                      "backing_file":"base.qcow2",
                      "full\-backing\-filename":"disks/base.qcow2",
                      "backing\-filename\-format":"qcow2",
                      "snapshots":[
                         {
                            "id": "1",
                            "name": "snapshot1",
                            "vm\-state\-size": 0,
                            "date\-sec": 10000200,
                            "date\-nsec": 12,
                            "vm\-clock\-sec": 206,
                            "vm\-clock\-nsec": 30
                         }
                      ],
                      "backing\-image":{
                          "filename":"disks/base.qcow2",
                          "format":"qcow2",
                          "virtual\-size":2048000
                      }
                   } } ] }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBXDbgBlockGraphNodeType\fP (Enum)
.SS Values
.INDENT 0.0
.TP
.B \fBblock\-backend\fP
corresponds to BlockBackend
.TP
.B \fBblock\-job\fP
corresponds to BlockJob
.TP
.B \fBblock\-driver\fP
corresponds to BlockDriverState
.UNINDENT
.SS Since
.sp
4.0
.SS \fBXDbgBlockGraphNode\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBid\fP: \fBint\fP
Block graph node identifier. This \fBid\fP is generated only for
x\-debug\-query\-block\-graph and does not relate to any other identifiers in
Qemu.
.TP
.B \fBtype\fP: \fBXDbgBlockGraphNodeType\fP
Type of graph node. Can be one of block\-backend, block\-job or
block\-driver\-state.
.TP
.B \fBname\fP: \fBstring\fP
Human readable name of the node. Corresponds to node\-name for
block\-driver\-state nodes; is not guaranteed to be unique in the whole
graph (with block\-jobs and block\-backends).
.UNINDENT
.SS Since
.sp
4.0
.SS \fBBlockPermission\fP (Enum)
.sp
Enum of base block permissions.
.SS Values
.INDENT 0.0
.TP
.B \fBconsistent\-read\fP
A user that has the "permission" of consistent reads is
guaranteed that their view of the contents of the block
device is complete and self\-consistent, representing the
contents of a disk at a specific point.
For most block devices (including their backing files) this
is true, but the property cannot be maintained in a few
situations like for intermediate nodes of a commit block
job.
.TP
.B \fBwrite\fP
This permission is required to change the visible disk contents.
.TP
.B \fBwrite\-unchanged\fP
This permission (which is weaker than BLK_PERM_WRITE) is
both enough and required for writes to the block node when
the caller promises that the visible disk content doesn\(aqt
change.
As the BLK_PERM_WRITE permission is strictly stronger,
either is sufficient to perform an unchanging write.
.TP
.B \fBresize\fP
This permission is required to change the size of a block node.
.UNINDENT
.SS Since
.sp
4.0
.SS \fBXDbgBlockGraphEdge\fP (Object)
.sp
Block Graph edge description for x\-debug\-query\-block\-graph.
.SS Members
.INDENT 0.0
.TP
.B \fBparent\fP: \fBint\fP
parent id
.TP
.B \fBchild\fP: \fBint\fP
child id
.TP
.B \fBname\fP: \fBstring\fP
name of the relation (examples are \(aqfile\(aq and \(aqbacking\(aq)
.TP
.B \fBperm\fP: \fBarray of BlockPermission\fP
granted permissions for the parent operating on the child
.TP
.B \fBshared\-perm\fP: \fBarray of BlockPermission\fP
permissions that can still be granted to other users of the
child while it is still attached to this parent
.UNINDENT
.SS Since
.sp
4.0
.SS \fBXDbgBlockGraph\fP (Object)
.sp
Block Graph \- list of nodes and list of edges.
.SS Members
.INDENT 0.0
.TP
.B \fBnodes\fP: \fBarray of XDbgBlockGraphNode\fP
Not documented
.TP
.B \fBedges\fP: \fBarray of XDbgBlockGraphEdge\fP
Not documented
.UNINDENT
.SS Since
.sp
4.0
.SS \fBx\-debug\-query\-block\-graph\fP (Command)
.sp
Get the block graph.
.SS Features
.INDENT 0.0
.TP
.B \fBunstable\fP
This command is meant for debugging.
.UNINDENT
.SS Since
.sp
4.0
.SS \fBdrive\-mirror\fP (Command)
.sp
Start mirroring a block device\(aqs writes to a new destination. target
specifies the target of the new image. If the file exists, or if it
is a device, it will be used as the new destination for writes. If
it does not exist, a new file will be created. format specifies the
format of the mirror image, default is to probe if mode=\(aqexisting\(aq,
else the format of the source.
.SS Arguments
.INDENT 0.0
.TP
.B The members of \fBDriveMirror\fP
.UNINDENT
.SS Returns
.INDENT 0.0
.IP \(bu 2
nothing on success
.IP \(bu 2
If \fBdevice\fP is not a valid block device, GenericError
.UNINDENT
.SS Since
.sp
1.3
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { "execute": "drive\-mirror",
     "arguments": { "device": "ide\-hd0",
                    "target": "/some/place/my\-image",
                    "sync": "full",
                    "format": "qcow2" } }
<\- { "return": {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBDriveMirror\fP (Object)
.sp
A set of parameters describing drive mirror setup.
.SS Members
.INDENT 0.0
.TP
.B \fBjob\-id\fP: \fBstring\fP (optional)
identifier for the newly\-created block job. If
omitted, the device name will be used. (Since 2.7)
.TP
.B \fBdevice\fP: \fBstring\fP
the device name or node\-name of a root node whose writes should be
mirrored.
.TP
.B \fBtarget\fP: \fBstring\fP
the target of the new image. If the file exists, or if it
is a device, the existing file/device will be used as the new
destination.  If it does not exist, a new file will be created.
.TP
.B \fBformat\fP: \fBstring\fP (optional)
the format of the new destination, default is to
probe if \fBmode\fP is \(aqexisting\(aq, else the format of the source
.TP
.B \fBnode\-name\fP: \fBstring\fP (optional)
the new block driver state node name in the graph
(Since 2.1)
.TP
.B \fBreplaces\fP: \fBstring\fP (optional)
with sync=full graph node name to be replaced by the new
image when a whole image copy is done. This can be used to repair
broken Quorum files.  By default, \fBdevice\fP is replaced, although
implicitly created filters on it are kept. (Since 2.1)
.TP
.B \fBmode\fP: \fBNewImageMode\fP (optional)
whether and how QEMU should create a new image, default is
\(aqabsolute\-paths\(aq.
.TP
.B \fBspeed\fP: \fBint\fP (optional)
the maximum speed, in bytes per second
.TP
.B \fBsync\fP: \fBMirrorSyncMode\fP
what parts of the disk image should be copied to the destination
(all the disk, only the sectors allocated in the topmost image, or
only new I/O).
.TP
.B \fBgranularity\fP: \fBint\fP (optional)
granularity of the dirty bitmap, default is 64K
if the image format doesn\(aqt have clusters, 4K if the clusters
are smaller than that, else the cluster size.  Must be a
power of 2 between 512 and 64M (since 1.4).
.TP
.B \fBbuf\-size\fP: \fBint\fP (optional)
maximum amount of data in flight from source to
target (since 1.4).
.TP
.B \fBon\-source\-error\fP: \fBBlockdevOnError\fP (optional)
the action to take on an error on the source,
default \(aqreport\(aq.  \(aqstop\(aq and \(aqenospc\(aq can only be used
if the block device supports io\-status (see BlockInfo).
.TP
.B \fBon\-target\-error\fP: \fBBlockdevOnError\fP (optional)
the action to take on an error on the target,
default \(aqreport\(aq (no limitations, since this applies to
a different block device than \fBdevice\fP).
.TP
.B \fBunmap\fP: \fBboolean\fP (optional)
Whether to try to unmap target sectors where source has
only zero. If true, and target unallocated sectors will read as zero,
target image sectors will be unmapped; otherwise, zeroes will be
written. Both will result in identical contents.
Default is true. (Since 2.4)
.TP
.B \fBcopy\-mode\fP: \fBMirrorCopyMode\fP (optional)
when to copy data to the destination; defaults to \(aqbackground\(aq
(Since: 3.0)
.TP
.B \fBauto\-finalize\fP: \fBboolean\fP (optional)
When false, this job will wait in a PENDING state after it has
finished its work, waiting for \fBblock\-job\-finalize\fP before
making any block graph changes.
When true, this job will automatically
perform its abort or commit actions.
Defaults to true. (Since 3.1)
.TP
.B \fBauto\-dismiss\fP: \fBboolean\fP (optional)
When false, this job will wait in a CONCLUDED state after it
has completely ceased all work, and awaits \fBblock\-job\-dismiss\fP\&.
When true, this job will automatically disappear from the query
list without user intervention.
Defaults to true. (Since 3.1)
.UNINDENT
.SS Since
.sp
1.3
.SS \fBBlockDirtyBitmap\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBnode\fP: \fBstring\fP
name of device/node which the bitmap is tracking
.TP
.B \fBname\fP: \fBstring\fP
name of the dirty bitmap
.UNINDENT
.SS Since
.sp
2.4
.SS \fBBlockDirtyBitmapAdd\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBnode\fP: \fBstring\fP
name of device/node which the bitmap is tracking
.TP
.B \fBname\fP: \fBstring\fP
name of the dirty bitmap (must be less than 1024 bytes)
.TP
.B \fBgranularity\fP: \fBint\fP (optional)
the bitmap granularity, default is 64k for
block\-dirty\-bitmap\-add
.TP
.B \fBpersistent\fP: \fBboolean\fP (optional)
the bitmap is persistent, i.e. it will be saved to the
corresponding block device image file on its close. For now only
Qcow2 disks support persistent bitmaps. Default is false for
block\-dirty\-bitmap\-add. (Since: 2.10)
.TP
.B \fBdisabled\fP: \fBboolean\fP (optional)
the bitmap is created in the disabled state, which means that
it will not track drive changes. The bitmap may be enabled with
block\-dirty\-bitmap\-enable. Default is false. (Since: 4.0)
.UNINDENT
.SS Since
.sp
2.4
.SS \fBBlockDirtyBitmapOrStr\fP (Alternate)
.SS Members
.INDENT 0.0
.TP
.B \fBlocal\fP: \fBstring\fP
name of the bitmap, attached to the same node as target bitmap.
.TP
.B \fBexternal\fP: \fBBlockDirtyBitmap\fP
bitmap with specified node
.UNINDENT
.SS Since
.sp
4.1
.SS \fBBlockDirtyBitmapMerge\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBnode\fP: \fBstring\fP
name of device/node which the \fBtarget\fP bitmap is tracking
.TP
.B \fBtarget\fP: \fBstring\fP
name of the destination dirty bitmap
.TP
.B \fBbitmaps\fP: \fBarray of BlockDirtyBitmapOrStr\fP
name(s) of the source dirty bitmap(s) at \fBnode\fP and/or fully
specified BlockDirtyBitmap elements. The latter are supported
since 4.1.
.UNINDENT
.SS Since
.sp
4.0
.SS \fBblock\-dirty\-bitmap\-add\fP (Command)
.sp
Create a dirty bitmap with a name on the node, and start tracking the writes.
.SS Returns
.INDENT 0.0
.IP \(bu 2
nothing on success
.IP \(bu 2
If \fBnode\fP is not a valid block device or node, DeviceNotFound
.IP \(bu 2
If \fBname\fP is already taken, GenericError with an explanation
.UNINDENT
.SS Since
.sp
2.4
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { "execute": "block\-dirty\-bitmap\-add",
     "arguments": { "node": "drive0", "name": "bitmap0" } }
<\- { "return": {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBblock\-dirty\-bitmap\-remove\fP (Command)
.sp
Stop write tracking and remove the dirty bitmap that was created
with block\-dirty\-bitmap\-add. If the bitmap is persistent, remove it from its
storage too.
.SS Returns
.INDENT 0.0
.IP \(bu 2
nothing on success
.IP \(bu 2
If \fBnode\fP is not a valid block device or node, DeviceNotFound
.IP \(bu 2
If \fBname\fP is not found, GenericError with an explanation
.IP \(bu 2
if \fBname\fP is frozen by an operation, GenericError
.UNINDENT
.SS Since
.sp
2.4
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { "execute": "block\-dirty\-bitmap\-remove",
     "arguments": { "node": "drive0", "name": "bitmap0" } }
<\- { "return": {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBblock\-dirty\-bitmap\-clear\fP (Command)
.sp
Clear (reset) a dirty bitmap on the device, so that an incremental
backup from this point in time forward will only backup clusters
modified after this clear operation.
.SS Returns
.INDENT 0.0
.IP \(bu 2
nothing on success
.IP \(bu 2
If \fBnode\fP is not a valid block device, DeviceNotFound
.IP \(bu 2
If \fBname\fP is not found, GenericError with an explanation
.UNINDENT
.SS Since
.sp
2.4
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { "execute": "block\-dirty\-bitmap\-clear",
     "arguments": { "node": "drive0", "name": "bitmap0" } }
<\- { "return": {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBblock\-dirty\-bitmap\-enable\fP (Command)
.sp
Enables a dirty bitmap so that it will begin tracking disk changes.
.SS Returns
.INDENT 0.0
.IP \(bu 2
nothing on success
.IP \(bu 2
If \fBnode\fP is not a valid block device, DeviceNotFound
.IP \(bu 2
If \fBname\fP is not found, GenericError with an explanation
.UNINDENT
.SS Since
.sp
4.0
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { "execute": "block\-dirty\-bitmap\-enable",
     "arguments": { "node": "drive0", "name": "bitmap0" } }
<\- { "return": {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBblock\-dirty\-bitmap\-disable\fP (Command)
.sp
Disables a dirty bitmap so that it will stop tracking disk changes.
.SS Returns
.INDENT 0.0
.IP \(bu 2
nothing on success
.IP \(bu 2
If \fBnode\fP is not a valid block device, DeviceNotFound
.IP \(bu 2
If \fBname\fP is not found, GenericError with an explanation
.UNINDENT
.SS Since
.sp
4.0
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { "execute": "block\-dirty\-bitmap\-disable",
     "arguments": { "node": "drive0", "name": "bitmap0" } }
<\- { "return": {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBblock\-dirty\-bitmap\-merge\fP (Command)
.sp
Merge dirty bitmaps listed in \fBbitmaps\fP to the \fBtarget\fP dirty bitmap.
Dirty bitmaps in \fBbitmaps\fP will be unchanged, except if it also appears
as the \fBtarget\fP bitmap. Any bits already set in \fBtarget\fP will still be
set after the merge, i.e., this operation does not clear the target.
On error, \fBtarget\fP is unchanged.
.sp
The resulting bitmap will count as dirty any clusters that were dirty in any
of the source bitmaps. This can be used to achieve backup checkpoints, or in
simpler usages, to copy bitmaps.
.SS Returns
.INDENT 0.0
.IP \(bu 2
nothing on success
.IP \(bu 2
If \fBnode\fP is not a valid block device, DeviceNotFound
.IP \(bu 2
If any bitmap in \fBbitmaps\fP or \fBtarget\fP is not found, GenericError
.IP \(bu 2
If any of the bitmaps have different sizes or granularities,
GenericError
.UNINDENT
.SS Since
.sp
4.0
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { "execute": "block\-dirty\-bitmap\-merge",
     "arguments": { "node": "drive0", "target": "bitmap0",
                    "bitmaps": ["bitmap1"] } }
<\- { "return": {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBBlockDirtyBitmapSha256\fP (Object)
.sp
SHA256 hash of dirty bitmap data
.SS Members
.INDENT 0.0
.TP
.B \fBsha256\fP: \fBstring\fP
ASCII representation of SHA256 bitmap hash
.UNINDENT
.SS Since
.sp
2.10
.SS \fBx\-debug\-block\-dirty\-bitmap\-sha256\fP (Command)
.sp
Get bitmap SHA256.
.SS Features
.INDENT 0.0
.TP
.B \fBunstable\fP
This command is meant for debugging.
.UNINDENT
.SS Returns
.INDENT 0.0
.IP \(bu 2
BlockDirtyBitmapSha256 on success
.IP \(bu 2
If \fBnode\fP is not a valid block device, DeviceNotFound
.IP \(bu 2
If \fBname\fP is not found or if hashing has failed, GenericError with an
explanation
.UNINDENT
.SS Since
.sp
2.10
.SS \fBblockdev\-mirror\fP (Command)
.sp
Start mirroring a block device\(aqs writes to a new destination.
.SS Arguments
.INDENT 0.0
.TP
.B \fBjob\-id\fP: \fBstring\fP (optional)
identifier for the newly\-created block job. If
omitted, the device name will be used. (Since 2.7)
.TP
.B \fBdevice\fP: \fBstring\fP
The device name or node\-name of a root node whose writes should be
mirrored.
.TP
.B \fBtarget\fP: \fBstring\fP
the id or node\-name of the block device to mirror to. This mustn\(aqt be
attached to guest.
.TP
.B \fBreplaces\fP: \fBstring\fP (optional)
with sync=full graph node name to be replaced by the new
image when a whole image copy is done. This can be used to repair
broken Quorum files.  By default, \fBdevice\fP is replaced, although
implicitly created filters on it are kept.
.TP
.B \fBspeed\fP: \fBint\fP (optional)
the maximum speed, in bytes per second
.TP
.B \fBsync\fP: \fBMirrorSyncMode\fP
what parts of the disk image should be copied to the destination
(all the disk, only the sectors allocated in the topmost image, or
only new I/O).
.TP
.B \fBgranularity\fP: \fBint\fP (optional)
granularity of the dirty bitmap, default is 64K
if the image format doesn\(aqt have clusters, 4K if the clusters
are smaller than that, else the cluster size.  Must be a
power of 2 between 512 and 64M
.TP
.B \fBbuf\-size\fP: \fBint\fP (optional)
maximum amount of data in flight from source to
target
.TP
.B \fBon\-source\-error\fP: \fBBlockdevOnError\fP (optional)
the action to take on an error on the source,
default \(aqreport\(aq.  \(aqstop\(aq and \(aqenospc\(aq can only be used
if the block device supports io\-status (see BlockInfo).
.TP
.B \fBon\-target\-error\fP: \fBBlockdevOnError\fP (optional)
the action to take on an error on the target,
default \(aqreport\(aq (no limitations, since this applies to
a different block device than \fBdevice\fP).
.TP
.B \fBfilter\-node\-name\fP: \fBstring\fP (optional)
the node name that should be assigned to the
filter driver that the mirror job inserts into the graph
above \fBdevice\fP\&. If this option is not given, a node name is
autogenerated. (Since: 2.9)
.TP
.B \fBcopy\-mode\fP: \fBMirrorCopyMode\fP (optional)
when to copy data to the destination; defaults to \(aqbackground\(aq
(Since: 3.0)
.TP
.B \fBauto\-finalize\fP: \fBboolean\fP (optional)
When false, this job will wait in a PENDING state after it has
finished its work, waiting for \fBblock\-job\-finalize\fP before
making any block graph changes.
When true, this job will automatically
perform its abort or commit actions.
Defaults to true. (Since 3.1)
.TP
.B \fBauto\-dismiss\fP: \fBboolean\fP (optional)
When false, this job will wait in a CONCLUDED state after it
has completely ceased all work, and awaits \fBblock\-job\-dismiss\fP\&.
When true, this job will automatically disappear from the query
list without user intervention.
Defaults to true. (Since 3.1)
.UNINDENT
.SS Returns
.sp
nothing on success.
.SS Since
.sp
2.6
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { "execute": "blockdev\-mirror",
     "arguments": { "device": "ide\-hd0",
                    "target": "target0",
                    "sync": "full" } }
<\- { "return": {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBBlockIOThrottle\fP (Object)
.sp
A set of parameters describing block throttling.
.SS Members
.INDENT 0.0
.TP
.B \fBdevice\fP: \fBstring\fP (optional)
Block device name
.TP
.B \fBid\fP: \fBstring\fP (optional)
The name or QOM path of the guest device (since: 2.8)
.TP
.B \fBbps\fP: \fBint\fP
total throughput limit in bytes per second
.TP
.B \fBbps_rd\fP: \fBint\fP
read throughput limit in bytes per second
.TP
.B \fBbps_wr\fP: \fBint\fP
write throughput limit in bytes per second
.TP
.B \fBiops\fP: \fBint\fP
total I/O operations per second
.TP
.B \fBiops_rd\fP: \fBint\fP
read I/O operations per second
.TP
.B \fBiops_wr\fP: \fBint\fP
write I/O operations per second
.TP
.B \fBbps_max\fP: \fBint\fP (optional)
total throughput limit during bursts,
in bytes (Since 1.7)
.TP
.B \fBbps_rd_max\fP: \fBint\fP (optional)
read throughput limit during bursts,
in bytes (Since 1.7)
.TP
.B \fBbps_wr_max\fP: \fBint\fP (optional)
write throughput limit during bursts,
in bytes (Since 1.7)
.TP
.B \fBiops_max\fP: \fBint\fP (optional)
total I/O operations per second during bursts,
in bytes (Since 1.7)
.TP
.B \fBiops_rd_max\fP: \fBint\fP (optional)
read I/O operations per second during bursts,
in bytes (Since 1.7)
.TP
.B \fBiops_wr_max\fP: \fBint\fP (optional)
write I/O operations per second during bursts,
in bytes (Since 1.7)
.TP
.B \fBbps_max_length\fP: \fBint\fP (optional)
maximum length of the \fBbps_max\fP burst
period, in seconds. It must only
be set if \fBbps_max\fP is set as well.
Defaults to 1. (Since 2.6)
.TP
.B \fBbps_rd_max_length\fP: \fBint\fP (optional)
maximum length of the \fBbps_rd_max\fP
burst period, in seconds. It must only
be set if \fBbps_rd_max\fP is set as well.
Defaults to 1. (Since 2.6)
.TP
.B \fBbps_wr_max_length\fP: \fBint\fP (optional)
maximum length of the \fBbps_wr_max\fP
burst period, in seconds. It must only
be set if \fBbps_wr_max\fP is set as well.
Defaults to 1. (Since 2.6)
.TP
.B \fBiops_max_length\fP: \fBint\fP (optional)
maximum length of the \fBiops\fP burst
period, in seconds. It must only
be set if \fBiops_max\fP is set as well.
Defaults to 1. (Since 2.6)
.TP
.B \fBiops_rd_max_length\fP: \fBint\fP (optional)
maximum length of the \fBiops_rd_max\fP
burst period, in seconds. It must only
be set if \fBiops_rd_max\fP is set as well.
Defaults to 1. (Since 2.6)
.TP
.B \fBiops_wr_max_length\fP: \fBint\fP (optional)
maximum length of the \fBiops_wr_max\fP
burst period, in seconds. It must only
be set if \fBiops_wr_max\fP is set as well.
Defaults to 1. (Since 2.6)
.TP
.B \fBiops_size\fP: \fBint\fP (optional)
an I/O size in bytes (Since 1.7)
.TP
.B \fBgroup\fP: \fBstring\fP (optional)
throttle group name (Since 2.4)
.UNINDENT
.SS Features
.INDENT 0.0
.TP
.B \fBdeprecated\fP
Member \fBdevice\fP is deprecated.  Use \fBid\fP instead.
.UNINDENT
.SS Since
.sp
1.1
.SS \fBThrottleLimits\fP (Object)
.sp
Limit parameters for throttling.
Since some limit combinations are illegal, limits should always be set in one
transaction. All fields are optional. When setting limits, if a field is
missing the current value is not changed.
.SS Members
.INDENT 0.0
.TP
.B \fBiops\-total\fP: \fBint\fP (optional)
limit total I/O operations per second
.TP
.B \fBiops\-total\-max\fP: \fBint\fP (optional)
I/O operations burst
.TP
.B \fBiops\-total\-max\-length\fP: \fBint\fP (optional)
length of the iops\-total\-max burst period, in seconds
It must only be set if \fBiops\-total\-max\fP is set as well.
.TP
.B \fBiops\-read\fP: \fBint\fP (optional)
limit read operations per second
.TP
.B \fBiops\-read\-max\fP: \fBint\fP (optional)
I/O operations read burst
.TP
.B \fBiops\-read\-max\-length\fP: \fBint\fP (optional)
length of the iops\-read\-max burst period, in seconds
It must only be set if \fBiops\-read\-max\fP is set as well.
.TP
.B \fBiops\-write\fP: \fBint\fP (optional)
limit write operations per second
.TP
.B \fBiops\-write\-max\fP: \fBint\fP (optional)
I/O operations write burst
.TP
.B \fBiops\-write\-max\-length\fP: \fBint\fP (optional)
length of the iops\-write\-max burst period, in seconds
It must only be set if \fBiops\-write\-max\fP is set as well.
.TP
.B \fBbps\-total\fP: \fBint\fP (optional)
limit total bytes per second
.TP
.B \fBbps\-total\-max\fP: \fBint\fP (optional)
total bytes burst
.TP
.B \fBbps\-total\-max\-length\fP: \fBint\fP (optional)
length of the bps\-total\-max burst period, in seconds.
It must only be set if \fBbps\-total\-max\fP is set as well.
.TP
.B \fBbps\-read\fP: \fBint\fP (optional)
limit read bytes per second
.TP
.B \fBbps\-read\-max\fP: \fBint\fP (optional)
total bytes read burst
.TP
.B \fBbps\-read\-max\-length\fP: \fBint\fP (optional)
length of the bps\-read\-max burst period, in seconds
It must only be set if \fBbps\-read\-max\fP is set as well.
.TP
.B \fBbps\-write\fP: \fBint\fP (optional)
limit write bytes per second
.TP
.B \fBbps\-write\-max\fP: \fBint\fP (optional)
total bytes write burst
.TP
.B \fBbps\-write\-max\-length\fP: \fBint\fP (optional)
length of the bps\-write\-max burst period, in seconds
It must only be set if \fBbps\-write\-max\fP is set as well.
.TP
.B \fBiops\-size\fP: \fBint\fP (optional)
when limiting by iops max size of an I/O in bytes
.UNINDENT
.SS Since
.sp
2.11
.SS \fBThrottleGroupProperties\fP (Object)
.sp
Properties for throttle\-group objects.
.SS Members
.INDENT 0.0
.TP
.B \fBlimits\fP: \fBThrottleLimits\fP (optional)
limits to apply for this throttle group
.TP
.B \fBx\-iops\-total\fP: \fBint\fP (optional)
Not documented
.TP
.B \fBx\-iops\-total\-max\fP: \fBint\fP (optional)
Not documented
.TP
.B \fBx\-iops\-total\-max\-length\fP: \fBint\fP (optional)
Not documented
.TP
.B \fBx\-iops\-read\fP: \fBint\fP (optional)
Not documented
.TP
.B \fBx\-iops\-read\-max\fP: \fBint\fP (optional)
Not documented
.TP
.B \fBx\-iops\-read\-max\-length\fP: \fBint\fP (optional)
Not documented
.TP
.B \fBx\-iops\-write\fP: \fBint\fP (optional)
Not documented
.TP
.B \fBx\-iops\-write\-max\fP: \fBint\fP (optional)
Not documented
.TP
.B \fBx\-iops\-write\-max\-length\fP: \fBint\fP (optional)
Not documented
.TP
.B \fBx\-bps\-total\fP: \fBint\fP (optional)
Not documented
.TP
.B \fBx\-bps\-total\-max\fP: \fBint\fP (optional)
Not documented
.TP
.B \fBx\-bps\-total\-max\-length\fP: \fBint\fP (optional)
Not documented
.TP
.B \fBx\-bps\-read\fP: \fBint\fP (optional)
Not documented
.TP
.B \fBx\-bps\-read\-max\fP: \fBint\fP (optional)
Not documented
.TP
.B \fBx\-bps\-read\-max\-length\fP: \fBint\fP (optional)
Not documented
.TP
.B \fBx\-bps\-write\fP: \fBint\fP (optional)
Not documented
.TP
.B \fBx\-bps\-write\-max\fP: \fBint\fP (optional)
Not documented
.TP
.B \fBx\-bps\-write\-max\-length\fP: \fBint\fP (optional)
Not documented
.TP
.B \fBx\-iops\-size\fP: \fBint\fP (optional)
Not documented
.UNINDENT
.SS Features
.INDENT 0.0
.TP
.B \fBunstable\fP
All members starting with x\- are aliases for the same key
without x\- in the \fBlimits\fP object.  This is not a stable
interface and may be removed or changed incompatibly in
the future.  Use \fBlimits\fP for a supported stable
interface.
.UNINDENT
.SS Since
.sp
2.11
.SS \fBblock\-stream\fP (Command)
.sp
Copy data from a backing file into a block device.
.sp
The block streaming operation is performed in the background until the entire
backing file has been copied.  This command returns immediately once streaming
has started.  The status of ongoing block streaming operations can be checked
with query\-block\-jobs.  The operation can be stopped before it has completed
using the block\-job\-cancel command.
.sp
The node that receives the data is called the top image, can be located in
any part of the chain (but always above the base image; see below) and can be
specified using its device or node name. Earlier qemu versions only allowed
\(aqdevice\(aq to name the top level node; presence of the \(aqbase\-node\(aq parameter
during introspection can be used as a witness of the enhanced semantics
of \(aqdevice\(aq.
.sp
If a base file is specified then sectors are not copied from that base file and
its backing chain.  This can be used to stream a subset of the backing file
chain instead of flattening the entire image.
When streaming completes the image file will have the base file as its backing
file, unless that node was changed while the job was running.  In that case,
base\(aqs parent\(aqs backing (or filtered, whichever exists) child (i.e., base at
the beginning of the job) will be the new backing file.
.sp
On successful completion the image file is updated to drop the backing file
and the BLOCK_JOB_COMPLETED event is emitted.
.sp
In case \fBdevice\fP is a filter node, block\-stream modifies the first non\-filter
overlay node below it to point to the new backing node instead of modifying
\fBdevice\fP itself.
.SS Arguments
.INDENT 0.0
.TP
.B \fBjob\-id\fP: \fBstring\fP (optional)
identifier for the newly\-created block job. If
omitted, the device name will be used. (Since 2.7)
.TP
.B \fBdevice\fP: \fBstring\fP
the device or node name of the top image
.TP
.B \fBbase\fP: \fBstring\fP (optional)
the common backing file name.
It cannot be set if \fBbase\-node\fP or \fBbottom\fP is also set.
.TP
.B \fBbase\-node\fP: \fBstring\fP (optional)
the node name of the backing file.
It cannot be set if \fBbase\fP or \fBbottom\fP is also set. (Since 2.8)
.TP
.B \fBbottom\fP: \fBstring\fP (optional)
the last node in the chain that should be streamed into
top. It cannot be set if \fBbase\fP or \fBbase\-node\fP is also set.
It cannot be filter node. (Since 6.0)
.TP
.B \fBbacking\-file\fP: \fBstring\fP (optional)
The backing file string to write into the top
image. This filename is not validated.
.sp
If a pathname string is such that it cannot be
resolved by QEMU, that means that subsequent QMP or
HMP commands must use node\-names for the image in
question, as filename lookup methods will fail.
.sp
If not specified, QEMU will automatically determine
the backing file string to use, or error out if there
is no obvious choice.  Care should be taken when
specifying the string, to specify a valid filename or
protocol.
(Since 2.1)
.TP
.B \fBspeed\fP: \fBint\fP (optional)
the maximum speed, in bytes per second
.TP
.B \fBon\-error\fP: \fBBlockdevOnError\fP (optional)
the action to take on an error (default report).
\(aqstop\(aq and \(aqenospc\(aq can only be used if the block device
supports io\-status (see BlockInfo).  Since 1.3.
.TP
.B \fBfilter\-node\-name\fP: \fBstring\fP (optional)
the node name that should be assigned to the
filter driver that the stream job inserts into the graph
above \fBdevice\fP\&. If this option is not given, a node name is
autogenerated. (Since: 6.0)
.TP
.B \fBauto\-finalize\fP: \fBboolean\fP (optional)
When false, this job will wait in a PENDING state after it has
finished its work, waiting for \fBblock\-job\-finalize\fP before
making any block graph changes.
When true, this job will automatically
perform its abort or commit actions.
Defaults to true. (Since 3.1)
.TP
.B \fBauto\-dismiss\fP: \fBboolean\fP (optional)
When false, this job will wait in a CONCLUDED state after it
has completely ceased all work, and awaits \fBblock\-job\-dismiss\fP\&.
When true, this job will automatically disappear from the query
list without user intervention.
Defaults to true. (Since 3.1)
.UNINDENT
.SS Returns
.INDENT 0.0
.IP \(bu 2
Nothing on success.
.IP \(bu 2
If \fBdevice\fP does not exist, DeviceNotFound.
.UNINDENT
.SS Since
.sp
1.1
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { "execute": "block\-stream",
     "arguments": { "device": "virtio0",
                    "base": "/tmp/master.qcow2" } }
<\- { "return": {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBblock\-job\-set\-speed\fP (Command)
.sp
Set maximum speed for a background block operation.
.sp
This command can only be issued when there is an active block job.
.sp
Throttling can be disabled by setting the speed to 0.
.SS Arguments
.INDENT 0.0
.TP
.B \fBdevice\fP: \fBstring\fP
The job identifier. This used to be a device name (hence
the name of the parameter), but since QEMU 2.7 it can have
other values.
.TP
.B \fBspeed\fP: \fBint\fP
the maximum speed, in bytes per second, or 0 for unlimited.
Defaults to 0.
.UNINDENT
.SS Returns
.INDENT 0.0
.IP \(bu 2
Nothing on success
.IP \(bu 2
If no background operation is active on this device, DeviceNotActive
.UNINDENT
.SS Since
.sp
1.1
.SS \fBblock\-job\-cancel\fP (Command)
.sp
Stop an active background block operation.
.sp
This command returns immediately after marking the active background block
operation for cancellation.  It is an error to call this command if no
operation is in progress.
.sp
The operation will cancel as soon as possible and then emit the
BLOCK_JOB_CANCELLED event.  Before that happens the job is still visible when
enumerated using query\-block\-jobs.
.sp
Note that if you issue \(aqblock\-job\-cancel\(aq after \(aqdrive\-mirror\(aq has indicated
(via the event BLOCK_JOB_READY) that the source and destination are
synchronized, then the event triggered by this command changes to
BLOCK_JOB_COMPLETED, to indicate that the mirroring has ended and the
destination now has a point\-in\-time copy tied to the time of the cancellation.
.sp
For streaming, the image file retains its backing file unless the streaming
operation happens to complete just as it is being cancelled.  A new streaming
operation can be started at a later time to finish copying all data from the
backing file.
.SS Arguments
.INDENT 0.0
.TP
.B \fBdevice\fP: \fBstring\fP
The job identifier. This used to be a device name (hence
the name of the parameter), but since QEMU 2.7 it can have
other values.
.TP
.B \fBforce\fP: \fBboolean\fP (optional)
If true, and the job has already emitted the event BLOCK_JOB_READY,
abandon the job immediately (even if it is paused) instead of waiting
for the destination to complete its final synchronization (since 1.3)
.UNINDENT
.SS Returns
.INDENT 0.0
.IP \(bu 2
Nothing on success
.IP \(bu 2
If no background operation is active on this device, DeviceNotActive
.UNINDENT
.SS Since
.sp
1.1
.SS \fBblock\-job\-pause\fP (Command)
.sp
Pause an active background block operation.
.sp
This command returns immediately after marking the active background block
operation for pausing.  It is an error to call this command if no
operation is in progress or if the job is already paused.
.sp
The operation will pause as soon as possible.  No event is emitted when
the operation is actually paused.  Cancelling a paused job automatically
resumes it.
.SS Arguments
.INDENT 0.0
.TP
.B \fBdevice\fP: \fBstring\fP
The job identifier. This used to be a device name (hence
the name of the parameter), but since QEMU 2.7 it can have
other values.
.UNINDENT
.SS Returns
.INDENT 0.0
.IP \(bu 2
Nothing on success
.IP \(bu 2
If no background operation is active on this device, DeviceNotActive
.UNINDENT
.SS Since
.sp
1.3
.SS \fBblock\-job\-resume\fP (Command)
.sp
Resume an active background block operation.
.sp
This command returns immediately after resuming a paused background block
operation.  It is an error to call this command if no operation is in
progress or if the job is not paused.
.sp
This command also clears the error status of the job.
.SS Arguments
.INDENT 0.0
.TP
.B \fBdevice\fP: \fBstring\fP
The job identifier. This used to be a device name (hence
the name of the parameter), but since QEMU 2.7 it can have
other values.
.UNINDENT
.SS Returns
.INDENT 0.0
.IP \(bu 2
Nothing on success
.IP \(bu 2
If no background operation is active on this device, DeviceNotActive
.UNINDENT
.SS Since
.sp
1.3
.SS \fBblock\-job\-complete\fP (Command)
.sp
Manually trigger completion of an active background block operation.  This
is supported for drive mirroring, where it also switches the device to
write to the target path only.  The ability to complete is signaled with
a BLOCK_JOB_READY event.
.sp
This command completes an active background block operation synchronously.
The ordering of this command\(aqs return with the BLOCK_JOB_COMPLETED event
is not defined.  Note that if an I/O error occurs during the processing of
this command: 1) the command itself will fail; 2) the error will be processed
according to the rerror/werror arguments that were specified when starting
the operation.
.sp
A cancelled or paused job cannot be completed.
.SS Arguments
.INDENT 0.0
.TP
.B \fBdevice\fP: \fBstring\fP
The job identifier. This used to be a device name (hence
the name of the parameter), but since QEMU 2.7 it can have
other values.
.UNINDENT
.SS Returns
.INDENT 0.0
.IP \(bu 2
Nothing on success
.IP \(bu 2
If no background operation is active on this device, DeviceNotActive
.UNINDENT
.SS Since
.sp
1.3
.SS \fBblock\-job\-dismiss\fP (Command)
.sp
For jobs that have already concluded, remove them from the block\-job\-query
list. This command only needs to be run for jobs which were started with
QEMU 2.12+ job lifetime management semantics.
.sp
This command will refuse to operate on any job that has not yet reached
its terminal state, JOB_STATUS_CONCLUDED. For jobs that make use of the
BLOCK_JOB_READY event, block\-job\-cancel or block\-job\-complete will still need
to be used as appropriate.
.SS Arguments
.INDENT 0.0
.TP
.B \fBid\fP: \fBstring\fP
The job identifier.
.UNINDENT
.SS Returns
.sp
Nothing on success
.SS Since
.sp
2.12
.SS \fBblock\-job\-finalize\fP (Command)
.sp
Once a job that has manual=true reaches the pending state, it can be
instructed to finalize any graph changes and do any necessary cleanup
via this command.
For jobs in a transaction, instructing one job to finalize will force
ALL jobs in the transaction to finalize, so it is only necessary to instruct
a single member job to finalize.
.SS Arguments
.INDENT 0.0
.TP
.B \fBid\fP: \fBstring\fP
The job identifier.
.UNINDENT
.SS Returns
.sp
Nothing on success
.SS Since
.sp
2.12
.SS \fBBlockdevDiscardOptions\fP (Enum)
.sp
Determines how to handle discard requests.
.SS Values
.INDENT 0.0
.TP
.B \fBignore\fP
Ignore the request
.TP
.B \fBunmap\fP
Forward as an unmap request
.UNINDENT
.SS Since
.sp
2.9
.SS \fBBlockdevDetectZeroesOptions\fP (Enum)
.sp
Describes the operation mode for the automatic conversion of plain
zero writes by the OS to driver specific optimized zero write commands.
.SS Values
.INDENT 0.0
.TP
.B \fBoff\fP
Disabled (default)
.TP
.B \fBon\fP
Enabled
.TP
.B \fBunmap\fP
Enabled and even try to unmap blocks if possible. This requires
also that \fBBlockdevDiscardOptions\fP is set to unmap for this device.
.UNINDENT
.SS Since
.sp
2.1
.SS \fBBlockdevAioOptions\fP (Enum)
.sp
Selects the AIO backend to handle I/O requests
.SS Values
.INDENT 0.0
.TP
.B \fBthreads\fP
Use qemu\(aqs thread pool
.TP
.B \fBnative\fP
Use native AIO backend (only Linux and Windows)
.TP
\fBio_uring\fP (\fBIf: \fP\fBCONFIG_LINUX_IO_URING\fP)
Use linux io_uring (since 5.0)
.UNINDENT
.SS Since
.sp
2.9
.SS \fBBlockdevCacheOptions\fP (Object)
.sp
Includes cache\-related options for block devices
.SS Members
.INDENT 0.0
.TP
.B \fBdirect\fP: \fBboolean\fP (optional)
enables use of O_DIRECT (bypass the host page cache;
default: false)
.TP
.B \fBno\-flush\fP: \fBboolean\fP (optional)
ignore any flush requests for the device (default:
false)
.UNINDENT
.SS Since
.sp
2.9
.SS \fBBlockdevDriver\fP (Enum)
.sp
Drivers that are supported in block device operations.
.SS Values
.INDENT 0.0
.TP
.B \fBthrottle\fP
Since 2.11
.TP
.B \fBnvme\fP
Since 2.12
.TP
.B \fBcopy\-on\-read\fP
Since 3.0
.TP
.B \fBblklogwrites\fP
Since 3.0
.TP
.B \fBblkreplay\fP
Since 4.2
.TP
.B \fBcompress\fP
Since 5.0
.TP
.B \fBcopy\-before\-write\fP
Since 6.2
.TP
.B \fBsnapshot\-access\fP
Since 7.0
.TP
.B \fBblkdebug\fP
Not documented
.TP
.B \fBblkverify\fP
Not documented
.TP
.B \fBbochs\fP
Not documented
.TP
.B \fBcloop\fP
Not documented
.TP
.B \fBdmg\fP
Not documented
.TP
.B \fBfile\fP
Not documented
.TP
.B \fBftp\fP
Not documented
.TP
.B \fBftps\fP
Not documented
.TP
.B \fBgluster\fP
Not documented
.TP
\fBhost_cdrom\fP (\fBIf: \fP\fBHAVE_HOST_BLOCK_DEVICE\fP)
Not documented
.TP
\fBhost_device\fP (\fBIf: \fP\fBHAVE_HOST_BLOCK_DEVICE\fP)
Not documented
.TP
.B \fBhttp\fP
Not documented
.TP
.B \fBhttps\fP
Not documented
.TP
\fBio_uring\fP (\fBIf: \fP\fBCONFIG_BLKIO\fP)
Not documented
.TP
.B \fBiscsi\fP
Not documented
.TP
.B \fBluks\fP
Not documented
.TP
.B \fBnbd\fP
Not documented
.TP
.B \fBnfs\fP
Not documented
.TP
.B \fBnull\-aio\fP
Not documented
.TP
.B \fBnull\-co\fP
Not documented
.TP
\fBnvme\-io_uring\fP (\fBIf: \fP\fBCONFIG_BLKIO\fP)
Not documented
.TP
.B \fBparallels\fP
Not documented
.TP
.B \fBpreallocate\fP
Not documented
.TP
.B \fBqcow\fP
Not documented
.TP
.B \fBqcow2\fP
Not documented
.TP
.B \fBqed\fP
Not documented
.TP
.B \fBquorum\fP
Not documented
.TP
.B \fBraw\fP
Not documented
.TP
.B \fBrbd\fP
Not documented
.TP
\fBreplication\fP (\fBIf: \fP\fBCONFIG_REPLICATION\fP)
Not documented
.TP
.B \fBssh\fP
Not documented
.TP
.B \fBvdi\fP
Not documented
.TP
.B \fBvhdx\fP
Not documented
.TP
\fBvirtio\-blk\-vfio\-pci\fP (\fBIf: \fP\fBCONFIG_BLKIO\fP)
Not documented
.TP
\fBvirtio\-blk\-vhost\-user\fP (\fBIf: \fP\fBCONFIG_BLKIO\fP)
Not documented
.TP
\fBvirtio\-blk\-vhost\-vdpa\fP (\fBIf: \fP\fBCONFIG_BLKIO\fP)
Not documented
.TP
.B \fBvmdk\fP
Not documented
.TP
.B \fBvpc\fP
Not documented
.TP
.B \fBvvfat\fP
Not documented
.UNINDENT
.SS Since
.sp
2.9
.SS \fBBlockdevOptionsFile\fP (Object)
.sp
Driver specific block device options for the file backend.
.SS Members
.INDENT 0.0
.TP
.B \fBfilename\fP: \fBstring\fP
path to the image file
.TP
.B \fBpr\-manager\fP: \fBstring\fP (optional)
the id for the object that will handle persistent reservations
for this device (default: none, forward the commands via SG_IO;
since 2.11)
.TP
.B \fBaio\fP: \fBBlockdevAioOptions\fP (optional)
AIO backend (default: threads) (since: 2.8)
.TP
.B \fBaio\-max\-batch\fP: \fBint\fP (optional)
maximum number of requests to batch together into a single
submission in the AIO backend. The smallest value between
this and the aio\-max\-batch value of the IOThread object is
chosen.
0 means that the AIO backend will handle it automatically.
(default: 0, since 6.2)
.TP
.B \fBlocking\fP: \fBOnOffAuto\fP (optional)
whether to enable file locking. If set to \(aqauto\(aq, only enable
when Open File Descriptor (OFD) locking API is available
(default: auto, since 2.10)
.TP
\fBdrop\-cache\fP: \fBboolean\fP (optional) (\fBIf: \fP\fBCONFIG_LINUX\fP)
invalidate page cache during live migration.  This prevents
stale data on the migration destination with cache.direct=off.
Currently only supported on Linux hosts.
(default: on, since: 4.0)
.TP
.B \fBx\-check\-cache\-dropped\fP: \fBboolean\fP (optional)
whether to check that page cache was dropped on live
migration.  May cause noticeable delays if the image
file is large, do not use in production.
(default: off) (since: 3.0)
.UNINDENT
.SS Features
.INDENT 0.0
.TP
.B \fBdynamic\-auto\-read\-only\fP
If present, enabled auto\-read\-only means that the
driver will open the image read\-only at first,
dynamically reopen the image file read\-write when
the first writer is attached to the node and reopen
read\-only when the last writer is detached. This
allows giving QEMU write permissions only on demand
when an operation actually needs write access.
.TP
.B \fBunstable\fP
Member x\-check\-cache\-dropped is meant for debugging.
.UNINDENT
.SS Since
.sp
2.9
.SS \fBBlockdevOptionsNull\fP (Object)
.sp
Driver specific block device options for the null backend.
.SS Members
.INDENT 0.0
.TP
.B \fBsize\fP: \fBint\fP (optional)
size of the device in bytes.
.TP
.B \fBlatency\-ns\fP: \fBint\fP (optional)
emulated latency (in nanoseconds) in processing
requests. Default to zero which completes requests immediately.
(Since 2.4)
.TP
.B \fBread\-zeroes\fP: \fBboolean\fP (optional)
if true, reads from the device produce zeroes; if false, the
buffer is left unchanged. (default: false; since: 4.1)
.UNINDENT
.SS Since
.sp
2.9
.SS \fBBlockdevOptionsNVMe\fP (Object)
.sp
Driver specific block device options for the NVMe backend.
.SS Members
.INDENT 0.0
.TP
.B \fBdevice\fP: \fBstring\fP
PCI controller address of the NVMe device in
format hhhh:bb:ss.f (host:bus:slot.function)
.TP
.B \fBnamespace\fP: \fBint\fP
namespace number of the device, starting from 1.
.UNINDENT
Note that the PCI \fBdevice\fP must have been unbound from any host
kernel driver before instructing QEMU to add the blockdev.
.SS Since
.sp
2.12
.SS \fBBlockdevOptionsVVFAT\fP (Object)
.sp
Driver specific block device options for the vvfat protocol.
.SS Members
.INDENT 0.0
.TP
.B \fBdir\fP: \fBstring\fP
directory to be exported as FAT image
.TP
.B \fBfat\-type\fP: \fBint\fP (optional)
FAT type: 12, 16 or 32
.TP
.B \fBfloppy\fP: \fBboolean\fP (optional)
whether to export a floppy image (true) or
partitioned hard disk (false; default)
.TP
.B \fBlabel\fP: \fBstring\fP (optional)
set the volume label, limited to 11 bytes. FAT16 and
FAT32 traditionally have some restrictions on labels, which are
ignored by most operating systems. Defaults to "QEMU VVFAT".
(since 2.4)
.TP
.B \fBrw\fP: \fBboolean\fP (optional)
whether to allow write operations (default: false)
.UNINDENT
.SS Since
.sp
2.9
.SS \fBBlockdevOptionsGenericFormat\fP (Object)
.sp
Driver specific block device options for image format that have no option
besides their data source.
.SS Members
.INDENT 0.0
.TP
.B \fBfile\fP: \fBBlockdevRef\fP
reference to or definition of the data source block device
.UNINDENT
.SS Since
.sp
2.9
.SS \fBBlockdevOptionsLUKS\fP (Object)
.sp
Driver specific block device options for LUKS.
.SS Members
.INDENT 0.0
.TP
.B \fBkey\-secret\fP: \fBstring\fP (optional)
the ID of a QCryptoSecret object providing
the decryption key (since 2.6). Mandatory except when
doing a metadata\-only probe of the image.
.TP
.B The members of \fBBlockdevOptionsGenericFormat\fP
.UNINDENT
.SS Since
.sp
2.9
.SS \fBBlockdevOptionsGenericCOWFormat\fP (Object)
.sp
Driver specific block device options for image format that have no option
besides their data source and an optional backing file.
.SS Members
.INDENT 0.0
.TP
.B \fBbacking\fP: \fBBlockdevRefOrNull\fP (optional)
reference to or definition of the backing file block
device, null disables the backing file entirely.
Defaults to the backing file stored the image file.
.TP
.B The members of \fBBlockdevOptionsGenericFormat\fP
.UNINDENT
.SS Since
.sp
2.9
.SS \fBQcow2OverlapCheckMode\fP (Enum)
.sp
General overlap check modes.
.SS Values
.INDENT 0.0
.TP
.B \fBnone\fP
Do not perform any checks
.TP
.B \fBconstant\fP
Perform only checks which can be done in constant time and
without reading anything from disk
.TP
.B \fBcached\fP
Perform only checks which can be done without reading anything
from disk
.TP
.B \fBall\fP
Perform all available overlap checks
.UNINDENT
.SS Since
.sp
2.9
.SS \fBQcow2OverlapCheckFlags\fP (Object)
.sp
Structure of flags for each metadata structure. Setting a field to \(aqtrue\(aq
makes qemu guard that structure against unintended overwriting. The default
value is chosen according to the template given.
.SS Members
.INDENT 0.0
.TP
.B \fBtemplate\fP: \fBQcow2OverlapCheckMode\fP (optional)
Specifies a template mode which can be adjusted using the other
flags, defaults to \(aqcached\(aq
.TP
.B \fBbitmap\-directory\fP: \fBboolean\fP (optional)
since 3.0
.TP
.B \fBmain\-header\fP: \fBboolean\fP (optional)
Not documented
.TP
.B \fBactive\-l1\fP: \fBboolean\fP (optional)
Not documented
.TP
.B \fBactive\-l2\fP: \fBboolean\fP (optional)
Not documented
.TP
.B \fBrefcount\-table\fP: \fBboolean\fP (optional)
Not documented
.TP
.B \fBrefcount\-block\fP: \fBboolean\fP (optional)
Not documented
.TP
.B \fBsnapshot\-table\fP: \fBboolean\fP (optional)
Not documented
.TP
.B \fBinactive\-l1\fP: \fBboolean\fP (optional)
Not documented
.TP
.B \fBinactive\-l2\fP: \fBboolean\fP (optional)
Not documented
.UNINDENT
.SS Since
.sp
2.9
.SS \fBQcow2OverlapChecks\fP (Alternate)
.sp
Specifies which metadata structures should be guarded against unintended
overwriting.
.SS Members
.INDENT 0.0
.TP
.B \fBflags\fP: \fBQcow2OverlapCheckFlags\fP
set of flags for separate specification of each metadata structure
type
.TP
.B \fBmode\fP: \fBQcow2OverlapCheckMode\fP
named mode which chooses a specific set of flags
.UNINDENT
.SS Since
.sp
2.9
.SS \fBBlockdevQcowEncryptionFormat\fP (Enum)
.SS Values
.INDENT 0.0
.TP
.B \fBaes\fP
AES\-CBC with plain64 initialization vectors
.UNINDENT
.SS Since
.sp
2.10
.SS \fBBlockdevQcowEncryption\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBformat\fP: \fBBlockdevQcowEncryptionFormat\fP
Not documented
.TP
.B The members of \fBQCryptoBlockOptionsQCow\fP when \fBformat\fP is \fB"aes"\fP
.UNINDENT
.SS Since
.sp
2.10
.SS \fBBlockdevOptionsQcow\fP (Object)
.sp
Driver specific block device options for qcow.
.SS Members
.INDENT 0.0
.TP
.B \fBencrypt\fP: \fBBlockdevQcowEncryption\fP (optional)
Image decryption options. Mandatory for
encrypted images, except when doing a metadata\-only
probe of the image.
.TP
.B The members of \fBBlockdevOptionsGenericCOWFormat\fP
.UNINDENT
.SS Since
.sp
2.10
.SS \fBBlockdevQcow2EncryptionFormat\fP (Enum)
.SS Values
.INDENT 0.0
.TP
.B \fBaes\fP
AES\-CBC with plain64 initialization vectors
.TP
.B \fBluks\fP
Not documented
.UNINDENT
.SS Since
.sp
2.10
.SS \fBBlockdevQcow2Encryption\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBformat\fP: \fBBlockdevQcow2EncryptionFormat\fP
Not documented
.TP
.B The members of \fBQCryptoBlockOptionsQCow\fP when \fBformat\fP is \fB"aes"\fP
.TP
.B The members of \fBQCryptoBlockOptionsLUKS\fP when \fBformat\fP is \fB"luks"\fP
.UNINDENT
.SS Since
.sp
2.10
.SS \fBBlockdevOptionsPreallocate\fP (Object)
.sp
Filter driver intended to be inserted between format and protocol node
and do preallocation in protocol node on write.
.SS Members
.INDENT 0.0
.TP
.B \fBprealloc\-align\fP: \fBint\fP (optional)
on preallocation, align file length to this number,
default 1048576 (1M)
.TP
.B \fBprealloc\-size\fP: \fBint\fP (optional)
how much to preallocate, default 134217728 (128M)
.TP
.B The members of \fBBlockdevOptionsGenericFormat\fP
.UNINDENT
.SS Since
.sp
6.0
.SS \fBBlockdevOptionsQcow2\fP (Object)
.sp
Driver specific block device options for qcow2.
.SS Members
.INDENT 0.0
.TP
.B \fBlazy\-refcounts\fP: \fBboolean\fP (optional)
whether to enable the lazy refcounts
feature (default is taken from the image file)
.TP
.B \fBpass\-discard\-request\fP: \fBboolean\fP (optional)
whether discard requests to the qcow2
device should be forwarded to the data source
.TP
.B \fBpass\-discard\-snapshot\fP: \fBboolean\fP (optional)
whether discard requests for the data source
should be issued when a snapshot operation (e.g.
deleting a snapshot) frees clusters in the qcow2 file
.TP
.B \fBpass\-discard\-other\fP: \fBboolean\fP (optional)
whether discard requests for the data source
should be issued on other occasions where a cluster
gets freed
.TP
.B \fBoverlap\-check\fP: \fBQcow2OverlapChecks\fP (optional)
which overlap checks to perform for writes
to the image, defaults to \(aqcached\(aq (since 2.2)
.TP
.B \fBcache\-size\fP: \fBint\fP (optional)
the maximum total size of the L2 table and
refcount block caches in bytes (since 2.2)
.TP
.B \fBl2\-cache\-size\fP: \fBint\fP (optional)
the maximum size of the L2 table cache in
bytes (since 2.2)
.TP
.B \fBl2\-cache\-entry\-size\fP: \fBint\fP (optional)
the size of each entry in the L2 cache in
bytes. It must be a power of two between 512
and the cluster size. The default value is
the cluster size (since 2.12)
.TP
.B \fBrefcount\-cache\-size\fP: \fBint\fP (optional)
the maximum size of the refcount block cache
in bytes (since 2.2)
.TP
.B \fBcache\-clean\-interval\fP: \fBint\fP (optional)
clean unused entries in the L2 and refcount
caches. The interval is in seconds. The default value
is 600 on supporting platforms, and 0 on other
platforms. 0 disables this feature. (since 2.5)
.TP
.B \fBencrypt\fP: \fBBlockdevQcow2Encryption\fP (optional)
Image decryption options. Mandatory for
encrypted images, except when doing a metadata\-only
probe of the image. (since 2.10)
.TP
.B \fBdata\-file\fP: \fBBlockdevRef\fP (optional)
reference to or definition of the external data file.
This may only be specified for images that require an
external data file. If it is not specified for such
an image, the data file name is loaded from the image
file. (since 4.0)
.TP
.B The members of \fBBlockdevOptionsGenericCOWFormat\fP
.UNINDENT
.SS Since
.sp
2.9
.SS \fBSshHostKeyCheckMode\fP (Enum)
.SS Values
.INDENT 0.0
.TP
.B \fBnone\fP
Don\(aqt check the host key at all
.TP
.B \fBhash\fP
Compare the host key with a given hash
.TP
.B \fBknown_hosts\fP
Check the host key against the known_hosts file
.UNINDENT
.SS Since
.sp
2.12
.SS \fBSshHostKeyCheckHashType\fP (Enum)
.SS Values
.INDENT 0.0
.TP
.B \fBmd5\fP
The given hash is an md5 hash
.TP
.B \fBsha1\fP
The given hash is an sha1 hash
.TP
.B \fBsha256\fP
The given hash is an sha256 hash
.UNINDENT
.SS Since
.sp
2.12
.SS \fBSshHostKeyHash\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBtype\fP: \fBSshHostKeyCheckHashType\fP
The hash algorithm used for the hash
.TP
.B \fBhash\fP: \fBstring\fP
The expected hash value
.UNINDENT
.SS Since
.sp
2.12
.SS \fBSshHostKeyCheck\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBmode\fP: \fBSshHostKeyCheckMode\fP
Not documented
.TP
.B The members of \fBSshHostKeyHash\fP when \fBmode\fP is \fB"hash"\fP
.UNINDENT
.SS Since
.sp
2.12
.SS \fBBlockdevOptionsSsh\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBserver\fP: \fBInetSocketAddress\fP
host address
.TP
.B \fBpath\fP: \fBstring\fP
path to the image on the host
.TP
.B \fBuser\fP: \fBstring\fP (optional)
user as which to connect, defaults to current local user name
.TP
.B \fBhost\-key\-check\fP: \fBSshHostKeyCheck\fP (optional)
Defines how and what to check the host key against
(default: known_hosts)
.UNINDENT
.SS Since
.sp
2.9
.SS \fBBlkdebugEvent\fP (Enum)
.sp
Trigger events supported by blkdebug.
.SS Values
.INDENT 0.0
.TP
.B \fBl1_shrink_write_table\fP
write zeros to the l1 table to shrink image.
(since 2.11)
.TP
.B \fBl1_shrink_free_l2_clusters\fP
discard the l2 tables. (since 2.11)
.TP
.B \fBcor_write\fP
a write due to copy\-on\-read (since 2.11)
.TP
.B \fBcluster_alloc_space\fP
an allocation of file space for a cluster (since 4.1)
.TP
.B \fBnone\fP
triggers once at creation of the blkdebug node (since 4.1)
.TP
.B \fBl1_update\fP
Not documented
.TP
.B \fBl1_grow_alloc_table\fP
Not documented
.TP
.B \fBl1_grow_write_table\fP
Not documented
.TP
.B \fBl1_grow_activate_table\fP
Not documented
.TP
.B \fBl2_load\fP
Not documented
.TP
.B \fBl2_update\fP
Not documented
.TP
.B \fBl2_update_compressed\fP
Not documented
.TP
.B \fBl2_alloc_cow_read\fP
Not documented
.TP
.B \fBl2_alloc_write\fP
Not documented
.TP
.B \fBread_aio\fP
Not documented
.TP
.B \fBread_backing_aio\fP
Not documented
.TP
.B \fBread_compressed\fP
Not documented
.TP
.B \fBwrite_aio\fP
Not documented
.TP
.B \fBwrite_compressed\fP
Not documented
.TP
.B \fBvmstate_load\fP
Not documented
.TP
.B \fBvmstate_save\fP
Not documented
.TP
.B \fBcow_read\fP
Not documented
.TP
.B \fBcow_write\fP
Not documented
.TP
.B \fBreftable_load\fP
Not documented
.TP
.B \fBreftable_grow\fP
Not documented
.TP
.B \fBreftable_update\fP
Not documented
.TP
.B \fBrefblock_load\fP
Not documented
.TP
.B \fBrefblock_update\fP
Not documented
.TP
.B \fBrefblock_update_part\fP
Not documented
.TP
.B \fBrefblock_alloc\fP
Not documented
.TP
.B \fBrefblock_alloc_hookup\fP
Not documented
.TP
.B \fBrefblock_alloc_write\fP
Not documented
.TP
.B \fBrefblock_alloc_write_blocks\fP
Not documented
.TP
.B \fBrefblock_alloc_write_table\fP
Not documented
.TP
.B \fBrefblock_alloc_switch_table\fP
Not documented
.TP
.B \fBcluster_alloc\fP
Not documented
.TP
.B \fBcluster_alloc_bytes\fP
Not documented
.TP
.B \fBcluster_free\fP
Not documented
.TP
.B \fBflush_to_os\fP
Not documented
.TP
.B \fBflush_to_disk\fP
Not documented
.TP
.B \fBpwritev_rmw_head\fP
Not documented
.TP
.B \fBpwritev_rmw_after_head\fP
Not documented
.TP
.B \fBpwritev_rmw_tail\fP
Not documented
.TP
.B \fBpwritev_rmw_after_tail\fP
Not documented
.TP
.B \fBpwritev\fP
Not documented
.TP
.B \fBpwritev_zero\fP
Not documented
.TP
.B \fBpwritev_done\fP
Not documented
.TP
.B \fBempty_image_prepare\fP
Not documented
.UNINDENT
.SS Since
.sp
2.9
.SS \fBBlkdebugIOType\fP (Enum)
.sp
Kinds of I/O that blkdebug can inject errors in.
.SS Values
.INDENT 0.0
.TP
.B \fBread\fP
\&.bdrv_co_preadv()
.TP
.B \fBwrite\fP
\&.bdrv_co_pwritev()
.TP
.B \fBwrite\-zeroes\fP
\&.bdrv_co_pwrite_zeroes()
.TP
.B \fBdiscard\fP
\&.bdrv_co_pdiscard()
.TP
.B \fBflush\fP
\&.bdrv_co_flush_to_disk()
.TP
.B \fBblock\-status\fP
\&.bdrv_co_block_status()
.UNINDENT
.SS Since
.sp
4.1
.SS \fBBlkdebugInjectErrorOptions\fP (Object)
.sp
Describes a single error injection for blkdebug.
.SS Members
.INDENT 0.0
.TP
.B \fBevent\fP: \fBBlkdebugEvent\fP
trigger event
.TP
.B \fBstate\fP: \fBint\fP (optional)
the state identifier blkdebug needs to be in to
actually trigger the event; defaults to "any"
.TP
.B \fBiotype\fP: \fBBlkdebugIOType\fP (optional)
the type of I/O operations on which this error should
be injected; defaults to "all read, write,
write\-zeroes, discard, and flush operations"
(since: 4.1)
.TP
.B \fBerrno\fP: \fBint\fP (optional)
error identifier (errno) to be returned; defaults to
EIO
.TP
.B \fBsector\fP: \fBint\fP (optional)
specifies the sector index which has to be affected
in order to actually trigger the event; defaults to "any
sector"
.TP
.B \fBonce\fP: \fBboolean\fP (optional)
disables further events after this one has been
triggered; defaults to false
.TP
.B \fBimmediately\fP: \fBboolean\fP (optional)
fail immediately; defaults to false
.UNINDENT
.SS Since
.sp
2.9
.SS \fBBlkdebugSetStateOptions\fP (Object)
.sp
Describes a single state\-change event for blkdebug.
.SS Members
.INDENT 0.0
.TP
.B \fBevent\fP: \fBBlkdebugEvent\fP
trigger event
.TP
.B \fBstate\fP: \fBint\fP (optional)
the current state identifier blkdebug needs to be in;
defaults to "any"
.TP
.B \fBnew_state\fP: \fBint\fP
the state identifier blkdebug is supposed to assume if
this event is triggered
.UNINDENT
.SS Since
.sp
2.9
.SS \fBBlockdevOptionsBlkdebug\fP (Object)
.sp
Driver specific block device options for blkdebug.
.SS Members
.INDENT 0.0
.TP
.B \fBimage\fP: \fBBlockdevRef\fP
underlying raw block device (or image file)
.TP
.B \fBconfig\fP: \fBstring\fP (optional)
filename of the configuration file
.TP
.B \fBalign\fP: \fBint\fP (optional)
required alignment for requests in bytes, must be
positive power of 2, or 0 for default
.TP
.B \fBmax\-transfer\fP: \fBint\fP (optional)
maximum size for I/O transfers in bytes, must be
positive multiple of \fBalign\fP and of the underlying
file\(aqs request alignment (but need not be a power of
2), or 0 for default (since 2.10)
.TP
.B \fBopt\-write\-zero\fP: \fBint\fP (optional)
preferred alignment for write zero requests in bytes,
must be positive multiple of \fBalign\fP and of the
underlying file\(aqs request alignment (but need not be a
power of 2), or 0 for default (since 2.10)
.TP
.B \fBmax\-write\-zero\fP: \fBint\fP (optional)
maximum size for write zero requests in bytes, must be
positive multiple of \fBalign\fP, of \fBopt\-write\-zero\fP, and of
the underlying file\(aqs request alignment (but need not
be a power of 2), or 0 for default (since 2.10)
.TP
.B \fBopt\-discard\fP: \fBint\fP (optional)
preferred alignment for discard requests in bytes, must
be positive multiple of \fBalign\fP and of the underlying
file\(aqs request alignment (but need not be a power of
2), or 0 for default (since 2.10)
.TP
.B \fBmax\-discard\fP: \fBint\fP (optional)
maximum size for discard requests in bytes, must be
positive multiple of \fBalign\fP, of \fBopt\-discard\fP, and of
the underlying file\(aqs request alignment (but need not
be a power of 2), or 0 for default (since 2.10)
.TP
.B \fBinject\-error\fP: \fBarray of BlkdebugInjectErrorOptions\fP (optional)
array of error injection descriptions
.TP
.B \fBset\-state\fP: \fBarray of BlkdebugSetStateOptions\fP (optional)
array of state\-change descriptions
.TP
.B \fBtake\-child\-perms\fP: \fBarray of BlockPermission\fP (optional)
Permissions to take on \fBimage\fP in addition to what
is necessary anyway (which depends on how the
blkdebug node is used).  Defaults to none.
(since 5.0)
.TP
.B \fBunshare\-child\-perms\fP: \fBarray of BlockPermission\fP (optional)
Permissions not to share on \fBimage\fP in addition
to what cannot be shared anyway (which depends
on how the blkdebug node is used).  Defaults
to none.  (since 5.0)
.UNINDENT
.SS Since
.sp
2.9
.SS \fBBlockdevOptionsBlklogwrites\fP (Object)
.sp
Driver specific block device options for blklogwrites.
.SS Members
.INDENT 0.0
.TP
.B \fBfile\fP: \fBBlockdevRef\fP
block device
.TP
.B \fBlog\fP: \fBBlockdevRef\fP
block device used to log writes to \fBfile\fP
.TP
.B \fBlog\-sector\-size\fP: \fBint\fP (optional)
sector size used in logging writes to \fBfile\fP, determines
granularity of offsets and sizes of writes (default: 512)
.TP
.B \fBlog\-append\fP: \fBboolean\fP (optional)
append to an existing log (default: false)
.TP
.B \fBlog\-super\-update\-interval\fP: \fBint\fP (optional)
interval of write requests after which the log
super block is updated to disk (default: 4096)
.UNINDENT
.SS Since
.sp
3.0
.SS \fBBlockdevOptionsBlkverify\fP (Object)
.sp
Driver specific block device options for blkverify.
.SS Members
.INDENT 0.0
.TP
.B \fBtest\fP: \fBBlockdevRef\fP
block device to be tested
.TP
.B \fBraw\fP: \fBBlockdevRef\fP
raw image used for verification
.UNINDENT
.SS Since
.sp
2.9
.SS \fBBlockdevOptionsBlkreplay\fP (Object)
.sp
Driver specific block device options for blkreplay.
.SS Members
.INDENT 0.0
.TP
.B \fBimage\fP: \fBBlockdevRef\fP
disk image which should be controlled with blkreplay
.UNINDENT
.SS Since
.sp
4.2
.SS \fBQuorumReadPattern\fP (Enum)
.sp
An enumeration of quorum read patterns.
.SS Values
.INDENT 0.0
.TP
.B \fBquorum\fP
read all the children and do a quorum vote on reads
.TP
.B \fBfifo\fP
read only from the first child that has not failed
.UNINDENT
.SS Since
.sp
2.9
.SS \fBBlockdevOptionsQuorum\fP (Object)
.sp
Driver specific block device options for Quorum
.SS Members
.INDENT 0.0
.TP
.B \fBblkverify\fP: \fBboolean\fP (optional)
.INDENT 7.0
.TP
.B true if the driver must print content mismatch
set to false by default
.UNINDENT
.TP
.B \fBchildren\fP: \fBarray of BlockdevRef\fP
the children block devices to use
.TP
.B \fBvote\-threshold\fP: \fBint\fP
the vote limit under which a read will fail
.TP
.B \fBrewrite\-corrupted\fP: \fBboolean\fP (optional)
rewrite corrupted data when quorum is reached
(Since 2.1)
.TP
.B \fBread\-pattern\fP: \fBQuorumReadPattern\fP (optional)
choose read pattern and set to quorum by default
(Since 2.2)
.UNINDENT
.SS Since
.sp
2.9
.SS \fBBlockdevOptionsGluster\fP (Object)
.sp
Driver specific block device options for Gluster
.SS Members
.INDENT 0.0
.TP
.B \fBvolume\fP: \fBstring\fP
name of gluster volume where VM image resides
.TP
.B \fBpath\fP: \fBstring\fP
absolute path to image file in gluster volume
.TP
.B \fBserver\fP: \fBarray of SocketAddress\fP
gluster servers description
.TP
.B \fBdebug\fP: \fBint\fP (optional)
libgfapi log level (default \(aq4\(aq which is Error)
(Since 2.8)
.TP
.B \fBlogfile\fP: \fBstring\fP (optional)
libgfapi log file (default /dev/stderr) (Since 2.8)
.UNINDENT
.SS Since
.sp
2.9
.SS \fBBlockdevOptionsIoUring\fP (Object)
.sp
Driver specific block device options for the io_uring backend.
.SS Members
.INDENT 0.0
.TP
.B \fBfilename\fP: \fBstring\fP
path to the image file
.UNINDENT
.SS Since
.sp
7.2
.SS If
.sp
\fBCONFIG_BLKIO\fP
.SS \fBBlockdevOptionsNvmeIoUring\fP (Object)
.sp
Driver specific block device options for the nvme\-io_uring backend.
.SS Members
.INDENT 0.0
.TP
.B \fBpath\fP: \fBstring\fP
path to the NVMe namespace\(aqs character device (e.g. /dev/ng0n1).
.UNINDENT
.SS Since
.sp
7.2
.SS If
.sp
\fBCONFIG_BLKIO\fP
.SS \fBBlockdevOptionsVirtioBlkVfioPci\fP (Object)
.sp
Driver specific block device options for the virtio\-blk\-vfio\-pci backend.
.SS Members
.INDENT 0.0
.TP
.B \fBpath\fP: \fBstring\fP
path to the PCI device\(aqs sysfs directory (e.g.
/sys/bus/pci/devices/0000:00:01.0).
.UNINDENT
.SS Since
.sp
7.2
.SS If
.sp
\fBCONFIG_BLKIO\fP
.SS \fBBlockdevOptionsVirtioBlkVhostUser\fP (Object)
.sp
Driver specific block device options for the virtio\-blk\-vhost\-user backend.
.SS Members
.INDENT 0.0
.TP
.B \fBpath\fP: \fBstring\fP
path to the vhost\-user UNIX domain socket.
.UNINDENT
.SS Since
.sp
7.2
.SS If
.sp
\fBCONFIG_BLKIO\fP
.SS \fBBlockdevOptionsVirtioBlkVhostVdpa\fP (Object)
.sp
Driver specific block device options for the virtio\-blk\-vhost\-vdpa backend.
.SS Members
.INDENT 0.0
.TP
.B \fBpath\fP: \fBstring\fP
path to the vhost\-vdpa character device.
.UNINDENT
.SS Since
.sp
7.2
.SS If
.sp
\fBCONFIG_BLKIO\fP
.SS \fBIscsiTransport\fP (Enum)
.sp
An enumeration of libiscsi transport types
.SS Values
.INDENT 0.0
.TP
.B \fBtcp\fP
Not documented
.TP
.B \fBiser\fP
Not documented
.UNINDENT
.SS Since
.sp
2.9
.SS \fBIscsiHeaderDigest\fP (Enum)
.sp
An enumeration of header digests supported by libiscsi
.SS Values
.INDENT 0.0
.TP
.B \fBcrc32c\fP
Not documented
.TP
.B \fBnone\fP
Not documented
.TP
.B \fBcrc32c\-none\fP
Not documented
.TP
.B \fBnone\-crc32c\fP
Not documented
.UNINDENT
.SS Since
.sp
2.9
.SS \fBBlockdevOptionsIscsi\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBtransport\fP: \fBIscsiTransport\fP
The iscsi transport type
.TP
.B \fBportal\fP: \fBstring\fP
The address of the iscsi portal
.TP
.B \fBtarget\fP: \fBstring\fP
The target iqn name
.TP
.B \fBlun\fP: \fBint\fP (optional)
LUN to connect to. Defaults to 0.
.TP
.B \fBuser\fP: \fBstring\fP (optional)
User name to log in with. If omitted, no CHAP
authentication is performed.
.TP
.B \fBpassword\-secret\fP: \fBstring\fP (optional)
The ID of a QCryptoSecret object providing
the password for the login. This option is required if
\fBuser\fP is specified.
.TP
.B \fBinitiator\-name\fP: \fBstring\fP (optional)
The iqn name we want to identify to the target
as. If this option is not specified, an initiator name is
generated automatically.
.TP
.B \fBheader\-digest\fP: \fBIscsiHeaderDigest\fP (optional)
The desired header digest. Defaults to
none\-crc32c.
.TP
.B \fBtimeout\fP: \fBint\fP (optional)
Timeout in seconds after which a request will
timeout. 0 means no timeout and is the default.
.UNINDENT
Driver specific block device options for iscsi
.SS Since
.sp
2.9
.SS \fBRbdAuthMode\fP (Enum)
.SS Values
.INDENT 0.0
.TP
.B \fBcephx\fP
Not documented
.TP
.B \fBnone\fP
Not documented
.UNINDENT
.SS Since
.sp
3.0
.SS \fBRbdImageEncryptionFormat\fP (Enum)
.SS Values
.INDENT 0.0
.TP
.B \fBluks\fP
Not documented
.TP
.B \fBluks2\fP
Not documented
.UNINDENT
.SS Since
.sp
6.1
.SS \fBRbdEncryptionOptionsLUKSBase\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBkey\-secret\fP: \fBstring\fP
ID of a QCryptoSecret object providing a passphrase
for unlocking the encryption
.UNINDENT
.SS Since
.sp
6.1
.SS \fBRbdEncryptionCreateOptionsLUKSBase\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBcipher\-alg\fP: \fBQCryptoCipherAlgorithm\fP (optional)
The encryption algorithm
.TP
.B The members of \fBRbdEncryptionOptionsLUKSBase\fP
.UNINDENT
.SS Since
.sp
6.1
.SS \fBRbdEncryptionOptionsLUKS\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B The members of \fBRbdEncryptionOptionsLUKSBase\fP
.UNINDENT
.SS Since
.sp
6.1
.SS \fBRbdEncryptionOptionsLUKS2\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B The members of \fBRbdEncryptionOptionsLUKSBase\fP
.UNINDENT
.SS Since
.sp
6.1
.SS \fBRbdEncryptionCreateOptionsLUKS\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B The members of \fBRbdEncryptionCreateOptionsLUKSBase\fP
.UNINDENT
.SS Since
.sp
6.1
.SS \fBRbdEncryptionCreateOptionsLUKS2\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B The members of \fBRbdEncryptionCreateOptionsLUKSBase\fP
.UNINDENT
.SS Since
.sp
6.1
.SS \fBRbdEncryptionOptions\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBformat\fP: \fBRbdImageEncryptionFormat\fP
Not documented
.TP
.B The members of \fBRbdEncryptionOptionsLUKS\fP when \fBformat\fP is \fB"luks"\fP
.TP
.B The members of \fBRbdEncryptionOptionsLUKS2\fP when \fBformat\fP is \fB"luks2"\fP
.UNINDENT
.SS Since
.sp
6.1
.SS \fBRbdEncryptionCreateOptions\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBformat\fP: \fBRbdImageEncryptionFormat\fP
Not documented
.TP
.B The members of \fBRbdEncryptionCreateOptionsLUKS\fP when \fBformat\fP is \fB"luks"\fP
.TP
.B The members of \fBRbdEncryptionCreateOptionsLUKS2\fP when \fBformat\fP is \fB"luks2"\fP
.UNINDENT
.SS Since
.sp
6.1
.SS \fBBlockdevOptionsRbd\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBpool\fP: \fBstring\fP
Ceph pool name.
.TP
.B \fBnamespace\fP: \fBstring\fP (optional)
Rados namespace name in the Ceph pool. (Since 5.0)
.TP
.B \fBimage\fP: \fBstring\fP
Image name in the Ceph pool.
.TP
.B \fBconf\fP: \fBstring\fP (optional)
path to Ceph configuration file.  Values
in the configuration file will be overridden by
options specified via QAPI.
.TP
.B \fBsnapshot\fP: \fBstring\fP (optional)
Ceph snapshot name.
.TP
.B \fBencrypt\fP: \fBRbdEncryptionOptions\fP (optional)
Image encryption options. (Since 6.1)
.TP
.B \fBuser\fP: \fBstring\fP (optional)
Ceph id name.
.TP
.B \fBauth\-client\-required\fP: \fBarray of RbdAuthMode\fP (optional)
Acceptable authentication modes.
This maps to Ceph configuration option
"auth_client_required".  (Since 3.0)
.TP
.B \fBkey\-secret\fP: \fBstring\fP (optional)
ID of a QCryptoSecret object providing a key
for cephx authentication.
This maps to Ceph configuration option
"key".  (Since 3.0)
.TP
.B \fBserver\fP: \fBarray of InetSocketAddressBase\fP (optional)
Monitor host address and port.  This maps
to the "mon_host" Ceph option.
.UNINDENT
.SS Since
.sp
2.9
.SS \fBReplicationMode\fP (Enum)
.sp
An enumeration of replication modes.
.SS Values
.INDENT 0.0
.TP
.B \fBprimary\fP
Primary mode, the vm\(aqs state will be sent to secondary QEMU.
.TP
.B \fBsecondary\fP
Secondary mode, receive the vm\(aqs state from primary QEMU.
.UNINDENT
.SS Since
.sp
2.9
.SS If
.sp
\fBCONFIG_REPLICATION\fP
.SS \fBBlockdevOptionsReplication\fP (Object)
.sp
Driver specific block device options for replication
.SS Members
.INDENT 0.0
.TP
.B \fBmode\fP: \fBReplicationMode\fP
the replication mode
.TP
.B \fBtop\-id\fP: \fBstring\fP (optional)
In secondary mode, node name or device ID of the root
node who owns the replication node chain. Must not be given in
primary mode.
.TP
.B The members of \fBBlockdevOptionsGenericFormat\fP
.UNINDENT
.SS Since
.sp
2.9
.SS If
.sp
\fBCONFIG_REPLICATION\fP
.SS \fBNFSTransport\fP (Enum)
.sp
An enumeration of NFS transport types
.SS Values
.INDENT 0.0
.TP
.B \fBinet\fP
TCP transport
.UNINDENT
.SS Since
.sp
2.9
.SS \fBNFSServer\fP (Object)
.sp
Captures the address of the socket
.SS Members
.INDENT 0.0
.TP
.B \fBtype\fP: \fBNFSTransport\fP
transport type used for NFS (only TCP supported)
.TP
.B \fBhost\fP: \fBstring\fP
host address for NFS server
.UNINDENT
.SS Since
.sp
2.9
.SS \fBBlockdevOptionsNfs\fP (Object)
.sp
Driver specific block device option for NFS
.SS Members
.INDENT 0.0
.TP
.B \fBserver\fP: \fBNFSServer\fP
host address
.TP
.B \fBpath\fP: \fBstring\fP
path of the image on the host
.TP
.B \fBuser\fP: \fBint\fP (optional)
UID value to use when talking to the
server (defaults to 65534 on Windows and getuid()
on unix)
.TP
.B \fBgroup\fP: \fBint\fP (optional)
GID value to use when talking to the
server (defaults to 65534 on Windows and getgid()
in unix)
.TP
.B \fBtcp\-syn\-count\fP: \fBint\fP (optional)
number of SYNs during the session
establishment (defaults to libnfs default)
.TP
.B \fBreadahead\-size\fP: \fBint\fP (optional)
set the readahead size in bytes (defaults
to libnfs default)
.TP
.B \fBpage\-cache\-size\fP: \fBint\fP (optional)
set the pagecache size in bytes (defaults
to libnfs default)
.TP
.B \fBdebug\fP: \fBint\fP (optional)
set the NFS debug level (max 2) (defaults
to libnfs default)
.UNINDENT
.SS Since
.sp
2.9
.SS \fBBlockdevOptionsCurlBase\fP (Object)
.sp
Driver specific block device options shared by all protocols supported by the
curl backend.
.SS Members
.INDENT 0.0
.TP
.B \fBurl\fP: \fBstring\fP
URL of the image file
.TP
.B \fBreadahead\fP: \fBint\fP (optional)
Size of the read\-ahead cache; must be a multiple of
512 (defaults to 256 kB)
.TP
.B \fBtimeout\fP: \fBint\fP (optional)
Timeout for connections, in seconds (defaults to 5)
.TP
.B \fBusername\fP: \fBstring\fP (optional)
Username for authentication (defaults to none)
.TP
.B \fBpassword\-secret\fP: \fBstring\fP (optional)
ID of a QCryptoSecret object providing a password
for authentication (defaults to no password)
.TP
.B \fBproxy\-username\fP: \fBstring\fP (optional)
Username for proxy authentication (defaults to none)
.TP
.B \fBproxy\-password\-secret\fP: \fBstring\fP (optional)
ID of a QCryptoSecret object providing a password
for proxy authentication (defaults to no password)
.UNINDENT
.SS Since
.sp
2.9
.SS \fBBlockdevOptionsCurlHttp\fP (Object)
.sp
Driver specific block device options for HTTP connections over the curl
backend.  URLs must start with "\fI\%http://\fP".
.SS Members
.INDENT 0.0
.TP
.B \fBcookie\fP: \fBstring\fP (optional)
List of cookies to set; format is
"name1=content1; name2=content2;" as explained by
CURLOPT_COOKIE(3). Defaults to no cookies.
.TP
.B \fBcookie\-secret\fP: \fBstring\fP (optional)
ID of a QCryptoSecret object providing the cookie data in a
secure way. See \fBcookie\fP for the format. (since 2.10)
.TP
.B The members of \fBBlockdevOptionsCurlBase\fP
.UNINDENT
.SS Since
.sp
2.9
.SS \fBBlockdevOptionsCurlHttps\fP (Object)
.sp
Driver specific block device options for HTTPS connections over the curl
backend.  URLs must start with "\fI\%https://\fP".
.SS Members
.INDENT 0.0
.TP
.B \fBcookie\fP: \fBstring\fP (optional)
List of cookies to set; format is
"name1=content1; name2=content2;" as explained by
CURLOPT_COOKIE(3). Defaults to no cookies.
.TP
.B \fBsslverify\fP: \fBboolean\fP (optional)
Whether to verify the SSL certificate\(aqs validity (defaults to
true)
.TP
.B \fBcookie\-secret\fP: \fBstring\fP (optional)
ID of a QCryptoSecret object providing the cookie data in a
secure way. See \fBcookie\fP for the format. (since 2.10)
.TP
.B The members of \fBBlockdevOptionsCurlBase\fP
.UNINDENT
.SS Since
.sp
2.9
.SS \fBBlockdevOptionsCurlFtp\fP (Object)
.sp
Driver specific block device options for FTP connections over the curl
backend.  URLs must start with "\fI\%ftp://\fP".
.SS Members
.INDENT 0.0
.TP
.B The members of \fBBlockdevOptionsCurlBase\fP
.UNINDENT
.SS Since
.sp
2.9
.SS \fBBlockdevOptionsCurlFtps\fP (Object)
.sp
Driver specific block device options for FTPS connections over the curl
backend.  URLs must start with "ftps://".
.SS Members
.INDENT 0.0
.TP
.B \fBsslverify\fP: \fBboolean\fP (optional)
Whether to verify the SSL certificate\(aqs validity (defaults to
true)
.TP
.B The members of \fBBlockdevOptionsCurlBase\fP
.UNINDENT
.SS Since
.sp
2.9
.SS \fBBlockdevOptionsNbd\fP (Object)
.sp
Driver specific block device options for NBD.
.SS Members
.INDENT 0.0
.TP
.B \fBserver\fP: \fBSocketAddress\fP
NBD server address
.TP
.B \fBexport\fP: \fBstring\fP (optional)
export name
.TP
.B \fBtls\-creds\fP: \fBstring\fP (optional)
TLS credentials ID
.TP
.B \fBtls\-hostname\fP: \fBstring\fP (optional)
TLS hostname override for certificate validation (Since 7.0)
.TP
.B \fBx\-dirty\-bitmap\fP: \fBstring\fP (optional)
A metadata context name such as "qemu:dirty\-bitmap:NAME"
or "qemu:allocation\-depth" to query in place of the
traditional "base:allocation" block status (see
NBD_OPT_LIST_META_CONTEXT in the NBD protocol; and
yes, naming this option x\-context would have made
more sense) (since 3.0)
.TP
.B \fBreconnect\-delay\fP: \fBint\fP (optional)
On an unexpected disconnect, the nbd client tries to
connect again until succeeding or encountering a serious
error.  During the first \fBreconnect\-delay\fP seconds, all
requests are paused and will be rerun on a successful
reconnect. After that time, any delayed requests and all
future requests before a successful reconnect will
immediately fail. Default 0 (Since 4.2)
.TP
.B \fBopen\-timeout\fP: \fBint\fP (optional)
In seconds. If zero, the nbd driver tries the connection
only once, and fails to open if the connection fails.
If non\-zero, the nbd driver will repeat connection attempts
until successful or until \fBopen\-timeout\fP seconds have elapsed.
Default 0 (Since 7.0)
.UNINDENT
.SS Features
.INDENT 0.0
.TP
.B \fBunstable\fP
Member \fBx\-dirty\-bitmap\fP is experimental.
.UNINDENT
.SS Since
.sp
2.9
.SS \fBBlockdevOptionsRaw\fP (Object)
.sp
Driver specific block device options for the raw driver.
.SS Members
.INDENT 0.0
.TP
.B \fBoffset\fP: \fBint\fP (optional)
position where the block device starts
.TP
.B \fBsize\fP: \fBint\fP (optional)
the assumed size of the device
.TP
.B The members of \fBBlockdevOptionsGenericFormat\fP
.UNINDENT
.SS Since
.sp
2.9
.SS \fBBlockdevOptionsThrottle\fP (Object)
.sp
Driver specific block device options for the throttle driver
.SS Members
.INDENT 0.0
.TP
.B \fBthrottle\-group\fP: \fBstring\fP
the name of the throttle\-group object to use. It
must already exist.
.TP
.B \fBfile\fP: \fBBlockdevRef\fP
reference to or definition of the data source block device
.UNINDENT
.SS Since
.sp
2.11
.SS \fBBlockdevOptionsCor\fP (Object)
.sp
Driver specific block device options for the copy\-on\-read driver.
.SS Members
.INDENT 0.0
.TP
.B \fBbottom\fP: \fBstring\fP (optional)
The name of a non\-filter node (allocation\-bearing layer) that
limits the COR operations in the backing chain (inclusive), so
that no data below this node will be copied by this filter.
If option is absent, the limit is not applied, so that data
from all backing layers may be copied.
.TP
.B The members of \fBBlockdevOptionsGenericFormat\fP
.UNINDENT
.SS Since
.sp
6.0
.SS \fBOnCbwError\fP (Enum)
.sp
An enumeration of possible behaviors for copy\-before\-write operation
failures.
.SS Values
.INDENT 0.0
.TP
.B \fBbreak\-guest\-write\fP
report the error to the guest. This way, the guest
will not be able to overwrite areas that cannot be
backed up, so the backup process remains valid.
.TP
.B \fBbreak\-snapshot\fP
continue guest write. Doing so will make the provided
snapshot state invalid and any backup or export
process based on it will finally fail.
.UNINDENT
.SS Since
.sp
7.1
.SS \fBBlockdevOptionsCbw\fP (Object)
.sp
Driver specific block device options for the copy\-before\-write driver,
which does so called copy\-before\-write operations: when data is
written to the filter, the filter first reads corresponding blocks
from its file child and copies them to \fBtarget\fP child. After successfully
copying, the write request is propagated to file child. If copying
fails, the original write request is failed too and no data is written
to file child.
.SS Members
.INDENT 0.0
.TP
.B \fBtarget\fP: \fBBlockdevRef\fP
The target for copy\-before\-write operations.
.TP
.B \fBbitmap\fP: \fBBlockDirtyBitmap\fP (optional)
If specified, copy\-before\-write filter will do
copy\-before\-write operations only for dirty regions of the
bitmap. Bitmap size must be equal to length of file and
target child of the filter. Note also, that bitmap is used
only to initialize internal bitmap of the process, so further
modifications (or removing) of specified bitmap doesn\(aqt
influence the filter. (Since 7.0)
.TP
.B \fBon\-cbw\-error\fP: \fBOnCbwError\fP (optional)
Behavior on failure of copy\-before\-write operation.
Default is \fBbreak\-guest\-write\fP\&. (Since 7.1)
.TP
.B \fBcbw\-timeout\fP: \fBint\fP (optional)
Zero means no limit. Non\-zero sets the timeout in seconds
for copy\-before\-write operation. When a timeout occurs,
the respective copy\-before\-write operation will fail, and
the \fBon\-cbw\-error\fP parameter will decide how this failure
is handled. Default 0. (Since 7.1)
.TP
.B The members of \fBBlockdevOptionsGenericFormat\fP
.UNINDENT
.SS Since
.sp
6.2
.SS \fBBlockdevOptions\fP (Object)
.sp
Options for creating a block device.  Many options are available for all
block devices, independent of the block driver:
.SS Members
.INDENT 0.0
.TP
.B \fBdriver\fP: \fBBlockdevDriver\fP
block driver name
.TP
.B \fBnode\-name\fP: \fBstring\fP (optional)
the node name of the new node (Since 2.0).
This option is required on the top level of blockdev\-add.
Valid node names start with an alphabetic character and may
contain only alphanumeric characters, \(aq\-\(aq, \(aq.\(aq and \(aq_\(aq. Their
maximum length is 31 characters.
.TP
.B \fBdiscard\fP: \fBBlockdevDiscardOptions\fP (optional)
discard\-related options (default: ignore)
.TP
.B \fBcache\fP: \fBBlockdevCacheOptions\fP (optional)
cache\-related options
.TP
.B \fBread\-only\fP: \fBboolean\fP (optional)
whether the block device should be read\-only (default: false).
Note that some block drivers support only read\-only access,
either generally or in certain configurations. In this case,
the default value does not work and the option must be
specified explicitly.
.TP
.B \fBauto\-read\-only\fP: \fBboolean\fP (optional)
if true and \fBread\-only\fP is false, QEMU may automatically
decide not to open the image read\-write as requested, but
fall back to read\-only instead (and switch between the modes
later), e.g. depending on whether the image file is writable
or whether a writing user is attached to the node
(default: false, since 3.1)
.TP
.B \fBdetect\-zeroes\fP: \fBBlockdevDetectZeroesOptions\fP (optional)
detect and optimize zero writes (Since 2.1)
(default: off)
.TP
.B \fBforce\-share\fP: \fBboolean\fP (optional)
force share all permission on added nodes.
Requires read\-only=true. (Since 2.10)
.TP
.B The members of \fBBlockdevOptionsBlkdebug\fP when \fBdriver\fP is \fB"blkdebug"\fP
.TP
.B The members of \fBBlockdevOptionsBlklogwrites\fP when \fBdriver\fP is \fB"blklogwrites"\fP
.TP
.B The members of \fBBlockdevOptionsBlkverify\fP when \fBdriver\fP is \fB"blkverify"\fP
.TP
.B The members of \fBBlockdevOptionsBlkreplay\fP when \fBdriver\fP is \fB"blkreplay"\fP
.TP
.B The members of \fBBlockdevOptionsGenericFormat\fP when \fBdriver\fP is \fB"bochs"\fP
.TP
.B The members of \fBBlockdevOptionsGenericFormat\fP when \fBdriver\fP is \fB"cloop"\fP
.TP
.B The members of \fBBlockdevOptionsGenericFormat\fP when \fBdriver\fP is \fB"compress"\fP
.TP
.B The members of \fBBlockdevOptionsCbw\fP when \fBdriver\fP is \fB"copy\-before\-write"\fP
.TP
.B The members of \fBBlockdevOptionsCor\fP when \fBdriver\fP is \fB"copy\-on\-read"\fP
.TP
.B The members of \fBBlockdevOptionsGenericFormat\fP when \fBdriver\fP is \fB"dmg"\fP
.TP
.B The members of \fBBlockdevOptionsFile\fP when \fBdriver\fP is \fB"file"\fP
.TP
.B The members of \fBBlockdevOptionsCurlFtp\fP when \fBdriver\fP is \fB"ftp"\fP
.TP
.B The members of \fBBlockdevOptionsCurlFtps\fP when \fBdriver\fP is \fB"ftps"\fP
.TP
.B The members of \fBBlockdevOptionsGluster\fP when \fBdriver\fP is \fB"gluster"\fP
.TP
The members of \fBBlockdevOptionsFile\fP when \fBdriver\fP is \fB"host_cdrom"\fP (\fBIf: \fP\fBHAVE_HOST_BLOCK_DEVICE\fP)
.TP
The members of \fBBlockdevOptionsFile\fP when \fBdriver\fP is \fB"host_device"\fP (\fBIf: \fP\fBHAVE_HOST_BLOCK_DEVICE\fP)
.TP
.B The members of \fBBlockdevOptionsCurlHttp\fP when \fBdriver\fP is \fB"http"\fP
.TP
.B The members of \fBBlockdevOptionsCurlHttps\fP when \fBdriver\fP is \fB"https"\fP
.TP
The members of \fBBlockdevOptionsIoUring\fP when \fBdriver\fP is \fB"io_uring"\fP (\fBIf: \fP\fBCONFIG_BLKIO\fP)
.TP
.B The members of \fBBlockdevOptionsIscsi\fP when \fBdriver\fP is \fB"iscsi"\fP
.TP
.B The members of \fBBlockdevOptionsLUKS\fP when \fBdriver\fP is \fB"luks"\fP
.TP
.B The members of \fBBlockdevOptionsNbd\fP when \fBdriver\fP is \fB"nbd"\fP
.TP
.B The members of \fBBlockdevOptionsNfs\fP when \fBdriver\fP is \fB"nfs"\fP
.TP
.B The members of \fBBlockdevOptionsNull\fP when \fBdriver\fP is \fB"null\-aio"\fP
.TP
.B The members of \fBBlockdevOptionsNull\fP when \fBdriver\fP is \fB"null\-co"\fP
.TP
.B The members of \fBBlockdevOptionsNVMe\fP when \fBdriver\fP is \fB"nvme"\fP
.TP
The members of \fBBlockdevOptionsNvmeIoUring\fP when \fBdriver\fP is \fB"nvme\-io_uring"\fP (\fBIf: \fP\fBCONFIG_BLKIO\fP)
.TP
.B The members of \fBBlockdevOptionsGenericFormat\fP when \fBdriver\fP is \fB"parallels"\fP
.TP
.B The members of \fBBlockdevOptionsPreallocate\fP when \fBdriver\fP is \fB"preallocate"\fP
.TP
.B The members of \fBBlockdevOptionsQcow2\fP when \fBdriver\fP is \fB"qcow2"\fP
.TP
.B The members of \fBBlockdevOptionsQcow\fP when \fBdriver\fP is \fB"qcow"\fP
.TP
.B The members of \fBBlockdevOptionsGenericCOWFormat\fP when \fBdriver\fP is \fB"qed"\fP
.TP
.B The members of \fBBlockdevOptionsQuorum\fP when \fBdriver\fP is \fB"quorum"\fP
.TP
.B The members of \fBBlockdevOptionsRaw\fP when \fBdriver\fP is \fB"raw"\fP
.TP
.B The members of \fBBlockdevOptionsRbd\fP when \fBdriver\fP is \fB"rbd"\fP
.TP
The members of \fBBlockdevOptionsReplication\fP when \fBdriver\fP is \fB"replication"\fP (\fBIf: \fP\fBCONFIG_REPLICATION\fP)
.TP
.B The members of \fBBlockdevOptionsGenericFormat\fP when \fBdriver\fP is \fB"snapshot\-access"\fP
.TP
.B The members of \fBBlockdevOptionsSsh\fP when \fBdriver\fP is \fB"ssh"\fP
.TP
.B The members of \fBBlockdevOptionsThrottle\fP when \fBdriver\fP is \fB"throttle"\fP
.TP
.B The members of \fBBlockdevOptionsGenericFormat\fP when \fBdriver\fP is \fB"vdi"\fP
.TP
.B The members of \fBBlockdevOptionsGenericFormat\fP when \fBdriver\fP is \fB"vhdx"\fP
.TP
The members of \fBBlockdevOptionsVirtioBlkVfioPci\fP when \fBdriver\fP is \fB"virtio\-blk\-vfio\-pci"\fP (\fBIf: \fP\fBCONFIG_BLKIO\fP)
.TP
The members of \fBBlockdevOptionsVirtioBlkVhostUser\fP when \fBdriver\fP is \fB"virtio\-blk\-vhost\-user"\fP (\fBIf: \fP\fBCONFIG_BLKIO\fP)
.TP
The members of \fBBlockdevOptionsVirtioBlkVhostVdpa\fP when \fBdriver\fP is \fB"virtio\-blk\-vhost\-vdpa"\fP (\fBIf: \fP\fBCONFIG_BLKIO\fP)
.TP
.B The members of \fBBlockdevOptionsGenericCOWFormat\fP when \fBdriver\fP is \fB"vmdk"\fP
.TP
.B The members of \fBBlockdevOptionsGenericFormat\fP when \fBdriver\fP is \fB"vpc"\fP
.TP
.B The members of \fBBlockdevOptionsVVFAT\fP when \fBdriver\fP is \fB"vvfat"\fP
.UNINDENT
Remaining options are determined by the block driver.
.SS Since
.sp
2.9
.SS \fBBlockdevRef\fP (Alternate)
.sp
Reference to a block device.
.SS Members
.INDENT 0.0
.TP
.B \fBdefinition\fP: \fBBlockdevOptions\fP
defines a new block device inline
.TP
.B \fBreference\fP: \fBstring\fP
references the ID of an existing block device
.UNINDENT
.SS Since
.sp
2.9
.SS \fBBlockdevRefOrNull\fP (Alternate)
.sp
Reference to a block device.
.SS Members
.INDENT 0.0
.TP
.B \fBdefinition\fP: \fBBlockdevOptions\fP
defines a new block device inline
.TP
.B \fBreference\fP: \fBstring\fP
references the ID of an existing block device.
An empty string means that no block device should
be referenced.  Deprecated; use null instead.
.TP
.B \fBnull\fP: \fBnull\fP
No block device should be referenced (since 2.10)
.UNINDENT
.SS Since
.sp
2.9
.SS \fBblockdev\-add\fP (Command)
.sp
Creates a new block device.
.SS Arguments
.INDENT 0.0
.TP
.B The members of \fBBlockdevOptions\fP
.UNINDENT
.SS Since
.sp
2.9
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
1.
\-> { "execute": "blockdev\-add",
     "arguments": {
          "driver": "qcow2",
          "node\-name": "test1",
          "file": {
              "driver": "file",
              "filename": "test.qcow2"
           }
      }
    }
<\- { "return": {} }

2.
\-> { "execute": "blockdev\-add",
     "arguments": {
          "driver": "qcow2",
          "node\-name": "node0",
          "discard": "unmap",
          "cache": {
             "direct": true
           },
           "file": {
             "driver": "file",
             "filename": "/tmp/test.qcow2"
           },
           "backing": {
              "driver": "raw",
              "file": {
                 "driver": "file",
                 "filename": "/dev/fdset/4"
               }
           }
       }
     }

<\- { "return": {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBblockdev\-reopen\fP (Command)
.sp
Reopens one or more block devices using the given set of options.
Any option not specified will be reset to its default value regardless
of its previous status. If an option cannot be changed or a particular
driver does not support reopening then the command will return an
error. All devices in the list are reopened in one transaction, so
if one of them fails then the whole transaction is cancelled.
.sp
The command receives a list of block devices to reopen. For each one
of them, the top\-level \fBnode\-name\fP option (from BlockdevOptions) must be
specified and is used to select the block device to be reopened.
Other \fBnode\-name\fP options must be either omitted or set to the
current name of the appropriate node. This command won\(aqt change any
node name and any attempt to do it will result in an error.
.sp
In the case of options that refer to child nodes, the behavior of
this command depends on the value:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP 1. 3
A set of options (BlockdevOptions): the child is reopened with
the specified set of options.
.IP 2. 3
A reference to the current child: the child is reopened using
its existing set of options.
.IP 3. 3
A reference to a different node: the current child is replaced
with the specified one.
.IP 4. 3
NULL: the current child (if any) is detached.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Options (1) and (2) are supported in all cases. Option (3) is
supported for \fBfile\fP and \fBbacking\fP, and option (4) for \fBbacking\fP only.
.sp
Unlike with blockdev\-add, the \fBbacking\fP option must always be present
unless the node being reopened does not have a backing file and its
image does not have a default backing file name as part of its
metadata.
.SS Arguments
.INDENT 0.0
.TP
.B \fBoptions\fP: \fBarray of BlockdevOptions\fP
Not documented
.UNINDENT
.SS Since
.sp
6.1
.SS \fBblockdev\-del\fP (Command)
.sp
Deletes a block device that has been added using blockdev\-add.
The command will fail if the node is attached to a device or is
otherwise being used.
.SS Arguments
.INDENT 0.0
.TP
.B \fBnode\-name\fP: \fBstring\fP
Name of the graph node to delete.
.UNINDENT
.SS Since
.sp
2.9
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { "execute": "blockdev\-add",
     "arguments": {
          "driver": "qcow2",
          "node\-name": "node0",
          "file": {
              "driver": "file",
              "filename": "test.qcow2"
          }
     }
   }
<\- { "return": {} }

\-> { "execute": "blockdev\-del",
     "arguments": { "node\-name": "node0" }
   }
<\- { "return": {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBBlockdevCreateOptionsFile\fP (Object)
.sp
Driver specific image creation options for file.
.SS Members
.INDENT 0.0
.TP
.B \fBfilename\fP: \fBstring\fP
Filename for the new image file
.TP
.B \fBsize\fP: \fBint\fP
Size of the virtual disk in bytes
.TP
.B \fBpreallocation\fP: \fBPreallocMode\fP (optional)
Preallocation mode for the new image (default: off;
allowed values: off,
falloc (if CONFIG_POSIX_FALLOCATE),
full (if CONFIG_POSIX))
.TP
.B \fBnocow\fP: \fBboolean\fP (optional)
Turn off copy\-on\-write (valid only on btrfs; default: off)
.TP
.B \fBextent\-size\-hint\fP: \fBint\fP (optional)
Extent size hint to add to the image file; 0 for not
adding an extent size hint (default: 1 MB, since 5.1)
.UNINDENT
.SS Since
.sp
2.12
.SS \fBBlockdevCreateOptionsGluster\fP (Object)
.sp
Driver specific image creation options for gluster.
.SS Members
.INDENT 0.0
.TP
.B \fBlocation\fP: \fBBlockdevOptionsGluster\fP
Where to store the new image file
.TP
.B \fBsize\fP: \fBint\fP
Size of the virtual disk in bytes
.TP
.B \fBpreallocation\fP: \fBPreallocMode\fP (optional)
Preallocation mode for the new image (default: off;
allowed values: off,
falloc (if CONFIG_GLUSTERFS_FALLOCATE),
full (if CONFIG_GLUSTERFS_ZEROFILL))
.UNINDENT
.SS Since
.sp
2.12
.SS \fBBlockdevCreateOptionsLUKS\fP (Object)
.sp
Driver specific image creation options for LUKS.
.SS Members
.INDENT 0.0
.TP
.B \fBfile\fP: \fBBlockdevRef\fP
Node to create the image format on
.TP
.B \fBsize\fP: \fBint\fP
Size of the virtual disk in bytes
.TP
.B \fBpreallocation\fP: \fBPreallocMode\fP (optional)
Preallocation mode for the new image
(since: 4.2)
(default: off; allowed values: off, metadata, falloc, full)
.TP
.B The members of \fBQCryptoBlockCreateOptionsLUKS\fP
.UNINDENT
.SS Since
.sp
2.12
.SS \fBBlockdevCreateOptionsNfs\fP (Object)
.sp
Driver specific image creation options for NFS.
.SS Members
.INDENT 0.0
.TP
.B \fBlocation\fP: \fBBlockdevOptionsNfs\fP
Where to store the new image file
.TP
.B \fBsize\fP: \fBint\fP
Size of the virtual disk in bytes
.UNINDENT
.SS Since
.sp
2.12
.SS \fBBlockdevCreateOptionsParallels\fP (Object)
.sp
Driver specific image creation options for parallels.
.SS Members
.INDENT 0.0
.TP
.B \fBfile\fP: \fBBlockdevRef\fP
Node to create the image format on
.TP
.B \fBsize\fP: \fBint\fP
Size of the virtual disk in bytes
.TP
.B \fBcluster\-size\fP: \fBint\fP (optional)
Cluster size in bytes (default: 1 MB)
.UNINDENT
.SS Since
.sp
2.12
.SS \fBBlockdevCreateOptionsQcow\fP (Object)
.sp
Driver specific image creation options for qcow.
.SS Members
.INDENT 0.0
.TP
.B \fBfile\fP: \fBBlockdevRef\fP
Node to create the image format on
.TP
.B \fBsize\fP: \fBint\fP
Size of the virtual disk in bytes
.TP
.B \fBbacking\-file\fP: \fBstring\fP (optional)
File name of the backing file if a backing file
should be used
.TP
.B \fBencrypt\fP: \fBQCryptoBlockCreateOptions\fP (optional)
Encryption options if the image should be encrypted
.UNINDENT
.SS Since
.sp
2.12
.SS \fBBlockdevQcow2Version\fP (Enum)
.SS Values
.INDENT 0.0
.TP
.B \fBv2\fP
The original QCOW2 format as introduced in qemu 0.10 (version 2)
.TP
.B \fBv3\fP
The extended QCOW2 format as introduced in qemu 1.1 (version 3)
.UNINDENT
.SS Since
.sp
2.12
.SS \fBQcow2CompressionType\fP (Enum)
.sp
Compression type used in qcow2 image file
.SS Values
.INDENT 0.0
.TP
.B \fBzlib\fP
zlib compression, see <\fI\%http://zlib.net/\fP>
.TP
\fBzstd\fP (\fBIf: \fP\fBCONFIG_ZSTD\fP)
zstd compression, see <\fI\%http://github.com/facebook/zstd\fP>
.UNINDENT
.SS Since
.sp
5.1
.SS \fBBlockdevCreateOptionsQcow2\fP (Object)
.sp
Driver specific image creation options for qcow2.
.SS Members
.INDENT 0.0
.TP
.B \fBfile\fP: \fBBlockdevRef\fP
Node to create the image format on
.TP
.B \fBdata\-file\fP: \fBBlockdevRef\fP (optional)
Node to use as an external data file in which all guest
data is stored so that only metadata remains in the qcow2
file (since: 4.0)
.TP
.B \fBdata\-file\-raw\fP: \fBboolean\fP (optional)
True if the external data file must stay valid as a
standalone (read\-only) raw image without looking at qcow2
metadata (default: false; since: 4.0)
.TP
.B \fBextended\-l2\fP: \fBboolean\fP (optional)
True to make the image have extended L2 entries
(default: false; since 5.2)
.TP
.B \fBsize\fP: \fBint\fP
Size of the virtual disk in bytes
.TP
.B \fBversion\fP: \fBBlockdevQcow2Version\fP (optional)
Compatibility level (default: v3)
.TP
.B \fBbacking\-file\fP: \fBstring\fP (optional)
File name of the backing file if a backing file
should be used
.TP
.B \fBbacking\-fmt\fP: \fBBlockdevDriver\fP (optional)
Name of the block driver to use for the backing file
.TP
.B \fBencrypt\fP: \fBQCryptoBlockCreateOptions\fP (optional)
Encryption options if the image should be encrypted
.TP
.B \fBcluster\-size\fP: \fBint\fP (optional)
qcow2 cluster size in bytes (default: 65536)
.TP
.B \fBpreallocation\fP: \fBPreallocMode\fP (optional)
Preallocation mode for the new image (default: off;
allowed values: off, falloc, full, metadata)
.TP
.B \fBlazy\-refcounts\fP: \fBboolean\fP (optional)
True if refcounts may be updated lazily (default: off)
.TP
.B \fBrefcount\-bits\fP: \fBint\fP (optional)
Width of reference counts in bits (default: 16)
.TP
.B \fBcompression\-type\fP: \fBQcow2CompressionType\fP (optional)
The image cluster compression method
(default: zlib, since 5.1)
.UNINDENT
.SS Since
.sp
2.12
.SS \fBBlockdevCreateOptionsQed\fP (Object)
.sp
Driver specific image creation options for qed.
.SS Members
.INDENT 0.0
.TP
.B \fBfile\fP: \fBBlockdevRef\fP
Node to create the image format on
.TP
.B \fBsize\fP: \fBint\fP
Size of the virtual disk in bytes
.TP
.B \fBbacking\-file\fP: \fBstring\fP (optional)
File name of the backing file if a backing file
should be used
.TP
.B \fBbacking\-fmt\fP: \fBBlockdevDriver\fP (optional)
Name of the block driver to use for the backing file
.TP
.B \fBcluster\-size\fP: \fBint\fP (optional)
Cluster size in bytes (default: 65536)
.TP
.B \fBtable\-size\fP: \fBint\fP (optional)
L1/L2 table size (in clusters)
.UNINDENT
.SS Since
.sp
2.12
.SS \fBBlockdevCreateOptionsRbd\fP (Object)
.sp
Driver specific image creation options for rbd/Ceph.
.SS Members
.INDENT 0.0
.TP
.B \fBlocation\fP: \fBBlockdevOptionsRbd\fP
Where to store the new image file. This location cannot
point to a snapshot.
.TP
.B \fBsize\fP: \fBint\fP
Size of the virtual disk in bytes
.TP
.B \fBcluster\-size\fP: \fBint\fP (optional)
RBD object size
.TP
.B \fBencrypt\fP: \fBRbdEncryptionCreateOptions\fP (optional)
Image encryption options. (Since 6.1)
.UNINDENT
.SS Since
.sp
2.12
.SS \fBBlockdevVmdkSubformat\fP (Enum)
.sp
Subformat options for VMDK images
.SS Values
.INDENT 0.0
.TP
.B \fBmonolithicSparse\fP
Single file image with sparse cluster allocation
.TP
.B \fBmonolithicFlat\fP
Single flat data image and a descriptor file
.TP
.B \fBtwoGbMaxExtentSparse\fP
Data is split into 2GB (per virtual LBA) sparse extent
files, in addition to a descriptor file
.TP
.B \fBtwoGbMaxExtentFlat\fP
Data is split into 2GB (per virtual LBA) flat extent
files, in addition to a descriptor file
.TP
.B \fBstreamOptimized\fP
Single file image sparse cluster allocation, optimized
for streaming over network.
.UNINDENT
.SS Since
.sp
4.0
.SS \fBBlockdevVmdkAdapterType\fP (Enum)
.sp
Adapter type info for VMDK images
.SS Values
.INDENT 0.0
.TP
.B \fBide\fP
Not documented
.TP
.B \fBbuslogic\fP
Not documented
.TP
.B \fBlsilogic\fP
Not documented
.TP
.B \fBlegacyESX\fP
Not documented
.UNINDENT
.SS Since
.sp
4.0
.SS \fBBlockdevCreateOptionsVmdk\fP (Object)
.sp
Driver specific image creation options for VMDK.
.SS Members
.INDENT 0.0
.TP
.B \fBfile\fP: \fBBlockdevRef\fP
Where to store the new image file. This refers to the image
file for monolithcSparse and streamOptimized format, or the
descriptor file for other formats.
.TP
.B \fBsize\fP: \fBint\fP
Size of the virtual disk in bytes
.TP
.B \fBextents\fP: \fBarray of BlockdevRef\fP (optional)
Where to store the data extents. Required for monolithcFlat,
twoGbMaxExtentSparse and twoGbMaxExtentFlat formats. For
monolithicFlat, only one entry is required; for
twoGbMaxExtent* formats, the number of entries required is
calculated as extent_number = virtual_size / 2GB. Providing
more extents than will be used is an error.
.TP
.B \fBsubformat\fP: \fBBlockdevVmdkSubformat\fP (optional)
The subformat of the VMDK image. Default: "monolithicSparse".
.TP
.B \fBbacking\-file\fP: \fBstring\fP (optional)
The path of backing file. Default: no backing file is used.
.TP
.B \fBadapter\-type\fP: \fBBlockdevVmdkAdapterType\fP (optional)
The adapter type used to fill in the descriptor. Default: ide.
.TP
.B \fBhwversion\fP: \fBstring\fP (optional)
Hardware version. The meaningful options are "4" or "6".
Default: "4".
.TP
.B \fBtoolsversion\fP: \fBstring\fP (optional)
VMware guest tools version.
Default: "2147483647" (Since 6.2)
.TP
.B \fBzeroed\-grain\fP: \fBboolean\fP (optional)
Whether to enable zeroed\-grain feature for sparse subformats.
Default: false.
.UNINDENT
.SS Since
.sp
4.0
.SS \fBBlockdevCreateOptionsSsh\fP (Object)
.sp
Driver specific image creation options for SSH.
.SS Members
.INDENT 0.0
.TP
.B \fBlocation\fP: \fBBlockdevOptionsSsh\fP
Where to store the new image file
.TP
.B \fBsize\fP: \fBint\fP
Size of the virtual disk in bytes
.UNINDENT
.SS Since
.sp
2.12
.SS \fBBlockdevCreateOptionsVdi\fP (Object)
.sp
Driver specific image creation options for VDI.
.SS Members
.INDENT 0.0
.TP
.B \fBfile\fP: \fBBlockdevRef\fP
Node to create the image format on
.TP
.B \fBsize\fP: \fBint\fP
Size of the virtual disk in bytes
.TP
.B \fBpreallocation\fP: \fBPreallocMode\fP (optional)
Preallocation mode for the new image (default: off;
allowed values: off, metadata)
.UNINDENT
.SS Since
.sp
2.12
.SS \fBBlockdevVhdxSubformat\fP (Enum)
.SS Values
.INDENT 0.0
.TP
.B \fBdynamic\fP
Growing image file
.TP
.B \fBfixed\fP
Preallocated fixed\-size image file
.UNINDENT
.SS Since
.sp
2.12
.SS \fBBlockdevCreateOptionsVhdx\fP (Object)
.sp
Driver specific image creation options for vhdx.
.SS Members
.INDENT 0.0
.TP
.B \fBfile\fP: \fBBlockdevRef\fP
Node to create the image format on
.TP
.B \fBsize\fP: \fBint\fP
Size of the virtual disk in bytes
.TP
.B \fBlog\-size\fP: \fBint\fP (optional)
Log size in bytes, must be a multiple of 1 MB
(default: 1 MB)
.TP
.B \fBblock\-size\fP: \fBint\fP (optional)
Block size in bytes, must be a multiple of 1 MB and not
larger than 256 MB (default: automatically choose a block
size depending on the image size)
.TP
.B \fBsubformat\fP: \fBBlockdevVhdxSubformat\fP (optional)
vhdx subformat (default: dynamic)
.TP
.B \fBblock\-state\-zero\fP: \fBboolean\fP (optional)
Force use of payload blocks of type \(aqZERO\(aq. Non\-standard,
but default.  Do not set to \(aqoff\(aq when using \(aqqemu\-img
convert\(aq with subformat=dynamic.
.UNINDENT
.SS Since
.sp
2.12
.SS \fBBlockdevVpcSubformat\fP (Enum)
.SS Values
.INDENT 0.0
.TP
.B \fBdynamic\fP
Growing image file
.TP
.B \fBfixed\fP
Preallocated fixed\-size image file
.UNINDENT
.SS Since
.sp
2.12
.SS \fBBlockdevCreateOptionsVpc\fP (Object)
.sp
Driver specific image creation options for vpc (VHD).
.SS Members
.INDENT 0.0
.TP
.B \fBfile\fP: \fBBlockdevRef\fP
Node to create the image format on
.TP
.B \fBsize\fP: \fBint\fP
Size of the virtual disk in bytes
.TP
.B \fBsubformat\fP: \fBBlockdevVpcSubformat\fP (optional)
vhdx subformat (default: dynamic)
.TP
.B \fBforce\-size\fP: \fBboolean\fP (optional)
Force use of the exact byte size instead of rounding to the
next size that can be represented in CHS geometry
(default: false)
.UNINDENT
.SS Since
.sp
2.12
.SS \fBBlockdevCreateOptions\fP (Object)
.sp
Options for creating an image format on a given node.
.SS Members
.INDENT 0.0
.TP
.B \fBdriver\fP: \fBBlockdevDriver\fP
block driver to create the image format
.TP
.B The members of \fBBlockdevCreateOptionsFile\fP when \fBdriver\fP is \fB"file"\fP
.TP
.B The members of \fBBlockdevCreateOptionsGluster\fP when \fBdriver\fP is \fB"gluster"\fP
.TP
.B The members of \fBBlockdevCreateOptionsLUKS\fP when \fBdriver\fP is \fB"luks"\fP
.TP
.B The members of \fBBlockdevCreateOptionsNfs\fP when \fBdriver\fP is \fB"nfs"\fP
.TP
.B The members of \fBBlockdevCreateOptionsParallels\fP when \fBdriver\fP is \fB"parallels"\fP
.TP
.B The members of \fBBlockdevCreateOptionsQcow\fP when \fBdriver\fP is \fB"qcow"\fP
.TP
.B The members of \fBBlockdevCreateOptionsQcow2\fP when \fBdriver\fP is \fB"qcow2"\fP
.TP
.B The members of \fBBlockdevCreateOptionsQed\fP when \fBdriver\fP is \fB"qed"\fP
.TP
.B The members of \fBBlockdevCreateOptionsRbd\fP when \fBdriver\fP is \fB"rbd"\fP
.TP
.B The members of \fBBlockdevCreateOptionsSsh\fP when \fBdriver\fP is \fB"ssh"\fP
.TP
.B The members of \fBBlockdevCreateOptionsVdi\fP when \fBdriver\fP is \fB"vdi"\fP
.TP
.B The members of \fBBlockdevCreateOptionsVhdx\fP when \fBdriver\fP is \fB"vhdx"\fP
.TP
.B The members of \fBBlockdevCreateOptionsVmdk\fP when \fBdriver\fP is \fB"vmdk"\fP
.TP
.B The members of \fBBlockdevCreateOptionsVpc\fP when \fBdriver\fP is \fB"vpc"\fP
.UNINDENT
.SS Since
.sp
2.12
.SS \fBblockdev\-create\fP (Command)
.sp
Starts a job to create an image format on a given node. The job is
automatically finalized, but a manual job\-dismiss is required.
.SS Arguments
.INDENT 0.0
.TP
.B \fBjob\-id\fP: \fBstring\fP
Identifier for the newly created job.
.TP
.B \fBoptions\fP: \fBBlockdevCreateOptions\fP
Options for the image creation.
.UNINDENT
.SS Since
.sp
3.0
.SS \fBBlockdevAmendOptionsLUKS\fP (Object)
.sp
Driver specific image amend options for LUKS.
.SS Members
.INDENT 0.0
.TP
.B The members of \fBQCryptoBlockAmendOptionsLUKS\fP
.UNINDENT
.SS Since
.sp
5.1
.SS \fBBlockdevAmendOptionsQcow2\fP (Object)
.sp
Driver specific image amend options for qcow2.
For now, only encryption options can be amended
.sp
\fBencrypt\fP          Encryption options to be amended
.SS Members
.INDENT 0.0
.TP
.B \fBencrypt\fP: \fBQCryptoBlockAmendOptions\fP (optional)
Not documented
.UNINDENT
.SS Since
.sp
5.1
.SS \fBBlockdevAmendOptions\fP (Object)
.sp
Options for amending an image format
.SS Members
.INDENT 0.0
.TP
.B \fBdriver\fP: \fBBlockdevDriver\fP
Block driver of the node to amend.
.TP
.B The members of \fBBlockdevAmendOptionsLUKS\fP when \fBdriver\fP is \fB"luks"\fP
.TP
.B The members of \fBBlockdevAmendOptionsQcow2\fP when \fBdriver\fP is \fB"qcow2"\fP
.UNINDENT
.SS Since
.sp
5.1
.SS \fBx\-blockdev\-amend\fP (Command)
.sp
Starts a job to amend format specific options of an existing open block device
The job is automatically finalized, but a manual job\-dismiss is required.
.SS Arguments
.INDENT 0.0
.TP
.B \fBjob\-id\fP: \fBstring\fP
Identifier for the newly created job.
.TP
.B \fBnode\-name\fP: \fBstring\fP
Name of the block node to work on
.TP
.B \fBoptions\fP: \fBBlockdevAmendOptions\fP
Options (driver specific)
.TP
.B \fBforce\fP: \fBboolean\fP (optional)
Allow unsafe operations, format specific
For luks that allows erase of the last active keyslot
(permanent loss of data),
and replacement of an active keyslot
(possible loss of data if IO error happens)
.UNINDENT
.SS Features
.INDENT 0.0
.TP
.B \fBunstable\fP
This command is experimental.
.UNINDENT
.SS Since
.sp
5.1
.SS \fBBlockErrorAction\fP (Enum)
.sp
An enumeration of action that has been taken when a DISK I/O occurs
.SS Values
.INDENT 0.0
.TP
.B \fBignore\fP
error has been ignored
.TP
.B \fBreport\fP
error has been reported to the device
.TP
.B \fBstop\fP
error caused VM to be stopped
.UNINDENT
.SS Since
.sp
2.1
.SS \fBBLOCK_IMAGE_CORRUPTED\fP (Event)
.sp
Emitted when a disk image is being marked corrupt. The image can be
identified by its device or node name. The \(aqdevice\(aq field is always
present for compatibility reasons, but it can be empty ("") if the
image does not have a device name associated.
.SS Arguments
.INDENT 0.0
.TP
.B \fBdevice\fP: \fBstring\fP
device name. This is always present for compatibility
reasons, but it can be empty ("") if the image does not
have a device name associated.
.TP
.B \fBnode\-name\fP: \fBstring\fP (optional)
node name (Since: 2.4)
.TP
.B \fBmsg\fP: \fBstring\fP
informative message for human consumption, such as the kind of
corruption being detected. It should not be parsed by machine as it is
not guaranteed to be stable
.TP
.B \fBoffset\fP: \fBint\fP (optional)
if the corruption resulted from an image access, this is
the host\(aqs access offset into the image
.TP
.B \fBsize\fP: \fBint\fP (optional)
if the corruption resulted from an image access, this is
the access size
.TP
.B \fBfatal\fP: \fBboolean\fP
if set, the image is marked corrupt and therefore unusable after this
event and must be repaired (Since 2.2; before, every
BLOCK_IMAGE_CORRUPTED event was fatal)
.UNINDENT
.SS Note
.sp
If action is "stop", a STOP event will eventually follow the
BLOCK_IO_ERROR event.
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { "event": "BLOCK_IMAGE_CORRUPTED",
     "data": { "device": "", "node\-name": "drive", "fatal": false,
               "msg": "L2 table offset 0x2a2a2a00 unaligned (L1 index: 0)" },
     "timestamp": { "seconds": 1648243240, "microseconds": 906060 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Since
.sp
1.7
.SS \fBBLOCK_IO_ERROR\fP (Event)
.sp
Emitted when a disk I/O error occurs
.SS Arguments
.INDENT 0.0
.TP
.B \fBdevice\fP: \fBstring\fP
device name. This is always present for compatibility
reasons, but it can be empty ("") if the image does not
have a device name associated.
.TP
.B \fBnode\-name\fP: \fBstring\fP (optional)
node name. Note that errors may be reported for the root node
that is directly attached to a guest device rather than for the
node where the error occurred. The node name is not present if
the drive is empty. (Since: 2.8)
.TP
.B \fBoperation\fP: \fBIoOperationType\fP
I/O operation
.TP
.B \fBaction\fP: \fBBlockErrorAction\fP
action that has been taken
.TP
.B \fBnospace\fP: \fBboolean\fP (optional)
true if I/O error was caused due to a no\-space
condition. This key is only present if query\-block\(aqs
io\-status is present, please see query\-block documentation
for more information (since: 2.2)
.TP
.B \fBreason\fP: \fBstring\fP
human readable string describing the error cause.
(This field is a debugging aid for humans, it should not
be parsed by applications) (since: 2.2)
.UNINDENT
.SS Note
.sp
If action is "stop", a STOP event will eventually follow the
BLOCK_IO_ERROR event
.SS Since
.sp
0.13
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { "event": "BLOCK_IO_ERROR",
     "data": { "device": "ide0\-hd1",
               "node\-name": "#block212",
               "operation": "write",
               "action": "stop",
               "reason": "No space left on device" },
     "timestamp": { "seconds": 1265044230, "microseconds": 450486 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBBLOCK_JOB_COMPLETED\fP (Event)
.sp
Emitted when a block job has completed
.SS Arguments
.INDENT 0.0
.TP
.B \fBtype\fP: \fBJobType\fP
job type
.TP
.B \fBdevice\fP: \fBstring\fP
The job identifier. Originally the device name but other
values are allowed since QEMU 2.7
.TP
.B \fBlen\fP: \fBint\fP
maximum progress value
.TP
.B \fBoffset\fP: \fBint\fP
current progress value. On success this is equal to len.
On failure this is less than len
.TP
.B \fBspeed\fP: \fBint\fP
rate limit, bytes per second
.TP
.B \fBerror\fP: \fBstring\fP (optional)
error message. Only present on failure. This field
contains a human\-readable error message. There are no semantics
other than that streaming has failed and clients should not try to
interpret the error string
.UNINDENT
.SS Since
.sp
1.1
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { "event": "BLOCK_JOB_COMPLETED",
     "data": { "type": "stream", "device": "virtio\-disk0",
               "len": 10737418240, "offset": 10737418240,
               "speed": 0 },
     "timestamp": { "seconds": 1267061043, "microseconds": 959568 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBBLOCK_JOB_CANCELLED\fP (Event)
.sp
Emitted when a block job has been cancelled
.SS Arguments
.INDENT 0.0
.TP
.B \fBtype\fP: \fBJobType\fP
job type
.TP
.B \fBdevice\fP: \fBstring\fP
The job identifier. Originally the device name but other
values are allowed since QEMU 2.7
.TP
.B \fBlen\fP: \fBint\fP
maximum progress value
.TP
.B \fBoffset\fP: \fBint\fP
current progress value. On success this is equal to len.
On failure this is less than len
.TP
.B \fBspeed\fP: \fBint\fP
rate limit, bytes per second
.UNINDENT
.SS Since
.sp
1.1
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { "event": "BLOCK_JOB_CANCELLED",
     "data": { "type": "stream", "device": "virtio\-disk0",
               "len": 10737418240, "offset": 134217728,
               "speed": 0 },
     "timestamp": { "seconds": 1267061043, "microseconds": 959568 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBBLOCK_JOB_ERROR\fP (Event)
.sp
Emitted when a block job encounters an error
.SS Arguments
.INDENT 0.0
.TP
.B \fBdevice\fP: \fBstring\fP
The job identifier. Originally the device name but other
values are allowed since QEMU 2.7
.TP
.B \fBoperation\fP: \fBIoOperationType\fP
I/O operation
.TP
.B \fBaction\fP: \fBBlockErrorAction\fP
action that has been taken
.UNINDENT
.SS Since
.sp
1.3
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { "event": "BLOCK_JOB_ERROR",
     "data": { "device": "ide0\-hd1",
               "operation": "write",
               "action": "stop" },
     "timestamp": { "seconds": 1265044230, "microseconds": 450486 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBBLOCK_JOB_READY\fP (Event)
.sp
Emitted when a block job is ready to complete
.SS Arguments
.INDENT 0.0
.TP
.B \fBtype\fP: \fBJobType\fP
job type
.TP
.B \fBdevice\fP: \fBstring\fP
The job identifier. Originally the device name but other
values are allowed since QEMU 2.7
.TP
.B \fBlen\fP: \fBint\fP
maximum progress value
.TP
.B \fBoffset\fP: \fBint\fP
current progress value. On success this is equal to len.
On failure this is less than len
.TP
.B \fBspeed\fP: \fBint\fP
rate limit, bytes per second
.UNINDENT
.SS Note
.sp
The "ready to complete" status is always reset by a \fBBLOCK_JOB_ERROR\fP
event
.SS Since
.sp
1.3
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { "event": "BLOCK_JOB_READY",
     "data": { "device": "drive0", "type": "mirror", "speed": 0,
               "len": 2097152, "offset": 2097152 },
     "timestamp": { "seconds": 1265044230, "microseconds": 450486 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBBLOCK_JOB_PENDING\fP (Event)
.sp
Emitted when a block job is awaiting explicit authorization to finalize graph
changes via \fBblock\-job\-finalize\fP\&. If this job is part of a transaction, it will
not emit this event until the transaction has converged first.
.SS Arguments
.INDENT 0.0
.TP
.B \fBtype\fP: \fBJobType\fP
job type
.TP
.B \fBid\fP: \fBstring\fP
The job identifier.
.UNINDENT
.SS Since
.sp
2.12
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { "event": "BLOCK_JOB_PENDING",
     "data": { "type": "mirror", "id": "backup_1" },
     "timestamp": { "seconds": 1265044230, "microseconds": 450486 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBPreallocMode\fP (Enum)
.sp
Preallocation mode of QEMU image file
.SS Values
.INDENT 0.0
.TP
.B \fBoff\fP
no preallocation
.TP
.B \fBmetadata\fP
preallocate only for metadata
.TP
.B \fBfalloc\fP
like \fBfull\fP preallocation but allocate disk space by
posix_fallocate() rather than writing data.
.TP
.B \fBfull\fP
preallocate all data by writing it to the device to ensure
disk space is really available. This data may or may not be
zero, depending on the image format and storage.
\fBfull\fP preallocation also sets up metadata correctly.
.UNINDENT
.SS Since
.sp
2.2
.SS \fBBLOCK_WRITE_THRESHOLD\fP (Event)
.sp
Emitted when writes on block device reaches or exceeds the
configured write threshold. For thin\-provisioned devices, this
means the device should be extended to avoid pausing for
disk exhaustion.
The event is one shot. Once triggered, it needs to be
re\-registered with another block\-set\-write\-threshold command.
.SS Arguments
.INDENT 0.0
.TP
.B \fBnode\-name\fP: \fBstring\fP
graph node name on which the threshold was exceeded.
.TP
.B \fBamount\-exceeded\fP: \fBint\fP
amount of data which exceeded the threshold, in bytes.
.TP
.B \fBwrite\-threshold\fP: \fBint\fP
last configured threshold, in bytes.
.UNINDENT
.SS Since
.sp
2.3
.SS \fBblock\-set\-write\-threshold\fP (Command)
.sp
Change the write threshold for a block drive. An event will be
delivered if a write to this block drive crosses the configured
threshold.  The threshold is an offset, thus must be
non\-negative. Default is no write threshold. Setting the threshold
to zero disables it.
.sp
This is useful to transparently resize thin\-provisioned drives without
the guest OS noticing.
.SS Arguments
.INDENT 0.0
.TP
.B \fBnode\-name\fP: \fBstring\fP
graph node name on which the threshold must be set.
.TP
.B \fBwrite\-threshold\fP: \fBint\fP
configured threshold for the block device, bytes.
Use 0 to disable the threshold.
.UNINDENT
.SS Since
.sp
2.3
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { "execute": "block\-set\-write\-threshold",
     "arguments": { "node\-name": "mydev",
                    "write\-threshold": 17179869184 } }
<\- { "return": {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBx\-blockdev\-change\fP (Command)
.sp
Dynamically reconfigure the block driver state graph. It can be used
to add, remove, insert or replace a graph node. Currently only the
Quorum driver implements this feature to add or remove its child. This
is useful to fix a broken quorum child.
.sp
If \fBnode\fP is specified, it will be inserted under \fBparent\fP\&. \fBchild\fP
may not be specified in this case. If both \fBparent\fP and \fBchild\fP are
specified but \fBnode\fP is not, \fBchild\fP will be detached from \fBparent\fP\&.
.SS Arguments
.INDENT 0.0
.TP
.B \fBparent\fP: \fBstring\fP
the id or name of the parent node.
.TP
.B \fBchild\fP: \fBstring\fP (optional)
the name of a child under the given parent node.
.TP
.B \fBnode\fP: \fBstring\fP (optional)
the name of the node that will be added.
.UNINDENT
.SS Features
.INDENT 0.0
.TP
.B \fBunstable\fP
This command is experimental, and its API is not stable.  It
does not support all kinds of operations, all kinds of
children, nor all block drivers.
.sp
FIXME Removing children from a quorum node means introducing
gaps in the child indices. This cannot be represented in the
\(aqchildren\(aq list of BlockdevOptionsQuorum, as returned by
\&.bdrv_refresh_filename().
.sp
Warning: The data in a new quorum child MUST be consistent
with that of the rest of the array.
.UNINDENT
.SS Since
.sp
2.7
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
1. Add a new node to a quorum
\-> { "execute": "blockdev\-add",
     "arguments": {
         "driver": "raw",
         "node\-name": "new_node",
         "file": { "driver": "file",
                   "filename": "test.raw" } } }
<\- { "return": {} }
\-> { "execute": "x\-blockdev\-change",
     "arguments": { "parent": "disk1",
                    "node": "new_node" } }
<\- { "return": {} }

2. Delete a quorum\(aqs node
\-> { "execute": "x\-blockdev\-change",
     "arguments": { "parent": "disk1",
                    "child": "children.1" } }
<\- { "return": {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBx\-blockdev\-set\-iothread\fP (Command)
.sp
Move \fBnode\fP and its children into the \fBiothread\fP\&.  If \fBiothread\fP is null then
move \fBnode\fP and its children into the main loop.
.sp
The node must not be attached to a BlockBackend.
.SS Arguments
.INDENT 0.0
.TP
.B \fBnode\-name\fP: \fBstring\fP
the name of the block driver node
.TP
.B \fBiothread\fP: \fBStrOrNull\fP
the name of the IOThread object or null for the main loop
.TP
.B \fBforce\fP: \fBboolean\fP (optional)
true if the node and its children should be moved when a BlockBackend
is already attached
.UNINDENT
.SS Features
.INDENT 0.0
.TP
.B \fBunstable\fP
This command is experimental and intended for test cases that
need control over IOThreads only.
.UNINDENT
.SS Since
.sp
2.12
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
1. Move a node into an IOThread
\-> { "execute": "x\-blockdev\-set\-iothread",
     "arguments": { "node\-name": "disk1",
                    "iothread": "iothread0" } }
<\- { "return": {} }

2. Move a node into the main loop
\-> { "execute": "x\-blockdev\-set\-iothread",
     "arguments": { "node\-name": "disk1",
                    "iothread": null } }
<\- { "return": {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBQuorumOpType\fP (Enum)
.sp
An enumeration of the quorum operation types
.SS Values
.INDENT 0.0
.TP
.B \fBread\fP
read operation
.TP
.B \fBwrite\fP
write operation
.TP
.B \fBflush\fP
flush operation
.UNINDENT
.SS Since
.sp
2.6
.SS \fBQUORUM_FAILURE\fP (Event)
.sp
Emitted by the Quorum block driver if it fails to establish a quorum
.SS Arguments
.INDENT 0.0
.TP
.B \fBreference\fP: \fBstring\fP
device name if defined else node name
.TP
.B \fBsector\-num\fP: \fBint\fP
number of the first sector of the failed read operation
.TP
.B \fBsectors\-count\fP: \fBint\fP
failed read operation sector count
.UNINDENT
.SS Note
.sp
This event is rate\-limited.
.SS Since
.sp
2.0
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { "event": "QUORUM_FAILURE",
     "data": { "reference": "usr1", "sector\-num": 345435, "sectors\-count": 5 },
     "timestamp": { "seconds": 1344522075, "microseconds": 745528 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBQUORUM_REPORT_BAD\fP (Event)
.sp
Emitted to report a corruption of a Quorum file
.SS Arguments
.INDENT 0.0
.TP
.B \fBtype\fP: \fBQuorumOpType\fP
quorum operation type (Since 2.6)
.TP
.B \fBerror\fP: \fBstring\fP (optional)
error message. Only present on failure. This field
contains a human\-readable error message. There are no semantics other
than that the block layer reported an error and clients should not
try to interpret the error string.
.TP
.B \fBnode\-name\fP: \fBstring\fP
the graph node name of the block driver state
.TP
.B \fBsector\-num\fP: \fBint\fP
number of the first sector of the failed read operation
.TP
.B \fBsectors\-count\fP: \fBint\fP
failed read operation sector count
.UNINDENT
.SS Note
.sp
This event is rate\-limited.
.SS Since
.sp
2.0
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
1. Read operation

{ "event": "QUORUM_REPORT_BAD",
     "data": { "node\-name": "node0", "sector\-num": 345435, "sectors\-count": 5,
               "type": "read" },
     "timestamp": { "seconds": 1344522075, "microseconds": 745528 } }

2. Flush operation

{ "event": "QUORUM_REPORT_BAD",
     "data": { "node\-name": "node0", "sector\-num": 0, "sectors\-count": 2097120,
               "type": "flush", "error": "Broken pipe" },
     "timestamp": { "seconds": 1456406829, "microseconds": 291763 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBBlockdevSnapshotInternal\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBdevice\fP: \fBstring\fP
the device name or node\-name of a root node to generate the snapshot
from
.TP
.B \fBname\fP: \fBstring\fP
the name of the internal snapshot to be created
.UNINDENT
.SS Notes
.sp
In transaction, if \fBname\fP is empty, or any snapshot matching \fBname\fP
exists, the operation will fail. Only some image formats support it,
for example, qcow2, and rbd.
.SS Since
.sp
1.7
.SS \fBblockdev\-snapshot\-internal\-sync\fP (Command)
.sp
Synchronously take an internal snapshot of a block device, when the
format of the image used supports it. If the name is an empty
string, or a snapshot with name already exists, the operation will
fail.
.sp
For the arguments, see the documentation of BlockdevSnapshotInternal.
.SS Returns
.INDENT 0.0
.IP \(bu 2
nothing on success
.IP \(bu 2
If \fBdevice\fP is not a valid block device, GenericError
.IP \(bu 2
If any snapshot matching \fBname\fP exists, or \fBname\fP is empty,
GenericError
.IP \(bu 2
If the format of the image used does not support it,
BlockFormatFeatureNotSupported
.UNINDENT
.SS Since
.sp
1.7
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { "execute": "blockdev\-snapshot\-internal\-sync",
     "arguments": { "device": "ide\-hd0",
                    "name": "snapshot0" }
   }
<\- { "return": {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBblockdev\-snapshot\-delete\-internal\-sync\fP (Command)
.sp
Synchronously delete an internal snapshot of a block device, when the format
of the image used support it. The snapshot is identified by name or id or
both. One of the name or id is required. Return SnapshotInfo for the
successfully deleted snapshot.
.SS Arguments
.INDENT 0.0
.TP
.B \fBdevice\fP: \fBstring\fP
the device name or node\-name of a root node to delete the snapshot
from
.TP
.B \fBid\fP: \fBstring\fP (optional)
optional the snapshot\(aqs ID to be deleted
.TP
.B \fBname\fP: \fBstring\fP (optional)
optional the snapshot\(aqs name to be deleted
.UNINDENT
.SS Returns
.INDENT 0.0
.IP \(bu 2
SnapshotInfo on success
.IP \(bu 2
If \fBdevice\fP is not a valid block device, GenericError
.IP \(bu 2
If snapshot not found, GenericError
.IP \(bu 2
If the format of the image used does not support it,
BlockFormatFeatureNotSupported
.IP \(bu 2
If \fBid\fP and \fBname\fP are both not specified, GenericError
.UNINDENT
.SS Since
.sp
1.7
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { "execute": "blockdev\-snapshot\-delete\-internal\-sync",
     "arguments": { "device": "ide\-hd0",
                    "name": "snapshot0" }
   }
<\- { "return": {
                   "id": "1",
                   "name": "snapshot0",
                   "vm\-state\-size": 0,
                   "date\-sec": 1000012,
                   "date\-nsec": 10,
                   "vm\-clock\-sec": 100,
                   "vm\-clock\-nsec": 20,
                   "icount": 220414
     }
   }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Block device exports
.SS \fBNbdServerOptions\fP (Object)
.sp
Keep this type consistent with the nbd\-server\-start arguments. The only
intended difference is using SocketAddress instead of SocketAddressLegacy.
.SS Members
.INDENT 0.0
.TP
.B \fBaddr\fP: \fBSocketAddress\fP
Address on which to listen.
.TP
.B \fBtls\-creds\fP: \fBstring\fP (optional)
ID of the TLS credentials object (since 2.6).
.TP
.B \fBtls\-authz\fP: \fBstring\fP (optional)
ID of the QAuthZ authorization object used to validate
the client\(aqs x509 distinguished name. This object is
is only resolved at time of use, so can be deleted and
recreated on the fly while the NBD server is active.
If missing, it will default to denying access (since 4.0).
.TP
.B \fBmax\-connections\fP: \fBint\fP (optional)
The maximum number of connections to allow at the same
time, 0 for unlimited. Setting this to 1 also stops
the server from advertising multiple client support
(since 5.2; default: 0)
.UNINDENT
.SS Since
.sp
4.2
.SS \fBnbd\-server\-start\fP (Command)
.sp
Start an NBD server listening on the given host and port.  Block
devices can then be exported using \fBnbd\-server\-add\fP\&.  The NBD
server will present them as named exports; for example, another
QEMU instance could refer to them as "nbd:HOST:PORT:exportname=NAME".
.sp
Keep this type consistent with the NbdServerOptions type. The only intended
difference is using SocketAddressLegacy instead of SocketAddress.
.SS Arguments
.INDENT 0.0
.TP
.B \fBaddr\fP: \fBSocketAddressLegacy\fP
Address on which to listen.
.TP
.B \fBtls\-creds\fP: \fBstring\fP (optional)
ID of the TLS credentials object (since 2.6).
.TP
.B \fBtls\-authz\fP: \fBstring\fP (optional)
ID of the QAuthZ authorization object used to validate
the client\(aqs x509 distinguished name. This object is
is only resolved at time of use, so can be deleted and
recreated on the fly while the NBD server is active.
If missing, it will default to denying access (since 4.0).
.TP
.B \fBmax\-connections\fP: \fBint\fP (optional)
The maximum number of connections to allow at the same
time, 0 for unlimited. Setting this to 1 also stops
the server from advertising multiple client support
(since 5.2; default: 0).
.UNINDENT
.SS Returns
.sp
error if the server is already running.
.SS Since
.sp
1.3
.SS \fBBlockExportOptionsNbdBase\fP (Object)
.sp
An NBD block export (common options shared between nbd\-server\-add and
the NBD branch of block\-export\-add).
.SS Members
.INDENT 0.0
.TP
.B \fBname\fP: \fBstring\fP (optional)
Export name. If unspecified, the \fBdevice\fP parameter is used as the
export name. (Since 2.12)
.TP
.B \fBdescription\fP: \fBstring\fP (optional)
Free\-form description of the export, up to 4096 bytes.
(Since 5.0)
.UNINDENT
.SS Since
.sp
5.0
.SS \fBBlockExportOptionsNbd\fP (Object)
.sp
An NBD block export (distinct options used in the NBD branch of
block\-export\-add).
.SS Members
.INDENT 0.0
.TP
.B \fBbitmaps\fP: \fBarray of BlockDirtyBitmapOrStr\fP (optional)
Also export each of the named dirty bitmaps reachable from
\fBdevice\fP, so the NBD client can use NBD_OPT_SET_META_CONTEXT with
the metadata context name "qemu:dirty\-bitmap:BITMAP" to inspect
each bitmap.
Since 7.1 bitmap may be specified by node/name pair.
.TP
.B \fBallocation\-depth\fP: \fBboolean\fP (optional)
Also export the allocation depth map for \fBdevice\fP, so
the NBD client can use NBD_OPT_SET_META_CONTEXT with
the metadata context name "qemu:allocation\-depth" to
inspect allocation details. (since 5.2)
.TP
.B The members of \fBBlockExportOptionsNbdBase\fP
.UNINDENT
.SS Since
.sp
5.2
.SS \fBBlockExportOptionsVhostUserBlk\fP (Object)
.sp
A vhost\-user\-blk block export.
.SS Members
.INDENT 0.0
.TP
.B \fBaddr\fP: \fBSocketAddress\fP
The vhost\-user socket on which to listen. Both \(aqunix\(aq and \(aqfd\(aq
SocketAddress types are supported. Passed fds must be UNIX domain
sockets.
.TP
.B \fBlogical\-block\-size\fP: \fBint\fP (optional)
Logical block size in bytes. Defaults to 512 bytes.
.TP
.B \fBnum\-queues\fP: \fBint\fP (optional)
Number of request virtqueues. Must be greater than 0. Defaults
to 1.
.UNINDENT
.SS Since
.sp
5.2
.SS \fBFuseExportAllowOther\fP (Enum)
.sp
Possible allow_other modes for FUSE exports.
.SS Values
.INDENT 0.0
.TP
.B \fBoff\fP
Do not pass allow_other as a mount option.
.TP
.B \fBon\fP
Pass allow_other as a mount option.
.TP
.B \fBauto\fP
Try mounting with allow_other first, and if that fails, retry
without allow_other.
.UNINDENT
.SS Since
.sp
6.1
.SS \fBBlockExportOptionsFuse\fP (Object)
.sp
Options for exporting a block graph node on some (file) mountpoint
as a raw image.
.SS Members
.INDENT 0.0
.TP
.B \fBmountpoint\fP: \fBstring\fP
Path on which to export the block device via FUSE.
This must point to an existing regular file.
.TP
.B \fBgrowable\fP: \fBboolean\fP (optional)
Whether writes beyond the EOF should grow the block node
accordingly. (default: false)
.TP
.B \fBallow\-other\fP: \fBFuseExportAllowOther\fP (optional)
If this is off, only qemu\(aqs user is allowed access to
this export.  That cannot be changed even with chmod or
chown.
Enabling this option will allow other users access to
the export with the FUSE mount option "allow_other".
Note that using allow_other as a non\-root user requires
user_allow_other to be enabled in the global fuse.conf
configuration file.
In auto mode (the default), the FUSE export driver will
first attempt to mount the export with allow_other, and
if that fails, try again without.
(since 6.1; default: auto)
.UNINDENT
.SS Since
.sp
6.0
.SS If
.sp
\fBCONFIG_FUSE\fP
.SS \fBBlockExportOptionsVduseBlk\fP (Object)
.sp
A vduse\-blk block export.
.SS Members
.INDENT 0.0
.TP
.B \fBname\fP: \fBstring\fP
the name of VDUSE device (must be unique across the host).
.TP
.B \fBnum\-queues\fP: \fBint\fP (optional)
the number of virtqueues. Defaults to 1.
.TP
.B \fBqueue\-size\fP: \fBint\fP (optional)
the size of virtqueue. Defaults to 256.
.TP
.B \fBlogical\-block\-size\fP: \fBint\fP (optional)
Logical block size in bytes. Range [512, PAGE_SIZE]
and must be power of 2. Defaults to 512 bytes.
.TP
.B \fBserial\fP: \fBstring\fP (optional)
the serial number of virtio block device. Defaults to empty string.
.UNINDENT
.SS Since
.sp
7.1
.SS \fBNbdServerAddOptions\fP (Object)
.sp
An NBD block export, per legacy nbd\-server\-add command.
.SS Members
.INDENT 0.0
.TP
.B \fBdevice\fP: \fBstring\fP
The device name or node name of the node to be exported
.TP
.B \fBwritable\fP: \fBboolean\fP (optional)
Whether clients should be able to write to the device via the
NBD connection (default false).
.TP
.B \fBbitmap\fP: \fBstring\fP (optional)
Also export a single dirty bitmap reachable from \fBdevice\fP, so the
NBD client can use NBD_OPT_SET_META_CONTEXT with the metadata
context name "qemu:dirty\-bitmap:BITMAP" to inspect the bitmap
(since 4.0).
.TP
.B The members of \fBBlockExportOptionsNbdBase\fP
.UNINDENT
.SS Since
.sp
5.0
.SS \fBnbd\-server\-add\fP (Command)
.sp
Export a block node to QEMU\(aqs embedded NBD server.
.sp
The export name will be used as the id for the resulting block export.
.SS Arguments
.INDENT 0.0
.TP
.B The members of \fBNbdServerAddOptions\fP
.UNINDENT
.SS Features
.INDENT 0.0
.TP
.B \fBdeprecated\fP
This command is deprecated. Use \fBblock\-export\-add\fP instead.
.UNINDENT
.SS Returns
.sp
error if the server is not running, or export with the same name
already exists.
.SS Since
.sp
1.3
.SS \fBBlockExportRemoveMode\fP (Enum)
.sp
Mode for removing a block export.
.SS Values
.INDENT 0.0
.TP
.B \fBsafe\fP
Remove export if there are no existing connections, fail otherwise.
.TP
.B \fBhard\fP
Drop all connections immediately and remove export.
.UNINDENT
.SS TODO
.sp
Potential additional modes to be added in the future:
.sp
hide: Just hide export from new clients, leave existing connections as is.
Remove export after all clients are disconnected.
.sp
soft: Hide export from new clients, answer with ESHUTDOWN for all further
requests from existing clients.
.SS Since
.sp
2.12
.SS \fBnbd\-server\-remove\fP (Command)
.sp
Remove NBD export by name.
.SS Arguments
.INDENT 0.0
.TP
.B \fBname\fP: \fBstring\fP
Block export id.
.TP
.B \fBmode\fP: \fBBlockExportRemoveMode\fP (optional)
Mode of command operation. See \fBBlockExportRemoveMode\fP description.
Default is \(aqsafe\(aq.
.UNINDENT
.SS Features
.INDENT 0.0
.TP
.B \fBdeprecated\fP
This command is deprecated. Use \fBblock\-export\-del\fP instead.
.UNINDENT
.SS Returns
.INDENT 0.0
.TP
.B error if
.INDENT 7.0
.IP \(bu 2
the server is not running
.IP \(bu 2
export is not found
.IP \(bu 2
mode is \(aqsafe\(aq and there are existing connections
.UNINDENT
.UNINDENT
.SS Since
.sp
2.12
.SS \fBnbd\-server\-stop\fP (Command)
.sp
Stop QEMU\(aqs embedded NBD server, and unregister all devices previously
added via \fBnbd\-server\-add\fP\&.
.SS Since
.sp
1.3
.SS \fBBlockExportType\fP (Enum)
.sp
An enumeration of block export types
.SS Values
.INDENT 0.0
.TP
.B \fBnbd\fP
NBD export
.TP
\fBvhost\-user\-blk\fP (\fBIf: \fP\fBCONFIG_VHOST_USER_BLK_SERVER\fP)
vhost\-user\-blk export (since 5.2)
.TP
\fBfuse\fP (\fBIf: \fP\fBCONFIG_FUSE\fP)
FUSE export (since: 6.0)
.TP
\fBvduse\-blk\fP (\fBIf: \fP\fBCONFIG_VDUSE_BLK_EXPORT\fP)
vduse\-blk export (since 7.1)
.UNINDENT
.SS Since
.sp
4.2
.SS \fBBlockExportOptions\fP (Object)
.sp
Describes a block export, i.e. how single node should be exported on an
external interface.
.SS Members
.INDENT 0.0
.TP
.B \fBid\fP: \fBstring\fP
A unique identifier for the block export (across all export types)
.TP
.B \fBnode\-name\fP: \fBstring\fP
The node name of the block node to be exported (since: 5.2)
.TP
.B \fBwritable\fP: \fBboolean\fP (optional)
True if clients should be able to write to the export
(default false)
.TP
.B \fBwritethrough\fP: \fBboolean\fP (optional)
If true, caches are flushed after every write request to the
export before completion is signalled. (since: 5.2;
default: false)
.TP
.B \fBiothread\fP: \fBstring\fP (optional)
The name of the iothread object where the export will run. The
default is to use the thread currently associated with the
block node. (since: 5.2)
.TP
.B \fBfixed\-iothread\fP: \fBboolean\fP (optional)
True prevents the block node from being moved to another
thread while the export is active. If true and \fBiothread\fP is
given, export creation fails if the block node cannot be
moved to the iothread. The default is false. (since: 5.2)
.TP
.B \fBtype\fP: \fBBlockExportType\fP
Not documented
.TP
.B The members of \fBBlockExportOptionsNbd\fP when \fBtype\fP is \fB"nbd"\fP
.TP
The members of \fBBlockExportOptionsVhostUserBlk\fP when \fBtype\fP is \fB"vhost\-user\-blk"\fP (\fBIf: \fP\fBCONFIG_VHOST_USER_BLK_SERVER\fP)
.TP
The members of \fBBlockExportOptionsFuse\fP when \fBtype\fP is \fB"fuse"\fP (\fBIf: \fP\fBCONFIG_FUSE\fP)
.TP
The members of \fBBlockExportOptionsVduseBlk\fP when \fBtype\fP is \fB"vduse\-blk"\fP (\fBIf: \fP\fBCONFIG_VDUSE_BLK_EXPORT\fP)
.UNINDENT
.SS Since
.sp
4.2
.SS \fBblock\-export\-add\fP (Command)
.sp
Creates a new block export.
.SS Arguments
.INDENT 0.0
.TP
.B The members of \fBBlockExportOptions\fP
.UNINDENT
.SS Since
.sp
5.2
.SS \fBblock\-export\-del\fP (Command)
.sp
Request to remove a block export. This drops the user\(aqs reference to the
export, but the export may still stay around after this command returns until
the shutdown of the export has completed.
.SS Arguments
.INDENT 0.0
.TP
.B \fBid\fP: \fBstring\fP
Block export id.
.TP
.B \fBmode\fP: \fBBlockExportRemoveMode\fP (optional)
Mode of command operation. See \fBBlockExportRemoveMode\fP description.
Default is \(aqsafe\(aq.
.UNINDENT
.SS Returns
.sp
Error if the export is not found or \fBmode\fP is \(aqsafe\(aq and the export
is still in use (e.g. by existing client connections)
.SS Since
.sp
5.2
.SS \fBBLOCK_EXPORT_DELETED\fP (Event)
.sp
Emitted when a block export is removed and its id can be reused.
.SS Arguments
.INDENT 0.0
.TP
.B \fBid\fP: \fBstring\fP
Block export id.
.UNINDENT
.SS Since
.sp
5.2
.SS \fBBlockExportInfo\fP (Object)
.sp
Information about a single block export.
.SS Members
.INDENT 0.0
.TP
.B \fBid\fP: \fBstring\fP
The unique identifier for the block export
.TP
.B \fBtype\fP: \fBBlockExportType\fP
The block export type
.TP
.B \fBnode\-name\fP: \fBstring\fP
The node name of the block node that is exported
.TP
.B \fBshutting\-down\fP: \fBboolean\fP
True if the export is shutting down (e.g. after a
block\-export\-del command, but before the shutdown has
completed)
.UNINDENT
.SS Since
.sp
5.2
.SS \fBquery\-block\-exports\fP (Command)
.SS Returns
.sp
A list of BlockExportInfo describing all block exports
.SS Since
.sp
5.2
.SH CHARACTER DEVICES
.SS \fBChardevInfo\fP (Object)
.sp
Information about a character device.
.SS Members
.INDENT 0.0
.TP
.B \fBlabel\fP: \fBstring\fP
the label of the character device
.TP
.B \fBfilename\fP: \fBstring\fP
the filename of the character device
.TP
.B \fBfrontend\-open\fP: \fBboolean\fP
shows whether the frontend device attached to this backend
(eg. with the chardev=... option) is in open or closed state
(since 2.1)
.UNINDENT
.SS Notes
.sp
\fBfilename\fP is encoded using the QEMU command line character device
encoding.  See the QEMU man page for details.
.SS Since
.sp
0.14
.SS \fBquery\-chardev\fP (Command)
.sp
Returns information about current character devices.
.SS Returns
.sp
a list of \fBChardevInfo\fP
.SS Since
.sp
0.14
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { "execute": "query\-chardev" }
<\- {
      "return": [
         {
            "label": "charchannel0",
            "filename": "unix:/var/lib/libvirt/qemu/seabios.rhel6.agent,server=on",
            "frontend\-open": false
         },
         {
            "label": "charmonitor",
            "filename": "unix:/var/lib/libvirt/qemu/seabios.rhel6.monitor,server=on",
            "frontend\-open": true
         },
         {
            "label": "charserial0",
            "filename": "pty:/dev/pts/2",
            "frontend\-open": true
         }
      ]
   }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBChardevBackendInfo\fP (Object)
.sp
Information about a character device backend
.SS Members
.INDENT 0.0
.TP
.B \fBname\fP: \fBstring\fP
The backend name
.UNINDENT
.SS Since
.sp
2.0
.SS \fBquery\-chardev\-backends\fP (Command)
.sp
Returns information about character device backends.
.SS Returns
.sp
a list of \fBChardevBackendInfo\fP
.SS Since
.sp
2.0
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { "execute": "query\-chardev\-backends" }
<\- {
      "return":[
         {
            "name":"udp"
         },
         {
            "name":"tcp"
         },
         {
            "name":"unix"
         },
         {
            "name":"spiceport"
         }
      ]
   }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBDataFormat\fP (Enum)
.sp
An enumeration of data format.
.SS Values
.INDENT 0.0
.TP
.B \fButf8\fP
Data is a UTF\-8 string (RFC 3629)
.TP
.B \fBbase64\fP
Data is Base64 encoded binary (RFC 3548)
.UNINDENT
.SS Since
.sp
1.4
.SS \fBringbuf\-write\fP (Command)
.sp
Write to a ring buffer character device.
.SS Arguments
.INDENT 0.0
.TP
.B \fBdevice\fP: \fBstring\fP
the ring buffer character device name
.TP
.B \fBdata\fP: \fBstring\fP
data to write
.TP
.B \fBformat\fP: \fBDataFormat\fP (optional)
data encoding (default \(aqutf8\(aq).
.INDENT 7.0
.IP \(bu 2
base64: data must be base64 encoded text.  Its binary
decoding gets written.
.IP \(bu 2
utf8: data\(aqs UTF\-8 encoding is written
.IP \(bu 2
data itself is always Unicode regardless of format, like
any other string.
.UNINDENT
.UNINDENT
.SS Returns
.sp
Nothing on success
.SS Since
.sp
1.4
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { "execute": "ringbuf\-write",
     "arguments": { "device": "foo",
                    "data": "abcdefgh",
                    "format": "utf8" } }
<\- { "return": {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBringbuf\-read\fP (Command)
.sp
Read from a ring buffer character device.
.SS Arguments
.INDENT 0.0
.TP
.B \fBdevice\fP: \fBstring\fP
the ring buffer character device name
.TP
.B \fBsize\fP: \fBint\fP
how many bytes to read at most
.TP
.B \fBformat\fP: \fBDataFormat\fP (optional)
data encoding (default \(aqutf8\(aq).
.INDENT 7.0
.IP \(bu 2
base64: the data read is returned in base64 encoding.
.IP \(bu 2
utf8: the data read is interpreted as UTF\-8.
Bug: can screw up when the buffer contains invalid UTF\-8
sequences, NUL characters, after the ring buffer lost
data, and when reading stops because the size limit is
reached.
.IP \(bu 2
The return value is always Unicode regardless of format,
like any other string.
.UNINDENT
.UNINDENT
.SS Returns
.sp
data read from the device
.SS Since
.sp
1.4
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { "execute": "ringbuf\-read",
     "arguments": { "device": "foo",
                    "size": 1000,
                    "format": "utf8" } }
<\- { "return": "abcdefgh" }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBChardevCommon\fP (Object)
.sp
Configuration shared across all chardev backends
.SS Members
.INDENT 0.0
.TP
.B \fBlogfile\fP: \fBstring\fP (optional)
The name of a logfile to save output
.TP
.B \fBlogappend\fP: \fBboolean\fP (optional)
true to append instead of truncate
(default to false to truncate)
.UNINDENT
.SS Since
.sp
2.6
.SS \fBChardevFile\fP (Object)
.sp
Configuration info for file chardevs.
.SS Members
.INDENT 0.0
.TP
.B \fBin\fP: \fBstring\fP (optional)
The name of the input file
.TP
.B \fBout\fP: \fBstring\fP
The name of the output file
.TP
.B \fBappend\fP: \fBboolean\fP (optional)
Open the file in append mode (default false to
truncate) (Since 2.6)
.TP
.B The members of \fBChardevCommon\fP
.UNINDENT
.SS Since
.sp
1.4
.SS \fBChardevHostdev\fP (Object)
.sp
Configuration info for device and pipe chardevs.
.SS Members
.INDENT 0.0
.TP
.B \fBdevice\fP: \fBstring\fP
The name of the special file for the device,
i.e. /dev/ttyS0 on Unix or COM1: on Windows
.TP
.B The members of \fBChardevCommon\fP
.UNINDENT
.SS Since
.sp
1.4
.SS \fBChardevSocket\fP (Object)
.sp
Configuration info for (stream) socket chardevs.
.SS Members
.INDENT 0.0
.TP
.B \fBaddr\fP: \fBSocketAddressLegacy\fP
socket address to listen on (server=true)
or connect to (server=false)
.TP
.B \fBtls\-creds\fP: \fBstring\fP (optional)
the ID of the TLS credentials object (since 2.6)
.TP
.B \fBtls\-authz\fP: \fBstring\fP (optional)
the ID of the QAuthZ authorization object against which
the client\(aqs x509 distinguished name will be validated. This
object is only resolved at time of use, so can be deleted
and recreated on the fly while the chardev server is active.
If missing, it will default to denying access (since 4.0)
.TP
.B \fBserver\fP: \fBboolean\fP (optional)
create server socket (default: true)
.TP
.B \fBwait\fP: \fBboolean\fP (optional)
wait for incoming connection on server
sockets (default: false).
Silently ignored with server: false.  This use is deprecated.
.TP
.B \fBnodelay\fP: \fBboolean\fP (optional)
set TCP_NODELAY socket option (default: false)
.TP
.B \fBtelnet\fP: \fBboolean\fP (optional)
enable telnet protocol on server
sockets (default: false)
.TP
.B \fBtn3270\fP: \fBboolean\fP (optional)
enable tn3270 protocol on server
sockets (default: false) (Since: 2.10)
.TP
.B \fBwebsocket\fP: \fBboolean\fP (optional)
enable websocket protocol on server
sockets (default: false) (Since: 3.1)
.TP
.B \fBreconnect\fP: \fBint\fP (optional)
For a client socket, if a socket is disconnected,
then attempt a reconnect after the given number of seconds.
Setting this to zero disables this function. (default: 0)
(Since: 2.2)
.TP
.B The members of \fBChardevCommon\fP
.UNINDENT
.SS Since
.sp
1.4
.SS \fBChardevUdp\fP (Object)
.sp
Configuration info for datagram socket chardevs.
.SS Members
.INDENT 0.0
.TP
.B \fBremote\fP: \fBSocketAddressLegacy\fP
remote address
.TP
.B \fBlocal\fP: \fBSocketAddressLegacy\fP (optional)
local address
.TP
.B The members of \fBChardevCommon\fP
.UNINDENT
.SS Since
.sp
1.5
.SS \fBChardevMux\fP (Object)
.sp
Configuration info for mux chardevs.
.SS Members
.INDENT 0.0
.TP
.B \fBchardev\fP: \fBstring\fP
name of the base chardev.
.TP
.B The members of \fBChardevCommon\fP
.UNINDENT
.SS Since
.sp
1.5
.SS \fBChardevStdio\fP (Object)
.sp
Configuration info for stdio chardevs.
.SS Members
.INDENT 0.0
.TP
.B \fBsignal\fP: \fBboolean\fP (optional)
Allow signals (such as SIGINT triggered by ^C)
be delivered to qemu.  Default: true.
.TP
.B The members of \fBChardevCommon\fP
.UNINDENT
.SS Since
.sp
1.5
.SS \fBChardevSpiceChannel\fP (Object)
.sp
Configuration info for spice vm channel chardevs.
.SS Members
.INDENT 0.0
.TP
.B \fBtype\fP: \fBstring\fP
kind of channel (for example vdagent).
.TP
.B The members of \fBChardevCommon\fP
.UNINDENT
.SS Since
.sp
1.5
.SS If
.sp
\fBCONFIG_SPICE\fP
.SS \fBChardevSpicePort\fP (Object)
.sp
Configuration info for spice port chardevs.
.SS Members
.INDENT 0.0
.TP
.B \fBfqdn\fP: \fBstring\fP
name of the channel (see docs/spice\-port\-fqdn.txt)
.TP
.B The members of \fBChardevCommon\fP
.UNINDENT
.SS Since
.sp
1.5
.SS If
.sp
\fBCONFIG_SPICE\fP
.SS \fBChardevDBus\fP (Object)
.sp
Configuration info for DBus chardevs.
.SS Members
.INDENT 0.0
.TP
.B \fBname\fP: \fBstring\fP
name of the channel (following docs/spice\-port\-fqdn.txt)
.TP
.B The members of \fBChardevCommon\fP
.UNINDENT
.SS Since
.sp
7.0
.SS If
.sp
\fBCONFIG_DBUS_DISPLAY\fP
.SS \fBChardevVC\fP (Object)
.sp
Configuration info for virtual console chardevs.
.SS Members
.INDENT 0.0
.TP
.B \fBwidth\fP: \fBint\fP (optional)
console width, in pixels
.TP
.B \fBheight\fP: \fBint\fP (optional)
console height, in pixels
.TP
.B \fBcols\fP: \fBint\fP (optional)
console width, in chars
.TP
.B \fBrows\fP: \fBint\fP (optional)
console height, in chars
.TP
.B The members of \fBChardevCommon\fP
.UNINDENT
.SS Since
.sp
1.5
.SS \fBChardevRingbuf\fP (Object)
.sp
Configuration info for ring buffer chardevs.
.SS Members
.INDENT 0.0
.TP
.B \fBsize\fP: \fBint\fP (optional)
ring buffer size, must be power of two, default is 65536
.TP
.B The members of \fBChardevCommon\fP
.UNINDENT
.SS Since
.sp
1.5
.SS \fBChardevQemuVDAgent\fP (Object)
.sp
Configuration info for qemu vdagent implementation.
.SS Members
.INDENT 0.0
.TP
.B \fBmouse\fP: \fBboolean\fP (optional)
enable/disable mouse, default is enabled.
.TP
.B \fBclipboard\fP: \fBboolean\fP (optional)
enable/disable clipboard, default is disabled.
.TP
.B The members of \fBChardevCommon\fP
.UNINDENT
.SS Since
.sp
6.1
.SS If
.sp
\fBCONFIG_SPICE_PROTOCOL\fP
.SS \fBChardevBackendKind\fP (Enum)
.SS Values
.INDENT 0.0
.TP
.B \fBpipe\fP
Since 1.5
.TP
.B \fBudp\fP
Since 1.5
.TP
.B \fBmux\fP
Since 1.5
.TP
.B \fBmsmouse\fP
Since 1.5
.TP
.B \fBwctablet\fP
Since 2.9
.TP
.B \fBbraille\fP
Since 1.5
.TP
.B \fBtestdev\fP
Since 2.2
.TP
.B \fBstdio\fP
Since 1.5
.TP
.B \fBconsole\fP
Since 1.5
.TP
\fBspicevmc\fP (\fBIf: \fP\fBCONFIG_SPICE\fP)
Since 1.5
.TP
\fBspiceport\fP (\fBIf: \fP\fBCONFIG_SPICE\fP)
Since 1.5
.TP
\fBqemu\-vdagent\fP (\fBIf: \fP\fBCONFIG_SPICE_PROTOCOL\fP)
Since 6.1
.TP
\fBdbus\fP (\fBIf: \fP\fBCONFIG_DBUS_DISPLAY\fP)
Since 7.0
.TP
.B \fBvc\fP
v1.5
.TP
.B \fBringbuf\fP
Since 1.6
.TP
.B \fBmemory\fP
Since 1.5
.TP
.B \fBfile\fP
Not documented
.TP
.B \fBserial\fP
Not documented
.TP
.B \fBparallel\fP
Not documented
.TP
.B \fBsocket\fP
Not documented
.TP
.B \fBpty\fP
Not documented
.TP
.B \fBnull\fP
Not documented
.UNINDENT
.SS Since
.sp
1.4
.SS \fBChardevFileWrapper\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBdata\fP: \fBChardevFile\fP
Not documented
.UNINDENT
.SS Since
.sp
1.4
.SS \fBChardevHostdevWrapper\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBdata\fP: \fBChardevHostdev\fP
Not documented
.UNINDENT
.SS Since
.sp
1.4
.SS \fBChardevSocketWrapper\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBdata\fP: \fBChardevSocket\fP
Not documented
.UNINDENT
.SS Since
.sp
1.4
.SS \fBChardevUdpWrapper\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBdata\fP: \fBChardevUdp\fP
Not documented
.UNINDENT
.SS Since
.sp
1.5
.SS \fBChardevCommonWrapper\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBdata\fP: \fBChardevCommon\fP
Not documented
.UNINDENT
.SS Since
.sp
2.6
.SS \fBChardevMuxWrapper\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBdata\fP: \fBChardevMux\fP
Not documented
.UNINDENT
.SS Since
.sp
1.5
.SS \fBChardevStdioWrapper\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBdata\fP: \fBChardevStdio\fP
Not documented
.UNINDENT
.SS Since
.sp
1.5
.SS \fBChardevSpiceChannelWrapper\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBdata\fP: \fBChardevSpiceChannel\fP
Not documented
.UNINDENT
.SS Since
.sp
1.5
.SS If
.sp
\fBCONFIG_SPICE\fP
.SS \fBChardevSpicePortWrapper\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBdata\fP: \fBChardevSpicePort\fP
Not documented
.UNINDENT
.SS Since
.sp
1.5
.SS If
.sp
\fBCONFIG_SPICE\fP
.SS \fBChardevQemuVDAgentWrapper\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBdata\fP: \fBChardevQemuVDAgent\fP
Not documented
.UNINDENT
.SS Since
.sp
6.1
.SS If
.sp
\fBCONFIG_SPICE_PROTOCOL\fP
.SS \fBChardevDBusWrapper\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBdata\fP: \fBChardevDBus\fP
Not documented
.UNINDENT
.SS Since
.sp
7.0
.SS If
.sp
\fBCONFIG_DBUS_DISPLAY\fP
.SS \fBChardevVCWrapper\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBdata\fP: \fBChardevVC\fP
Not documented
.UNINDENT
.SS Since
.sp
1.5
.SS \fBChardevRingbufWrapper\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBdata\fP: \fBChardevRingbuf\fP
Not documented
.UNINDENT
.SS Since
.sp
1.5
.SS \fBChardevBackend\fP (Object)
.sp
Configuration info for the new chardev backend.
.SS Members
.INDENT 0.0
.TP
.B \fBtype\fP: \fBChardevBackendKind\fP
Not documented
.TP
.B The members of \fBChardevFileWrapper\fP when \fBtype\fP is \fB"file"\fP
.TP
.B The members of \fBChardevHostdevWrapper\fP when \fBtype\fP is \fB"serial"\fP
.TP
.B The members of \fBChardevHostdevWrapper\fP when \fBtype\fP is \fB"parallel"\fP
.TP
.B The members of \fBChardevHostdevWrapper\fP when \fBtype\fP is \fB"pipe"\fP
.TP
.B The members of \fBChardevSocketWrapper\fP when \fBtype\fP is \fB"socket"\fP
.TP
.B The members of \fBChardevUdpWrapper\fP when \fBtype\fP is \fB"udp"\fP
.TP
.B The members of \fBChardevCommonWrapper\fP when \fBtype\fP is \fB"pty"\fP
.TP
.B The members of \fBChardevCommonWrapper\fP when \fBtype\fP is \fB"null"\fP
.TP
.B The members of \fBChardevMuxWrapper\fP when \fBtype\fP is \fB"mux"\fP
.TP
.B The members of \fBChardevCommonWrapper\fP when \fBtype\fP is \fB"msmouse"\fP
.TP
.B The members of \fBChardevCommonWrapper\fP when \fBtype\fP is \fB"wctablet"\fP
.TP
.B The members of \fBChardevCommonWrapper\fP when \fBtype\fP is \fB"braille"\fP
.TP
.B The members of \fBChardevCommonWrapper\fP when \fBtype\fP is \fB"testdev"\fP
.TP
.B The members of \fBChardevStdioWrapper\fP when \fBtype\fP is \fB"stdio"\fP
.TP
.B The members of \fBChardevCommonWrapper\fP when \fBtype\fP is \fB"console"\fP
.TP
The members of \fBChardevSpiceChannelWrapper\fP when \fBtype\fP is \fB"spicevmc"\fP (\fBIf: \fP\fBCONFIG_SPICE\fP)
.TP
The members of \fBChardevSpicePortWrapper\fP when \fBtype\fP is \fB"spiceport"\fP (\fBIf: \fP\fBCONFIG_SPICE\fP)
.TP
The members of \fBChardevQemuVDAgentWrapper\fP when \fBtype\fP is \fB"qemu\-vdagent"\fP (\fBIf: \fP\fBCONFIG_SPICE_PROTOCOL\fP)
.TP
The members of \fBChardevDBusWrapper\fP when \fBtype\fP is \fB"dbus"\fP (\fBIf: \fP\fBCONFIG_DBUS_DISPLAY\fP)
.TP
.B The members of \fBChardevVCWrapper\fP when \fBtype\fP is \fB"vc"\fP
.TP
.B The members of \fBChardevRingbufWrapper\fP when \fBtype\fP is \fB"ringbuf"\fP
.TP
.B The members of \fBChardevRingbufWrapper\fP when \fBtype\fP is \fB"memory"\fP
.UNINDENT
.SS Since
.sp
1.4
.SS \fBChardevReturn\fP (Object)
.sp
Return info about the chardev backend just created.
.SS Members
.INDENT 0.0
.TP
.B \fBpty\fP: \fBstring\fP (optional)
name of the slave pseudoterminal device, present if
and only if a chardev of type \(aqpty\(aq was created
.UNINDENT
.SS Since
.sp
1.4
.SS \fBchardev\-add\fP (Command)
.sp
Add a character device backend
.SS Arguments
.INDENT 0.0
.TP
.B \fBid\fP: \fBstring\fP
the chardev\(aqs ID, must be unique
.TP
.B \fBbackend\fP: \fBChardevBackend\fP
backend type and parameters
.UNINDENT
.SS Returns
.sp
ChardevReturn.
.SS Since
.sp
1.4
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { "execute" : "chardev\-add",
     "arguments" : { "id" : "foo",
                     "backend" : { "type" : "null", "data" : {} } } }
<\- { "return": {} }

\-> { "execute" : "chardev\-add",
     "arguments" : { "id" : "bar",
                     "backend" : { "type" : "file",
                                   "data" : { "out" : "/tmp/bar.log" } } } }
<\- { "return": {} }

\-> { "execute" : "chardev\-add",
     "arguments" : { "id" : "baz",
                     "backend" : { "type" : "pty", "data" : {} } } }
<\- { "return": { "pty" : "/dev/pty/42" } }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBchardev\-change\fP (Command)
.sp
Change a character device backend
.SS Arguments
.INDENT 0.0
.TP
.B \fBid\fP: \fBstring\fP
the chardev\(aqs ID, must exist
.TP
.B \fBbackend\fP: \fBChardevBackend\fP
new backend type and parameters
.UNINDENT
.SS Returns
.sp
ChardevReturn.
.SS Since
.sp
2.10
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { "execute" : "chardev\-change",
     "arguments" : { "id" : "baz",
                     "backend" : { "type" : "pty", "data" : {} } } }
<\- { "return": { "pty" : "/dev/pty/42" } }

\-> {"execute" : "chardev\-change",
    "arguments" : {
        "id" : "charchannel2",
        "backend" : {
            "type" : "socket",
            "data" : {
                "addr" : {
                    "type" : "unix" ,
                    "data" : {
                        "path" : "/tmp/charchannel2.socket"
                    }
                 },
                 "server" : true,
                 "wait" : false }}}}
<\- {"return": {}}
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBchardev\-remove\fP (Command)
.sp
Remove a character device backend
.SS Arguments
.INDENT 0.0
.TP
.B \fBid\fP: \fBstring\fP
the chardev\(aqs ID, must exist and not be in use
.UNINDENT
.SS Returns
.sp
Nothing on success
.SS Since
.sp
1.4
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { "execute": "chardev\-remove", "arguments": { "id" : "foo" } }
<\- { "return": {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBchardev\-send\-break\fP (Command)
.sp
Send a break to a character device
.SS Arguments
.INDENT 0.0
.TP
.B \fBid\fP: \fBstring\fP
the chardev\(aqs ID, must exist
.UNINDENT
.SS Returns
.sp
Nothing on success
.SS Since
.sp
2.10
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { "execute": "chardev\-send\-break", "arguments": { "id" : "foo" } }
<\- { "return": {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBVSERPORT_CHANGE\fP (Event)
.sp
Emitted when the guest opens or closes a virtio\-serial port.
.SS Arguments
.INDENT 0.0
.TP
.B \fBid\fP: \fBstring\fP
device identifier of the virtio\-serial port
.TP
.B \fBopen\fP: \fBboolean\fP
true if the guest has opened the virtio\-serial port
.UNINDENT
.SS Note
.sp
This event is rate\-limited.
.SS Since
.sp
2.1
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<\- { "event": "VSERPORT_CHANGE",
     "data": { "id": "channel0", "open": true },
     "timestamp": { "seconds": 1401385907, "microseconds": 422329 } }
.ft P
.fi
.UNINDENT
.UNINDENT
.SH QMP MONITOR CONTROL
.SS \fBqmp_capabilities\fP (Command)
.sp
Enable QMP capabilities.
.sp
Arguments:
.SS Arguments
.INDENT 0.0
.TP
.B \fBenable\fP: \fBarray of QMPCapability\fP (optional)
An optional list of QMPCapability values to enable.  The
client must not enable any capability that is not
mentioned in the QMP greeting message.  If the field is not
provided, it means no QMP capabilities will be enabled.
(since 2.12)
.UNINDENT
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { "execute": "qmp_capabilities",
     "arguments": { "enable": [ "oob" ] } }
<\- { "return": {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Notes
.sp
This command is valid exactly when first connecting: it must be
issued before any other command will be accepted, and will fail once the
monitor is accepting other commands. (see qemu docs/interop/qmp\-spec.txt)
.sp
The QMP client needs to explicitly enable QMP capabilities, otherwise
all the QMP capabilities will be turned off by default.
.SS Since
.sp
0.13
.SS \fBQMPCapability\fP (Enum)
.sp
Enumeration of capabilities to be advertised during initial client
connection, used for agreeing on particular QMP extension behaviors.
.SS Values
.INDENT 0.0
.TP
.B \fBoob\fP
QMP ability to support out\-of\-band requests.
(Please refer to qmp\-spec.txt for more information on OOB)
.UNINDENT
.SS Since
.sp
2.12
.SS \fBVersionTriple\fP (Object)
.sp
A three\-part version number.
.SS Members
.INDENT 0.0
.TP
.B \fBmajor\fP: \fBint\fP
The major version number.
.TP
.B \fBminor\fP: \fBint\fP
The minor version number.
.TP
.B \fBmicro\fP: \fBint\fP
The micro version number.
.UNINDENT
.SS Since
.sp
2.4
.SS \fBVersionInfo\fP (Object)
.sp
A description of QEMU\(aqs version.
.SS Members
.INDENT 0.0
.TP
.B \fBqemu\fP: \fBVersionTriple\fP
The version of QEMU.  By current convention, a micro
version of 50 signifies a development branch.  A micro version
greater than or equal to 90 signifies a release candidate for
the next minor version.  A micro version of less than 50
signifies a stable release.
.TP
.B \fBpackage\fP: \fBstring\fP
QEMU will always set this field to an empty string.  Downstream
versions of QEMU should set this to a non\-empty string.  The
exact format depends on the downstream however it highly
recommended that a unique name is used.
.UNINDENT
.SS Since
.sp
0.14
.SS \fBquery\-version\fP (Command)
.sp
Returns the current version of QEMU.
.SS Returns
.sp
A \fBVersionInfo\fP object describing the current version of QEMU.
.SS Since
.sp
0.14
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { "execute": "query\-version" }
<\- {
      "return":{
         "qemu":{
            "major":0,
            "minor":11,
            "micro":5
         },
         "package":""
      }
   }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBCommandInfo\fP (Object)
.sp
Information about a QMP command
.SS Members
.INDENT 0.0
.TP
.B \fBname\fP: \fBstring\fP
The command name
.UNINDENT
.SS Since
.sp
0.14
.SS \fBquery\-commands\fP (Command)
.sp
Return a list of supported QMP commands by this server
.SS Returns
.sp
A list of \fBCommandInfo\fP for all supported commands
.SS Since
.sp
0.14
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { "execute": "query\-commands" }
<\- {
     "return":[
        {
           "name":"query\-balloon"
        },
        {
           "name":"system_powerdown"
        }
     ]
   }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Note
.sp
This example has been shortened as the real response is too long.
.SS \fBquit\fP (Command)
.sp
This command will cause the QEMU process to exit gracefully.  While every
attempt is made to send the QMP response before terminating, this is not
guaranteed.  When using this interface, a premature EOF would not be
unexpected.
.SS Since
.sp
0.14
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { "execute": "quit" }
<\- { "return": {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBMonitorMode\fP (Enum)
.sp
An enumeration of monitor modes.
.SS Values
.INDENT 0.0
.TP
.B \fBreadline\fP
HMP monitor (human\-oriented command line interface)
.TP
.B \fBcontrol\fP
QMP monitor (JSON\-based machine interface)
.UNINDENT
.SS Since
.sp
5.0
.SS \fBMonitorOptions\fP (Object)
.sp
Options to be used for adding a new monitor.
.SS Members
.INDENT 0.0
.TP
.B \fBid\fP: \fBstring\fP (optional)
Name of the monitor
.TP
.B \fBmode\fP: \fBMonitorMode\fP (optional)
.INDENT 7.0
.TP
.B Selects the monitor mode (default: readline in the system
emulator, control in qemu\-storage\-daemon)
.UNINDENT
.TP
.B \fBpretty\fP: \fBboolean\fP (optional)
Enables pretty printing (QMP only)
.TP
.B \fBchardev\fP: \fBstring\fP
Name of a character device to expose the monitor on
.UNINDENT
.SS Since
.sp
5.0
.SH QMP INTROSPECTION
.SS \fBquery\-qmp\-schema\fP (Command)
.sp
Command query\-qmp\-schema exposes the QMP wire ABI as an array of
SchemaInfo.  This lets QMP clients figure out what commands and
events are available in this QEMU, and their parameters and results.
.sp
However, the SchemaInfo can\(aqt reflect all the rules and restrictions
that apply to QMP.  It\(aqs interface introspection (figuring out
what\(aqs there), not interface specification.  The specification is in
the QAPI schema.
.sp
Furthermore, while we strive to keep the QMP wire format
backwards\-compatible across qemu versions, the introspection output
is not guaranteed to have the same stability.  For example, one
version of qemu may list an object member as an optional
non\-variant, while another lists the same member only through the
object\(aqs variants; or the type of a member may change from a generic
string into a specific enum or from one specific type into an
alternate that includes the original type alongside something else.
.SS Returns
.sp
array of \fBSchemaInfo\fP, where each element describes an
entity in the ABI: command, event, type, ...
.sp
The order of the various SchemaInfo is unspecified; however, all
names are guaranteed to be unique (no name will be duplicated with
different meta\-types).
.SS Note
.sp
the QAPI schema is also used to help define \fIinternal\fP
interfaces, by defining QAPI types.  These are not part of the QMP
wire ABI, and therefore not returned by this command.
.SS Since
.sp
2.5
.SS \fBSchemaMetaType\fP (Enum)
.sp
This is a \fBSchemaInfo\fP\(aqs meta type, i.e. the kind of entity it
describes.
.SS Values
.INDENT 0.0
.TP
.B \fBbuiltin\fP
a predefined type such as \(aqint\(aq or \(aqbool\(aq.
.TP
.B \fBenum\fP
an enumeration type
.TP
.B \fBarray\fP
an array type
.TP
.B \fBobject\fP
an object type (struct or union)
.TP
.B \fBalternate\fP
an alternate type
.TP
.B \fBcommand\fP
a QMP command
.TP
.B \fBevent\fP
a QMP event
.UNINDENT
.SS Since
.sp
2.5
.SS \fBSchemaInfo\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBname\fP: \fBstring\fP
the entity\(aqs name, inherited from \fBbase\fP\&.
The SchemaInfo is always referenced by this name.
Commands and events have the name defined in the QAPI schema.
Unlike command and event names, type names are not part of
the wire ABI.  Consequently, type names are meaningless
strings here, although they are still guaranteed unique
regardless of \fBmeta\-type\fP\&.
.TP
.B \fBmeta\-type\fP: \fBSchemaMetaType\fP
the entity\(aqs meta type, inherited from \fBbase\fP\&.
.TP
.B \fBfeatures\fP: \fBarray of string\fP (optional)
names of features associated with the entity, in no
particular order.
(since 4.1 for object types, 4.2 for commands, 5.0 for
the rest)
.TP
.B The members of \fBSchemaInfoBuiltin\fP when \fBmeta\-type\fP is \fB"builtin"\fP
.TP
.B The members of \fBSchemaInfoEnum\fP when \fBmeta\-type\fP is \fB"enum"\fP
.TP
.B The members of \fBSchemaInfoArray\fP when \fBmeta\-type\fP is \fB"array"\fP
.TP
.B The members of \fBSchemaInfoObject\fP when \fBmeta\-type\fP is \fB"object"\fP
.TP
.B The members of \fBSchemaInfoAlternate\fP when \fBmeta\-type\fP is \fB"alternate"\fP
.TP
.B The members of \fBSchemaInfoCommand\fP when \fBmeta\-type\fP is \fB"command"\fP
.TP
.B The members of \fBSchemaInfoEvent\fP when \fBmeta\-type\fP is \fB"event"\fP
.UNINDENT
Additional members depend on the value of \fBmeta\-type\fP\&.
.SS Since
.sp
2.5
.SS \fBSchemaInfoBuiltin\fP (Object)
.sp
Additional SchemaInfo members for meta\-type \(aqbuiltin\(aq.
.SS Members
.INDENT 0.0
.TP
.B \fBjson\-type\fP: \fBJSONType\fP
the JSON type used for this type on the wire.
.UNINDENT
.SS Since
.sp
2.5
.SS \fBJSONType\fP (Enum)
.sp
The four primitive and two structured types according to RFC 8259
section 1, plus \(aqint\(aq (split off \(aqnumber\(aq), plus the obvious top
type \(aqvalue\(aq.
.SS Values
.INDENT 0.0
.TP
.B \fBstring\fP
Not documented
.TP
.B \fBnumber\fP
Not documented
.TP
.B \fBint\fP
Not documented
.TP
.B \fBboolean\fP
Not documented
.TP
.B \fBnull\fP
Not documented
.TP
.B \fBobject\fP
Not documented
.TP
.B \fBarray\fP
Not documented
.TP
.B \fBvalue\fP
Not documented
.UNINDENT
.SS Since
.sp
2.5
.SS \fBSchemaInfoEnum\fP (Object)
.sp
Additional SchemaInfo members for meta\-type \(aqenum\(aq.
.SS Members
.INDENT 0.0
.TP
.B \fBmembers\fP: \fBarray of SchemaInfoEnumMember\fP
the enum type\(aqs members, in no particular order
(since 6.2).
.TP
.B \fBvalues\fP: \fBarray of string\fP
the enumeration type\(aqs member names, in no particular order.
Redundant with \fBmembers\fP\&.  Just for backward compatibility.
.UNINDENT
.SS Features
.INDENT 0.0
.TP
.B \fBdeprecated\fP
Member \fBvalues\fP is deprecated.  Use \fBmembers\fP instead.
.UNINDENT
Values of this type are JSON string on the wire.
.SS Since
.sp
2.5
.SS \fBSchemaInfoEnumMember\fP (Object)
.sp
An object member.
.SS Members
.INDENT 0.0
.TP
.B \fBname\fP: \fBstring\fP
the member\(aqs name, as defined in the QAPI schema.
.TP
.B \fBfeatures\fP: \fBarray of string\fP (optional)
names of features associated with the member, in no
particular order.
.UNINDENT
.SS Since
.sp
6.2
.SS \fBSchemaInfoArray\fP (Object)
.sp
Additional SchemaInfo members for meta\-type \(aqarray\(aq.
.SS Members
.INDENT 0.0
.TP
.B \fBelement\-type\fP: \fBstring\fP
the array type\(aqs element type.
.UNINDENT
Values of this type are JSON array on the wire.
.SS Since
.sp
2.5
.SS \fBSchemaInfoObject\fP (Object)
.sp
Additional SchemaInfo members for meta\-type \(aqobject\(aq.
.SS Members
.INDENT 0.0
.TP
.B \fBmembers\fP: \fBarray of SchemaInfoObjectMember\fP
the object type\(aqs (non\-variant) members, in no particular order.
.TP
.B \fBtag\fP: \fBstring\fP (optional)
the name of the member serving as type tag.
An element of \fBmembers\fP with this name must exist.
.TP
.B \fBvariants\fP: \fBarray of SchemaInfoObjectVariant\fP (optional)
variant members, i.e. additional members that
depend on the type tag\(aqs value.  Present exactly when
\fBtag\fP is present.  The variants are in no particular order,
and may even differ from the order of the values of the
enum type of the \fBtag\fP\&.
.UNINDENT
Values of this type are JSON object on the wire.
.SS Since
.sp
2.5
.SS \fBSchemaInfoObjectMember\fP (Object)
.sp
An object member.
.SS Members
.INDENT 0.0
.TP
.B \fBname\fP: \fBstring\fP
the member\(aqs name, as defined in the QAPI schema.
.TP
.B \fBtype\fP: \fBstring\fP
the name of the member\(aqs type.
.TP
.B \fBdefault\fP: \fBvalue\fP (optional)
default when used as command parameter.
If absent, the parameter is mandatory.
If present, the value must be null.  The parameter is
optional, and behavior when it\(aqs missing is not specified
here.
Future extension: if present and non\-null, the parameter
is optional, and defaults to this value.
.TP
.B \fBfeatures\fP: \fBarray of string\fP (optional)
names of features associated with the member, in no
particular order.  (since 5.0)
.UNINDENT
.SS Since
.sp
2.5
.SS \fBSchemaInfoObjectVariant\fP (Object)
.sp
The variant members for a value of the type tag.
.SS Members
.INDENT 0.0
.TP
.B \fBcase\fP: \fBstring\fP
a value of the type tag.
.TP
.B \fBtype\fP: \fBstring\fP
the name of the object type that provides the variant members
when the type tag has value \fBcase\fP\&.
.UNINDENT
.SS Since
.sp
2.5
.SS \fBSchemaInfoAlternate\fP (Object)
.sp
Additional SchemaInfo members for meta\-type \(aqalternate\(aq.
.SS Members
.INDENT 0.0
.TP
.B \fBmembers\fP: \fBarray of SchemaInfoAlternateMember\fP
the alternate type\(aqs members, in no particular order.
The members\(aq wire encoding is distinct, see
docs/devel/qapi\-code\-gen.txt section Alternate types.
.UNINDENT
On the wire, this can be any of the members.
.SS Since
.sp
2.5
.SS \fBSchemaInfoAlternateMember\fP (Object)
.sp
An alternate member.
.SS Members
.INDENT 0.0
.TP
.B \fBtype\fP: \fBstring\fP
the name of the member\(aqs type.
.UNINDENT
.SS Since
.sp
2.5
.SS \fBSchemaInfoCommand\fP (Object)
.sp
Additional SchemaInfo members for meta\-type \(aqcommand\(aq.
.SS Members
.INDENT 0.0
.TP
.B \fBarg\-type\fP: \fBstring\fP
the name of the object type that provides the command\(aqs
parameters.
.TP
.B \fBret\-type\fP: \fBstring\fP
the name of the command\(aqs result type.
.TP
.B \fBallow\-oob\fP: \fBboolean\fP (optional)
whether the command allows out\-of\-band execution,
defaults to false (Since: 2.12)
.UNINDENT
.SS TODO
.sp
\fBsuccess\-response\fP (currently irrelevant, because it\(aqs QGA, not QMP)
.SS Since
.sp
2.5
.SS \fBSchemaInfoEvent\fP (Object)
.sp
Additional SchemaInfo members for meta\-type \(aqevent\(aq.
.SS Members
.INDENT 0.0
.TP
.B \fBarg\-type\fP: \fBstring\fP
the name of the object type that provides the event\(aqs
parameters.
.UNINDENT
.SS Since
.sp
2.5
.SH USER AUTHORIZATION
.SS \fBQAuthZListPolicy\fP (Enum)
.sp
The authorization policy result
.SS Values
.INDENT 0.0
.TP
.B \fBdeny\fP
deny access
.TP
.B \fBallow\fP
allow access
.UNINDENT
.SS Since
.sp
4.0
.SS \fBQAuthZListFormat\fP (Enum)
.sp
The authorization policy match format
.SS Values
.INDENT 0.0
.TP
.B \fBexact\fP
an exact string match
.TP
.B \fBglob\fP
string with ? and * shell wildcard support
.UNINDENT
.SS Since
.sp
4.0
.SS \fBQAuthZListRule\fP (Object)
.sp
A single authorization rule.
.SS Members
.INDENT 0.0
.TP
.B \fBmatch\fP: \fBstring\fP
a string or glob to match against a user identity
.TP
.B \fBpolicy\fP: \fBQAuthZListPolicy\fP
the result to return if \fBmatch\fP evaluates to true
.TP
.B \fBformat\fP: \fBQAuthZListFormat\fP (optional)
the format of the \fBmatch\fP rule (default \(aqexact\(aq)
.UNINDENT
.SS Since
.sp
4.0
.SS \fBAuthZListProperties\fP (Object)
.sp
Properties for authz\-list objects.
.SS Members
.INDENT 0.0
.TP
.B \fBpolicy\fP: \fBQAuthZListPolicy\fP (optional)
Default policy to apply when no rule matches (default: deny)
.TP
.B \fBrules\fP: \fBarray of QAuthZListRule\fP (optional)
Authorization rules based on matching user
.UNINDENT
.SS Since
.sp
4.0
.SS \fBAuthZListFileProperties\fP (Object)
.sp
Properties for authz\-listfile objects.
.SS Members
.INDENT 0.0
.TP
.B \fBfilename\fP: \fBstring\fP
File name to load the configuration from. The file must
contain valid JSON for AuthZListProperties.
.TP
.B \fBrefresh\fP: \fBboolean\fP (optional)
If true, inotify is used to monitor the file, automatically
reloading changes. If an error occurs during reloading, all
authorizations will fail until the file is next successfully
loaded. (default: true if the binary was built with
CONFIG_INOTIFY1, false otherwise)
.UNINDENT
.SS Since
.sp
4.0
.SS \fBAuthZPAMProperties\fP (Object)
.sp
Properties for authz\-pam objects.
.SS Members
.INDENT 0.0
.TP
.B \fBservice\fP: \fBstring\fP
PAM service name to use for authorization
.UNINDENT
.SS Since
.sp
4.0
.SS \fBAuthZSimpleProperties\fP (Object)
.sp
Properties for authz\-simple objects.
.SS Members
.INDENT 0.0
.TP
.B \fBidentity\fP: \fBstring\fP
Identifies the allowed user. Its format depends on the network
service that authorization object is associated with. For
authorizing based on TLS x509 certificates, the identity must be
the x509 distinguished name.
.UNINDENT
.SS Since
.sp
4.0
.SH QEMU OBJECT MODEL (QOM)
.SS \fBObjectPropertyInfo\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBname\fP: \fBstring\fP
the name of the property
.TP
.B \fBtype\fP: \fBstring\fP
the type of the property.  This will typically come in one of four
forms:
.INDENT 7.0
.IP 1. 3
A primitive type such as \(aqu8\(aq, \(aqu16\(aq, \(aqbool\(aq, \(aqstr\(aq, or \(aqdouble\(aq.
These types are mapped to the appropriate JSON type.
.IP 2. 3
A child type in the form \(aqchild<subtype>\(aq where subtype is a qdev
device type name.  Child properties create the composition tree.
.IP 3. 3
A link type in the form \(aqlink<subtype>\(aq where subtype is a qdev
device type name.  Link properties form the device model graph.
.UNINDENT
.TP
.B \fBdescription\fP: \fBstring\fP (optional)
if specified, the description of the property.
.TP
.B \fBdefault\-value\fP: \fBvalue\fP (optional)
the default value, if any (since 5.0)
.UNINDENT
.SS Since
.sp
1.2
.SS \fBqom\-list\fP (Command)
.sp
This command will list any properties of a object given a path in the object
model.
.SS Arguments
.INDENT 0.0
.TP
.B \fBpath\fP: \fBstring\fP
the path within the object model.  See \fBqom\-get\fP for a description of
this parameter.
.UNINDENT
.SS Returns
.sp
a list of \fBObjectPropertyInfo\fP that describe the properties of the
object.
.SS Since
.sp
1.2
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { "execute": "qom\-list",
     "arguments": { "path": "/chardevs" } }
<\- { "return": [ { "name": "type", "type": "string" },
                 { "name": "parallel0", "type": "child<chardev\-vc>" },
                 { "name": "serial0", "type": "child<chardev\-vc>" },
                 { "name": "mon0", "type": "child<chardev\-stdio>" } ] }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBqom\-get\fP (Command)
.sp
This command will get a property from a object model path and return the
value.
.SS Arguments
.INDENT 0.0
.TP
.B \fBpath\fP: \fBstring\fP
The path within the object model.  There are two forms of supported
paths\-\-absolute and partial paths.
.sp
Absolute paths are derived from the root object and can follow child<>
or link<> properties.  Since they can follow link<> properties, they
can be arbitrarily long.  Absolute paths look like absolute filenames
and are prefixed  with a leading slash.
.sp
Partial paths look like relative filenames.  They do not begin
with a prefix.  The matching rules for partial paths are subtle but
designed to make specifying objects easy.  At each level of the
composition tree, the partial path is matched as an absolute path.
The first match is not returned.  At least two matches are searched
for.  A successful result is only returned if only one match is
found.  If more than one match is found, a flag is return to
indicate that the match was ambiguous.
.TP
.B \fBproperty\fP: \fBstring\fP
The property name to read
.UNINDENT
.SS Returns
.sp
The property value.  The type depends on the property
type. child<> and link<> properties are returned as #str
pathnames.  All integer property types (u8, u16, etc) are
returned as #int.
.SS Since
.sp
1.2
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
1. Use absolute path

\-> { "execute": "qom\-get",
     "arguments": { "path": "/machine/unattached/device[0]",
                    "property": "hotplugged" } }
<\- { "return": false }

2. Use partial path

\-> { "execute": "qom\-get",
     "arguments": { "path": "unattached/sysbus",
                    "property": "type" } }
<\- { "return": "System" }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBqom\-set\fP (Command)
.sp
This command will set a property from a object model path.
.SS Arguments
.INDENT 0.0
.TP
.B \fBpath\fP: \fBstring\fP
see \fBqom\-get\fP for a description of this parameter
.TP
.B \fBproperty\fP: \fBstring\fP
the property name to set
.TP
.B \fBvalue\fP: \fBvalue\fP
a value who\(aqs type is appropriate for the property type.  See \fBqom\-get\fP
for a description of type mapping.
.UNINDENT
.SS Since
.sp
1.2
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { "execute": "qom\-set",
     "arguments": { "path": "/machine",
                    "property": "graphics",
                    "value": false } }
<\- { "return": {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBObjectTypeInfo\fP (Object)
.sp
This structure describes a search result from \fBqom\-list\-types\fP
.SS Members
.INDENT 0.0
.TP
.B \fBname\fP: \fBstring\fP
the type name found in the search
.TP
.B \fBabstract\fP: \fBboolean\fP (optional)
the type is abstract and can\(aqt be directly instantiated.
Omitted if false. (since 2.10)
.TP
.B \fBparent\fP: \fBstring\fP (optional)
Name of parent type, if any (since 2.10)
.UNINDENT
.SS Since
.sp
1.1
.SS \fBqom\-list\-types\fP (Command)
.sp
This command will return a list of types given search parameters
.SS Arguments
.INDENT 0.0
.TP
.B \fBimplements\fP: \fBstring\fP (optional)
if specified, only return types that implement this type name
.TP
.B \fBabstract\fP: \fBboolean\fP (optional)
if true, include abstract types in the results
.UNINDENT
.SS Returns
.sp
a list of \fBObjectTypeInfo\fP or an empty list if no results are found
.SS Since
.sp
1.1
.SS \fBqom\-list\-properties\fP (Command)
.sp
List properties associated with a QOM object.
.SS Arguments
.INDENT 0.0
.TP
.B \fBtypename\fP: \fBstring\fP
the type name of an object
.UNINDENT
.SS Note
.sp
objects can create properties at runtime, for example to describe
links between different devices and/or objects. These properties
are not included in the output of this command.
.SS Returns
.sp
a list of ObjectPropertyInfo describing object properties
.SS Since
.sp
2.12
.SS \fBCanHostSocketcanProperties\fP (Object)
.sp
Properties for can\-host\-socketcan objects.
.SS Members
.INDENT 0.0
.TP
.B \fBif\fP: \fBstring\fP
interface name of the host system CAN bus to connect to
.TP
.B \fBcanbus\fP: \fBstring\fP
object ID of the can\-bus object to connect to the host interface
.UNINDENT
.SS Since
.sp
2.12
.SS \fBColoCompareProperties\fP (Object)
.sp
Properties for colo\-compare objects.
.SS Members
.INDENT 0.0
.TP
.B \fBprimary_in\fP: \fBstring\fP
name of the character device backend to use for the primary
input (incoming packets are redirected to \fBoutdev\fP)
.TP
.B \fBsecondary_in\fP: \fBstring\fP
name of the character device backend to use for secondary
input (incoming packets are only compared to the input on
\fBprimary_in\fP and then dropped)
.TP
.B \fBoutdev\fP: \fBstring\fP
name of the character device backend to use for output
.TP
.B \fBiothread\fP: \fBstring\fP
name of the iothread to run in
.TP
.B \fBnotify_dev\fP: \fBstring\fP (optional)
name of the character device backend to be used to communicate
with the remote colo\-frame (only for Xen COLO)
.TP
.B \fBcompare_timeout\fP: \fBint\fP (optional)
the maximum time to hold a packet from \fBprimary_in\fP for
comparison with an incoming packet on \fBsecondary_in\fP in
milliseconds (default: 3000)
.TP
.B \fBexpired_scan_cycle\fP: \fBint\fP (optional)
the interval at which colo\-compare checks whether
packets from \fBprimary\fP have timed out, in milliseconds
(default: 3000)
.TP
.B \fBmax_queue_size\fP: \fBint\fP (optional)
the maximum number of packets to keep in the queue for
comparing with incoming packets from \fBsecondary_in\fP\&.  If the
queue is full and additional packets are received, the
additional packets are dropped. (default: 1024)
.TP
.B \fBvnet_hdr_support\fP: \fBboolean\fP (optional)
if true, vnet header support is enabled (default: false)
.UNINDENT
.SS Since
.sp
2.8
.SS \fBCryptodevBackendProperties\fP (Object)
.sp
Properties for cryptodev\-backend and cryptodev\-backend\-builtin objects.
.SS Members
.INDENT 0.0
.TP
.B \fBqueues\fP: \fBint\fP (optional)
the number of queues for the cryptodev backend. Ignored for
cryptodev\-backend and must be 1 for cryptodev\-backend\-builtin.
(default: 1)
.UNINDENT
.SS Since
.sp
2.8
.SS \fBCryptodevVhostUserProperties\fP (Object)
.sp
Properties for cryptodev\-vhost\-user objects.
.SS Members
.INDENT 0.0
.TP
.B \fBchardev\fP: \fBstring\fP
the name of a Unix domain socket character device that connects to
the vhost\-user server
.TP
.B The members of \fBCryptodevBackendProperties\fP
.UNINDENT
.SS Since
.sp
2.12
.SS \fBDBusVMStateProperties\fP (Object)
.sp
Properties for dbus\-vmstate objects.
.SS Members
.INDENT 0.0
.TP
.B \fBaddr\fP: \fBstring\fP
the name of the DBus bus to connect to
.TP
.B \fBid\-list\fP: \fBstring\fP (optional)
a comma separated list of DBus IDs of helpers whose data should be
included in the VM state on migration
.UNINDENT
.SS Since
.sp
5.0
.SS \fBNetfilterInsert\fP (Enum)
.sp
Indicates where to insert a netfilter relative to a given other filter.
.SS Values
.INDENT 0.0
.TP
.B \fBbefore\fP
insert before the specified filter
.TP
.B \fBbehind\fP
insert behind the specified filter
.UNINDENT
.SS Since
.sp
5.0
.SS \fBNetfilterProperties\fP (Object)
.sp
Properties for objects of classes derived from netfilter.
.SS Members
.INDENT 0.0
.TP
.B \fBnetdev\fP: \fBstring\fP
id of the network device backend to filter
.TP
.B \fBqueue\fP: \fBNetFilterDirection\fP (optional)
indicates which queue(s) to filter (default: all)
.TP
.B \fBstatus\fP: \fBstring\fP (optional)
indicates whether the filter is enabled ("on") or disabled ("off")
(default: "on")
.TP
.B \fBposition\fP: \fBstring\fP (optional)
specifies where the filter should be inserted in the filter list.
"head" means the filter is inserted at the head of the filter list,
before any existing filters.
"tail" means the filter is inserted at the tail of the filter list,
behind any existing filters (default).
"id=<id>" means the filter is inserted before or behind the filter
specified by <id>, depending on the \fBinsert\fP property.
(default: "tail")
.TP
.B \fBinsert\fP: \fBNetfilterInsert\fP (optional)
where to insert the filter relative to the filter given in \fBposition\fP\&.
Ignored if \fBposition\fP is "head" or "tail". (default: behind)
.UNINDENT
.SS Since
.sp
2.5
.SS \fBFilterBufferProperties\fP (Object)
.sp
Properties for filter\-buffer objects.
.SS Members
.INDENT 0.0
.TP
.B \fBinterval\fP: \fBint\fP
a non\-zero interval in microseconds.  All packets arriving in the
given interval are delayed until the end of the interval.
.TP
.B The members of \fBNetfilterProperties\fP
.UNINDENT
.SS Since
.sp
2.5
.SS \fBFilterDumpProperties\fP (Object)
.sp
Properties for filter\-dump objects.
.SS Members
.INDENT 0.0
.TP
.B \fBfile\fP: \fBstring\fP
the filename where the dumped packets should be stored
.TP
.B \fBmaxlen\fP: \fBint\fP (optional)
maximum number of bytes in a packet that are stored (default: 65536)
.TP
.B The members of \fBNetfilterProperties\fP
.UNINDENT
.SS Since
.sp
2.5
.SS \fBFilterMirrorProperties\fP (Object)
.sp
Properties for filter\-mirror objects.
.SS Members
.INDENT 0.0
.TP
.B \fBoutdev\fP: \fBstring\fP
the name of a character device backend to which all incoming packets
are mirrored
.TP
.B \fBvnet_hdr_support\fP: \fBboolean\fP (optional)
if true, vnet header support is enabled (default: false)
.TP
.B The members of \fBNetfilterProperties\fP
.UNINDENT
.SS Since
.sp
2.6
.SS \fBFilterRedirectorProperties\fP (Object)
.sp
Properties for filter\-redirector objects.
.sp
At least one of \fBindev\fP or \fBoutdev\fP must be present.  If both are present, they
must not refer to the same character device backend.
.SS Members
.INDENT 0.0
.TP
.B \fBindev\fP: \fBstring\fP (optional)
the name of a character device backend from which packets are
received and redirected to the filtered network device
.TP
.B \fBoutdev\fP: \fBstring\fP (optional)
the name of a character device backend to which all incoming packets
are redirected
.TP
.B \fBvnet_hdr_support\fP: \fBboolean\fP (optional)
if true, vnet header support is enabled (default: false)
.TP
.B The members of \fBNetfilterProperties\fP
.UNINDENT
.SS Since
.sp
2.6
.SS \fBFilterRewriterProperties\fP (Object)
.sp
Properties for filter\-rewriter objects.
.SS Members
.INDENT 0.0
.TP
.B \fBvnet_hdr_support\fP: \fBboolean\fP (optional)
if true, vnet header support is enabled (default: false)
.TP
.B The members of \fBNetfilterProperties\fP
.UNINDENT
.SS Since
.sp
2.8
.SS \fBInputBarrierProperties\fP (Object)
.sp
Properties for input\-barrier objects.
.SS Members
.INDENT 0.0
.TP
.B \fBname\fP: \fBstring\fP
the screen name as declared in the screens section of barrier.conf
.TP
.B \fBserver\fP: \fBstring\fP (optional)
hostname of the Barrier server (default: "localhost")
.TP
.B \fBport\fP: \fBstring\fP (optional)
TCP port of the Barrier server (default: "24800")
.TP
.B \fBx\-origin\fP: \fBstring\fP (optional)
x coordinate of the leftmost pixel on the guest screen
(default: "0")
.TP
.B \fBy\-origin\fP: \fBstring\fP (optional)
y coordinate of the topmost pixel on the guest screen
(default: "0")
.TP
.B \fBwidth\fP: \fBstring\fP (optional)
the width of secondary screen in pixels (default: "1920")
.TP
.B \fBheight\fP: \fBstring\fP (optional)
the height of secondary screen in pixels (default: "1080")
.UNINDENT
.SS Since
.sp
4.2
.SS \fBInputLinuxProperties\fP (Object)
.sp
Properties for input\-linux objects.
.SS Members
.INDENT 0.0
.TP
.B \fBevdev\fP: \fBstring\fP
the path of the host evdev device to use
.TP
.B \fBgrab_all\fP: \fBboolean\fP (optional)
if true, grab is toggled for all devices (e.g. both keyboard and
mouse) instead of just one device (default: false)
.TP
.B \fBrepeat\fP: \fBboolean\fP (optional)
enables auto\-repeat events (default: false)
.TP
.B \fBgrab\-toggle\fP: \fBGrabToggleKeys\fP (optional)
the key or key combination that toggles device grab
(default: ctrl\-ctrl)
.UNINDENT
.SS Since
.sp
2.6
.SS \fBEventLoopBaseProperties\fP (Object)
.sp
Common properties for event loops
.SS Members
.INDENT 0.0
.TP
.B \fBaio\-max\-batch\fP: \fBint\fP (optional)
maximum number of requests in a batch for the AIO engine,
0 means that the engine will use its default.
(default: 0)
.TP
.B \fBthread\-pool\-min\fP: \fBint\fP (optional)
minimum number of threads reserved in the thread pool
(default:0)
.TP
.B \fBthread\-pool\-max\fP: \fBint\fP (optional)
maximum number of threads the thread pool can contain
(default:64)
.UNINDENT
.SS Since
.sp
7.1
.SS \fBIothreadProperties\fP (Object)
.sp
Properties for iothread objects.
.SS Members
.INDENT 0.0
.TP
.B \fBpoll\-max\-ns\fP: \fBint\fP (optional)
the maximum number of nanoseconds to busy wait for events.
0 means polling is disabled (default: 32768 on POSIX hosts,
0 otherwise)
.TP
.B \fBpoll\-grow\fP: \fBint\fP (optional)
the multiplier used to increase the polling time when the
algorithm detects it is missing events due to not polling long
enough. 0 selects a default behaviour (default: 0)
.TP
.B \fBpoll\-shrink\fP: \fBint\fP (optional)
the divisor used to decrease the polling time when the
algorithm detects it is spending too long polling without
encountering events. 0 selects a default behaviour (default: 0)
.TP
.B The members of \fBEventLoopBaseProperties\fP
.UNINDENT
The \fBaio\-max\-batch\fP option is available since 6.1.
.SS Since
.sp
2.0
.SS \fBMainLoopProperties\fP (Object)
.sp
Properties for the main\-loop object.
.SS Members
.INDENT 0.0
.TP
.B The members of \fBEventLoopBaseProperties\fP
.UNINDENT
.SS Since
.sp
7.1
.SS \fBMemoryBackendProperties\fP (Object)
.sp
Properties for objects of classes derived from memory\-backend.
.SS Members
.INDENT 0.0
.TP
.B \fBmerge\fP: \fBboolean\fP (optional)
if true, mark the memory as mergeable (default depends on the machine
type)
.TP
.B \fBdump\fP: \fBboolean\fP (optional)
if true, include the memory in core dumps (default depends on the
machine type)
.TP
.B \fBhost\-nodes\fP: \fBarray of int\fP (optional)
the list of NUMA host nodes to bind the memory to
.TP
.B \fBpolicy\fP: \fBHostMemPolicy\fP (optional)
the NUMA policy (default: \(aqdefault\(aq)
.TP
.B \fBprealloc\fP: \fBboolean\fP (optional)
if true, preallocate memory (default: false)
.TP
.B \fBprealloc\-threads\fP: \fBint\fP (optional)
number of CPU threads to use for prealloc (default: 1)
.TP
.B \fBprealloc\-context\fP: \fBstring\fP (optional)
thread context to use for creation of preallocation threads
(default: none) (since 7.2)
.TP
.B \fBshare\fP: \fBboolean\fP (optional)
if false, the memory is private to QEMU; if true, it is shared
(default: false)
.TP
.B \fBreserve\fP: \fBboolean\fP (optional)
if true, reserve swap space (or huge pages) if applicable
(default: true) (since 6.1)
.TP
.B \fBsize\fP: \fBint\fP
size of the memory region in bytes
.TP
.B \fBx\-use\-canonical\-path\-for\-ramblock\-id\fP: \fBboolean\fP (optional)
if true, the canonical path is used
for ramblock\-id. Disable this for 4.0
machine types or older to allow
migration with newer QEMU versions.
(default: false generally,
but true for machine types <= 4.0)
.UNINDENT
.SS Note
.sp
prealloc=true and reserve=false cannot be set at the same time. With
reserve=true, the behavior depends on the operating system: for example,
Linux will not reserve swap space for shared file mappings \-\-
"not applicable". In contrast, reserve=false will bail out if it cannot
be configured accordingly.
.SS Since
.sp
2.1
.SS \fBMemoryBackendFileProperties\fP (Object)
.sp
Properties for memory\-backend\-file objects.
.SS Members
.INDENT 0.0
.TP
.B \fBalign\fP: \fBint\fP (optional)
the base address alignment when QEMU mmap(2)s \fBmem\-path\fP\&. Some
backend stores specified by \fBmem\-path\fP require an alignment different
than the default one used by QEMU, e.g. the device DAX /dev/dax0.0
requires 2M alignment rather than 4K. In such cases, users can
specify the required alignment via this option.
0 selects a default alignment (currently the page size). (default: 0)
.TP
.B \fBdiscard\-data\fP: \fBboolean\fP (optional)
if true, the file contents can be destroyed when QEMU exits,
to avoid unnecessarily flushing data to the backing file. Note
that \fBdiscard\-data\fP is only an optimization, and QEMU might
not discard file contents if it aborts unexpectedly or is
terminated using SIGKILL. (default: false)
.TP
.B \fBmem\-path\fP: \fBstring\fP
the path to either a shared memory or huge page filesystem mount
.TP
\fBpmem\fP: \fBboolean\fP (optional) (\fBIf: \fP\fBCONFIG_LIBPMEM\fP)
specifies whether the backing file specified by \fBmem\-path\fP is in
host persistent memory that can be accessed using the SNIA NVM
programming model (e.g. Intel NVDIMM).
.TP
.B \fBreadonly\fP: \fBboolean\fP (optional)
if true, the backing file is opened read\-only; if false, it is
opened read\-write. (default: false)
.TP
.B The members of \fBMemoryBackendProperties\fP
.UNINDENT
.SS Since
.sp
2.1
.SS \fBMemoryBackendMemfdProperties\fP (Object)
.sp
Properties for memory\-backend\-memfd objects.
.sp
The \fBshare\fP boolean option is true by default with memfd.
.SS Members
.INDENT 0.0
.TP
.B \fBhugetlb\fP: \fBboolean\fP (optional)
if true, the file to be created resides in the hugetlbfs filesystem
(default: false)
.TP
.B \fBhugetlbsize\fP: \fBint\fP (optional)
the hugetlb page size on systems that support multiple hugetlb
page sizes (it must be a power of 2 value supported by the
system). 0 selects a default page size. This option is ignored
if \fBhugetlb\fP is false. (default: 0)
.TP
.B \fBseal\fP: \fBboolean\fP (optional)
if true, create a sealed\-file, which will block further resizing of
the memory (default: true)
.TP
.B The members of \fBMemoryBackendProperties\fP
.UNINDENT
.SS Since
.sp
2.12
.SS \fBMemoryBackendEpcProperties\fP (Object)
.sp
Properties for memory\-backend\-epc objects.
.sp
The \fBshare\fP boolean option is true by default with epc
.sp
The \fBmerge\fP boolean option is false by default with epc
.sp
The \fBdump\fP boolean option is false by default with epc
.SS Members
.INDENT 0.0
.TP
.B The members of \fBMemoryBackendProperties\fP
.UNINDENT
.SS Since
.sp
6.2
.SS \fBPrManagerHelperProperties\fP (Object)
.sp
Properties for pr\-manager\-helper objects.
.SS Members
.INDENT 0.0
.TP
.B \fBpath\fP: \fBstring\fP
the path to a Unix domain socket for connecting to the external helper
.UNINDENT
.SS Since
.sp
2.11
.SS \fBQtestProperties\fP (Object)
.sp
Properties for qtest objects.
.SS Members
.INDENT 0.0
.TP
.B \fBchardev\fP: \fBstring\fP
the chardev to be used to receive qtest commands on.
.TP
.B \fBlog\fP: \fBstring\fP (optional)
the path to a log file
.UNINDENT
.SS Since
.sp
6.0
.SS \fBRemoteObjectProperties\fP (Object)
.sp
Properties for x\-remote\-object objects.
.SS Members
.INDENT 0.0
.TP
.B \fBfd\fP: \fBstring\fP
file descriptor name previously passed via \(aqgetfd\(aq command
.TP
.B \fBdevid\fP: \fBstring\fP
the id of the device to be associated with the file descriptor
.UNINDENT
.SS Since
.sp
6.0
.SS \fBVfioUserServerProperties\fP (Object)
.sp
Properties for x\-vfio\-user\-server objects.
.SS Members
.INDENT 0.0
.TP
.B \fBsocket\fP: \fBSocketAddress\fP
socket to be used by the libvfio\-user library
.TP
.B \fBdevice\fP: \fBstring\fP
the ID of the device to be emulated at the server
.UNINDENT
.SS Since
.sp
7.1
.SS \fBRngProperties\fP (Object)
.sp
Properties for objects of classes derived from rng.
.SS Members
.INDENT 0.0
.TP
.B \fBopened\fP: \fBboolean\fP (optional)
if true, the device is opened immediately when applying this option
and will probably fail when processing the next option. Don\(aqt use;
only provided for compatibility. (default: false)
.UNINDENT
.SS Features
.INDENT 0.0
.TP
.B \fBdeprecated\fP
Member \fBopened\fP is deprecated.  Setting true doesn\(aqt make sense,
and false is already the default.
.UNINDENT
.SS Since
.sp
1.3
.SS \fBRngEgdProperties\fP (Object)
.sp
Properties for rng\-egd objects.
.SS Members
.INDENT 0.0
.TP
.B \fBchardev\fP: \fBstring\fP
the name of a character device backend that provides the connection
to the RNG daemon
.TP
.B The members of \fBRngProperties\fP
.UNINDENT
.SS Since
.sp
1.3
.SS \fBRngRandomProperties\fP (Object)
.sp
Properties for rng\-random objects.
.SS Members
.INDENT 0.0
.TP
.B \fBfilename\fP: \fBstring\fP (optional)
the filename of the device on the host to obtain entropy from
(default: "/dev/urandom")
.TP
.B The members of \fBRngProperties\fP
.UNINDENT
.SS Since
.sp
1.3
.SS \fBSevGuestProperties\fP (Object)
.sp
Properties for sev\-guest objects.
.SS Members
.INDENT 0.0
.TP
.B \fBsev\-device\fP: \fBstring\fP (optional)
SEV device to use (default: "/dev/sev")
.TP
.B \fBdh\-cert\-file\fP: \fBstring\fP (optional)
guest owners DH certificate (encoded with base64)
.TP
.B \fBsession\-file\fP: \fBstring\fP (optional)
guest owners session parameters (encoded with base64)
.TP
.B \fBpolicy\fP: \fBint\fP (optional)
SEV policy value (default: 0x1)
.TP
.B \fBhandle\fP: \fBint\fP (optional)
SEV firmware handle (default: 0)
.TP
.B \fBcbitpos\fP: \fBint\fP (optional)
C\-bit location in page table entry (default: 0)
.TP
.B \fBreduced\-phys\-bits\fP: \fBint\fP
number of bits in physical addresses that become
unavailable when SEV is enabled
.TP
.B \fBkernel\-hashes\fP: \fBboolean\fP (optional)
if true, add hashes of kernel/initrd/cmdline to a
designated guest firmware page for measured boot
with \-kernel (default: false) (since 6.2)
.UNINDENT
.SS Since
.sp
2.12
.SS \fBThreadContextProperties\fP (Object)
.sp
Properties for thread context objects.
.SS Members
.INDENT 0.0
.TP
.B \fBcpu\-affinity\fP: \fBarray of int\fP (optional)
the list of host CPU numbers used as CPU affinity for all
threads created in the thread context (default: QEMU main
thread CPU affinity)
.TP
.B \fBnode\-affinity\fP: \fBarray of int\fP (optional)
the list of host node numbers that will be resolved to a
list of host CPU numbers used as CPU affinity. This is a
shortcut for specifying the list of host CPU numbers
belonging to the host nodes manually by setting
\fBcpu\-affinity\fP\&. (default: QEMU main thread affinity)
.UNINDENT
.SS Since
.sp
7.2
.SS \fBObjectType\fP (Enum)
.SS Values
.INDENT 0.0
.TP
.B \fBauthz\-list\fP
Not documented
.TP
.B \fBauthz\-listfile\fP
Not documented
.TP
.B \fBauthz\-pam\fP
Not documented
.TP
.B \fBauthz\-simple\fP
Not documented
.TP
.B \fBcan\-bus\fP
Not documented
.TP
\fBcan\-host\-socketcan\fP (\fBIf: \fP\fBCONFIG_LINUX\fP)
Not documented
.TP
.B \fBcolo\-compare\fP
Not documented
.TP
.B \fBcryptodev\-backend\fP
Not documented
.TP
.B \fBcryptodev\-backend\-builtin\fP
Not documented
.TP
.B \fBcryptodev\-backend\-lkcf\fP
Not documented
.TP
\fBcryptodev\-vhost\-user\fP (\fBIf: \fP\fBCONFIG_VHOST_CRYPTO\fP)
Not documented
.TP
.B \fBdbus\-vmstate\fP
Not documented
.TP
.B \fBfilter\-buffer\fP
Not documented
.TP
.B \fBfilter\-dump\fP
Not documented
.TP
.B \fBfilter\-mirror\fP
Not documented
.TP
.B \fBfilter\-redirector\fP
Not documented
.TP
.B \fBfilter\-replay\fP
Not documented
.TP
.B \fBfilter\-rewriter\fP
Not documented
.TP
.B \fBinput\-barrier\fP
Not documented
.TP
\fBinput\-linux\fP (\fBIf: \fP\fBCONFIG_LINUX\fP)
Not documented
.TP
.B \fBiothread\fP
Not documented
.TP
.B \fBmain\-loop\fP
Not documented
.TP
\fBmemory\-backend\-epc\fP (\fBIf: \fP\fBCONFIG_LINUX\fP)
Not documented
.TP
.B \fBmemory\-backend\-file\fP
Not documented
.TP
\fBmemory\-backend\-memfd\fP (\fBIf: \fP\fBCONFIG_LINUX\fP)
Not documented
.TP
.B \fBmemory\-backend\-ram\fP
Not documented
.TP
.B \fBpef\-guest\fP
Not documented
.TP
\fBpr\-manager\-helper\fP (\fBIf: \fP\fBCONFIG_LINUX\fP)
Not documented
.TP
.B \fBqtest\fP
Not documented
.TP
.B \fBrng\-builtin\fP
Not documented
.TP
.B \fBrng\-egd\fP
Not documented
.TP
\fBrng\-random\fP (\fBIf: \fP\fBCONFIG_POSIX\fP)
Not documented
.TP
.B \fBsecret\fP
Not documented
.TP
\fBsecret_keyring\fP (\fBIf: \fP\fBCONFIG_SECRET_KEYRING\fP)
Not documented
.TP
.B \fBsev\-guest\fP
Not documented
.TP
.B \fBthread\-context\fP
Not documented
.TP
.B \fBs390\-pv\-guest\fP
Not documented
.TP
.B \fBthrottle\-group\fP
Not documented
.TP
.B \fBtls\-creds\-anon\fP
Not documented
.TP
.B \fBtls\-creds\-psk\fP
Not documented
.TP
.B \fBtls\-creds\-x509\fP
Not documented
.TP
.B \fBtls\-cipher\-suites\fP
Not documented
.TP
.B \fBx\-remote\-object\fP
Not documented
.TP
.B \fBx\-vfio\-user\-server\fP
Not documented
.UNINDENT
.SS Features
.INDENT 0.0
.TP
.B \fBunstable\fP
Member \fBx\-remote\-object\fP is experimental.
.UNINDENT
.SS Since
.sp
6.0
.SS \fBObjectOptions\fP (Object)
.sp
Describes the options of a user creatable QOM object.
.SS Members
.INDENT 0.0
.TP
.B \fBqom\-type\fP: \fBObjectType\fP
the class name for the object to be created
.TP
.B \fBid\fP: \fBstring\fP
the name of the new object
.TP
.B The members of \fBAuthZListProperties\fP when \fBqom\-type\fP is \fB"authz\-list"\fP
.TP
.B The members of \fBAuthZListFileProperties\fP when \fBqom\-type\fP is \fB"authz\-listfile"\fP
.TP
.B The members of \fBAuthZPAMProperties\fP when \fBqom\-type\fP is \fB"authz\-pam"\fP
.TP
.B The members of \fBAuthZSimpleProperties\fP when \fBqom\-type\fP is \fB"authz\-simple"\fP
.TP
The members of \fBCanHostSocketcanProperties\fP when \fBqom\-type\fP is \fB"can\-host\-socketcan"\fP (\fBIf: \fP\fBCONFIG_LINUX\fP)
.TP
.B The members of \fBColoCompareProperties\fP when \fBqom\-type\fP is \fB"colo\-compare"\fP
.TP
.B The members of \fBCryptodevBackendProperties\fP when \fBqom\-type\fP is \fB"cryptodev\-backend"\fP
.TP
.B The members of \fBCryptodevBackendProperties\fP when \fBqom\-type\fP is \fB"cryptodev\-backend\-builtin"\fP
.TP
.B The members of \fBCryptodevBackendProperties\fP when \fBqom\-type\fP is \fB"cryptodev\-backend\-lkcf"\fP
.TP
The members of \fBCryptodevVhostUserProperties\fP when \fBqom\-type\fP is \fB"cryptodev\-vhost\-user"\fP (\fBIf: \fP\fBCONFIG_VHOST_CRYPTO\fP)
.TP
.B The members of \fBDBusVMStateProperties\fP when \fBqom\-type\fP is \fB"dbus\-vmstate"\fP
.TP
.B The members of \fBFilterBufferProperties\fP when \fBqom\-type\fP is \fB"filter\-buffer"\fP
.TP
.B The members of \fBFilterDumpProperties\fP when \fBqom\-type\fP is \fB"filter\-dump"\fP
.TP
.B The members of \fBFilterMirrorProperties\fP when \fBqom\-type\fP is \fB"filter\-mirror"\fP
.TP
.B The members of \fBFilterRedirectorProperties\fP when \fBqom\-type\fP is \fB"filter\-redirector"\fP
.TP
.B The members of \fBNetfilterProperties\fP when \fBqom\-type\fP is \fB"filter\-replay"\fP
.TP
.B The members of \fBFilterRewriterProperties\fP when \fBqom\-type\fP is \fB"filter\-rewriter"\fP
.TP
.B The members of \fBInputBarrierProperties\fP when \fBqom\-type\fP is \fB"input\-barrier"\fP
.TP
The members of \fBInputLinuxProperties\fP when \fBqom\-type\fP is \fB"input\-linux"\fP (\fBIf: \fP\fBCONFIG_LINUX\fP)
.TP
.B The members of \fBIothreadProperties\fP when \fBqom\-type\fP is \fB"iothread"\fP
.TP
.B The members of \fBMainLoopProperties\fP when \fBqom\-type\fP is \fB"main\-loop"\fP
.TP
The members of \fBMemoryBackendEpcProperties\fP when \fBqom\-type\fP is \fB"memory\-backend\-epc"\fP (\fBIf: \fP\fBCONFIG_LINUX\fP)
.TP
.B The members of \fBMemoryBackendFileProperties\fP when \fBqom\-type\fP is \fB"memory\-backend\-file"\fP
.TP
The members of \fBMemoryBackendMemfdProperties\fP when \fBqom\-type\fP is \fB"memory\-backend\-memfd"\fP (\fBIf: \fP\fBCONFIG_LINUX\fP)
.TP
.B The members of \fBMemoryBackendProperties\fP when \fBqom\-type\fP is \fB"memory\-backend\-ram"\fP
.TP
The members of \fBPrManagerHelperProperties\fP when \fBqom\-type\fP is \fB"pr\-manager\-helper"\fP (\fBIf: \fP\fBCONFIG_LINUX\fP)
.TP
.B The members of \fBQtestProperties\fP when \fBqom\-type\fP is \fB"qtest"\fP
.TP
.B The members of \fBRngProperties\fP when \fBqom\-type\fP is \fB"rng\-builtin"\fP
.TP
.B The members of \fBRngEgdProperties\fP when \fBqom\-type\fP is \fB"rng\-egd"\fP
.TP
The members of \fBRngRandomProperties\fP when \fBqom\-type\fP is \fB"rng\-random"\fP (\fBIf: \fP\fBCONFIG_POSIX\fP)
.TP
.B The members of \fBSecretProperties\fP when \fBqom\-type\fP is \fB"secret"\fP
.TP
The members of \fBSecretKeyringProperties\fP when \fBqom\-type\fP is \fB"secret_keyring"\fP (\fBIf: \fP\fBCONFIG_SECRET_KEYRING\fP)
.TP
.B The members of \fBSevGuestProperties\fP when \fBqom\-type\fP is \fB"sev\-guest"\fP
.TP
.B The members of \fBThreadContextProperties\fP when \fBqom\-type\fP is \fB"thread\-context"\fP
.TP
.B The members of \fBThrottleGroupProperties\fP when \fBqom\-type\fP is \fB"throttle\-group"\fP
.TP
.B The members of \fBTlsCredsAnonProperties\fP when \fBqom\-type\fP is \fB"tls\-creds\-anon"\fP
.TP
.B The members of \fBTlsCredsPskProperties\fP when \fBqom\-type\fP is \fB"tls\-creds\-psk"\fP
.TP
.B The members of \fBTlsCredsX509Properties\fP when \fBqom\-type\fP is \fB"tls\-creds\-x509"\fP
.TP
.B The members of \fBTlsCredsProperties\fP when \fBqom\-type\fP is \fB"tls\-cipher\-suites"\fP
.TP
.B The members of \fBRemoteObjectProperties\fP when \fBqom\-type\fP is \fB"x\-remote\-object"\fP
.TP
.B The members of \fBVfioUserServerProperties\fP when \fBqom\-type\fP is \fB"x\-vfio\-user\-server"\fP
.UNINDENT
.SS Since
.sp
6.0
.SS \fBobject\-add\fP (Command)
.sp
Create a QOM object.
.SS Arguments
.INDENT 0.0
.TP
.B The members of \fBObjectOptions\fP
.UNINDENT
.SS Returns
.sp
Nothing on success
Error if \fBqom\-type\fP is not a valid class name
.SS Since
.sp
2.0
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { "execute": "object\-add",
     "arguments": { "qom\-type": "rng\-random", "id": "rng1",
                    "filename": "/dev/hwrng" } }
<\- { "return": {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBobject\-del\fP (Command)
.sp
Remove a QOM object.
.SS Arguments
.INDENT 0.0
.TP
.B \fBid\fP: \fBstring\fP
the name of the QOM object to remove
.UNINDENT
.SS Returns
.sp
Nothing on success
Error if \fBid\fP is not a valid id for a QOM object
.SS Since
.sp
2.0
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { "execute": "object\-del", "arguments": { "id": "rng1" } }
<\- { "return": {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.SH TRANSACTIONS
.SS \fBAbort\fP (Object)
.sp
This action can be used to test transaction failure.
.SS Since
.sp
1.6
.SS \fBActionCompletionMode\fP (Enum)
.sp
An enumeration of Transactional completion modes.
.SS Values
.INDENT 0.0
.TP
.B \fBindividual\fP
Do not attempt to cancel any other Actions if any Actions fail
after the Transaction request succeeds. All Actions that
can complete successfully will do so without waiting on others.
This is the default.
.TP
.B \fBgrouped\fP
If any Action fails after the Transaction succeeds, cancel all
Actions. Actions do not complete until all Actions are ready to
complete. May be rejected by Actions that do not support this
completion mode.
.UNINDENT
.SS Since
.sp
2.5
.SS \fBTransactionActionKind\fP (Enum)
.SS Values
.INDENT 0.0
.TP
.B \fBabort\fP
Since 1.6
.TP
.B \fBblock\-dirty\-bitmap\-add\fP
Since 2.5
.TP
.B \fBblock\-dirty\-bitmap\-remove\fP
Since 4.2
.TP
.B \fBblock\-dirty\-bitmap\-clear\fP
Since 2.5
.TP
.B \fBblock\-dirty\-bitmap\-enable\fP
Since 4.0
.TP
.B \fBblock\-dirty\-bitmap\-disable\fP
Since 4.0
.TP
.B \fBblock\-dirty\-bitmap\-merge\fP
Since 4.0
.TP
.B \fBblockdev\-backup\fP
Since 2.3
.TP
.B \fBblockdev\-snapshot\fP
Since 2.5
.TP
.B \fBblockdev\-snapshot\-internal\-sync\fP
Since 1.7
.TP
.B \fBblockdev\-snapshot\-sync\fP
since 1.1
.TP
.B \fBdrive\-backup\fP
Since 1.6
.UNINDENT
.SS Features
.INDENT 0.0
.TP
.B \fBdeprecated\fP
Member \fBdrive\-backup\fP is deprecated.  Use member
\fBblockdev\-backup\fP instead.
.UNINDENT
.SS Since
.sp
1.1
.SS \fBAbortWrapper\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBdata\fP: \fBAbort\fP
Not documented
.UNINDENT
.SS Since
.sp
1.6
.SS \fBBlockDirtyBitmapAddWrapper\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBdata\fP: \fBBlockDirtyBitmapAdd\fP
Not documented
.UNINDENT
.SS Since
.sp
2.5
.SS \fBBlockDirtyBitmapWrapper\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBdata\fP: \fBBlockDirtyBitmap\fP
Not documented
.UNINDENT
.SS Since
.sp
2.5
.SS \fBBlockDirtyBitmapMergeWrapper\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBdata\fP: \fBBlockDirtyBitmapMerge\fP
Not documented
.UNINDENT
.SS Since
.sp
4.0
.SS \fBBlockdevBackupWrapper\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBdata\fP: \fBBlockdevBackup\fP
Not documented
.UNINDENT
.SS Since
.sp
2.3
.SS \fBBlockdevSnapshotWrapper\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBdata\fP: \fBBlockdevSnapshot\fP
Not documented
.UNINDENT
.SS Since
.sp
2.5
.SS \fBBlockdevSnapshotInternalWrapper\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBdata\fP: \fBBlockdevSnapshotInternal\fP
Not documented
.UNINDENT
.SS Since
.sp
1.7
.SS \fBBlockdevSnapshotSyncWrapper\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBdata\fP: \fBBlockdevSnapshotSync\fP
Not documented
.UNINDENT
.SS Since
.sp
1.1
.SS \fBDriveBackupWrapper\fP (Object)
.SS Members
.INDENT 0.0
.TP
.B \fBdata\fP: \fBDriveBackup\fP
Not documented
.UNINDENT
.SS Since
.sp
1.6
.SS \fBTransactionAction\fP (Object)
.sp
A discriminated record of operations that can be performed with
\fBtransaction\fP\&.
.SS Members
.INDENT 0.0
.TP
.B \fBtype\fP: \fBTransactionActionKind\fP
Not documented
.TP
.B The members of \fBAbortWrapper\fP when \fBtype\fP is \fB"abort"\fP
.TP
.B The members of \fBBlockDirtyBitmapAddWrapper\fP when \fBtype\fP is \fB"block\-dirty\-bitmap\-add"\fP
.TP
.B The members of \fBBlockDirtyBitmapWrapper\fP when \fBtype\fP is \fB"block\-dirty\-bitmap\-remove"\fP
.TP
.B The members of \fBBlockDirtyBitmapWrapper\fP when \fBtype\fP is \fB"block\-dirty\-bitmap\-clear"\fP
.TP
.B The members of \fBBlockDirtyBitmapWrapper\fP when \fBtype\fP is \fB"block\-dirty\-bitmap\-enable"\fP
.TP
.B The members of \fBBlockDirtyBitmapWrapper\fP when \fBtype\fP is \fB"block\-dirty\-bitmap\-disable"\fP
.TP
.B The members of \fBBlockDirtyBitmapMergeWrapper\fP when \fBtype\fP is \fB"block\-dirty\-bitmap\-merge"\fP
.TP
.B The members of \fBBlockdevBackupWrapper\fP when \fBtype\fP is \fB"blockdev\-backup"\fP
.TP
.B The members of \fBBlockdevSnapshotWrapper\fP when \fBtype\fP is \fB"blockdev\-snapshot"\fP
.TP
.B The members of \fBBlockdevSnapshotInternalWrapper\fP when \fBtype\fP is \fB"blockdev\-snapshot\-internal\-sync"\fP
.TP
.B The members of \fBBlockdevSnapshotSyncWrapper\fP when \fBtype\fP is \fB"blockdev\-snapshot\-sync"\fP
.TP
.B The members of \fBDriveBackupWrapper\fP when \fBtype\fP is \fB"drive\-backup"\fP
.UNINDENT
.SS Since
.sp
1.1
.SS \fBTransactionProperties\fP (Object)
.sp
Optional arguments to modify the behavior of a Transaction.
.SS Members
.INDENT 0.0
.TP
.B \fBcompletion\-mode\fP: \fBActionCompletionMode\fP (optional)
Controls how jobs launched asynchronously by
Actions will complete or fail as a group.
See \fBActionCompletionMode\fP for details.
.UNINDENT
.SS Since
.sp
2.5
.SS \fBtransaction\fP (Command)
.sp
Executes a number of transactionable QMP commands atomically. If any
operation fails, then the entire set of actions will be abandoned and the
appropriate error returned.
.sp
For external snapshots, the dictionary contains the device, the file to use for
the new snapshot, and the format.  The default format, if not specified, is
qcow2.
.sp
Each new snapshot defaults to being created by QEMU (wiping any
contents if the file already exists), but it is also possible to reuse
an externally\-created file.  In the latter case, you should ensure that
the new image file has the same contents as the current one; QEMU cannot
perform any meaningful check.  Typically this is achieved by using the
current image file as the backing file for the new image.
.sp
On failure, the original disks pre\-snapshot attempt will be used.
.sp
For internal snapshots, the dictionary contains the device and the
snapshot\(aqs name.  If an internal snapshot matching name already exists,
the request will be rejected.  Only some image formats support it, for
example, qcow2, and rbd,
.sp
On failure, qemu will try delete the newly created internal snapshot in the
transaction.  When an I/O error occurs during deletion, the user needs to fix
it later with qemu\-img or other command.
.SS Arguments
.INDENT 0.0
.TP
.B \fBactions\fP: \fBarray of TransactionAction\fP
List of \fBTransactionAction\fP;
information needed for the respective operations.
.TP
.B \fBproperties\fP: \fBTransactionProperties\fP (optional)
structure of additional options to control the
execution of the transaction. See \fBTransactionProperties\fP
for additional detail.
.UNINDENT
.SS Returns
.sp
nothing on success
.sp
Errors depend on the operations of the transaction
.SS Note
.sp
The transaction aborts on the first failure.  Therefore, there will be
information on only one failed operation returned in an error condition, and
subsequent actions will not have been attempted.
.SS Since
.sp
1.1
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-> { "execute": "transaction",
     "arguments": { "actions": [
         { "type": "blockdev\-snapshot\-sync", "data" : { "device": "ide\-hd0",
                                     "snapshot\-file": "/some/place/my\-image",
                                     "format": "qcow2" } },
         { "type": "blockdev\-snapshot\-sync", "data" : { "node\-name": "myfile",
                                     "snapshot\-file": "/some/place/my\-image2",
                                     "snapshot\-node\-name": "node3432",
                                     "mode": "existing",
                                     "format": "qcow2" } },
         { "type": "blockdev\-snapshot\-sync", "data" : { "device": "ide\-hd1",
                                     "snapshot\-file": "/some/place/my\-image2",
                                     "mode": "existing",
                                     "format": "qcow2" } },
         { "type": "blockdev\-snapshot\-internal\-sync", "data" : {
                                     "device": "ide\-hd2",
                                     "name": "snapshot0" } } ] } }
<\- { "return": {} }
.ft P
.fi
.UNINDENT
.UNINDENT
.SH COPYRIGHT
2022, The QEMU Project Developers
.\" Generated by docutils manpage writer.
.
